<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>hp12c</title>
 <link href="http://melborne.github.io/atom.xml" rel="self"/>
 <link href="http://melborne.github.io"/>
 <updated>2013-12-13T23:02:20+09:00</updated>
 <id>http://melborne.github.io</id>
 <author>
   <name>kyoendo</name>
   <email>postagie@gmail.com</email>
 </author>

 
 <entry>
   <title>「Macのターミナルで雪が降る」をカラー化した。翻訳した。</title>
   <link href="http://melborne.github.io/2013/12/13/translate-let-it-snow-in-the-terminal"/>
   <updated>2013-12-13T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/13/translate-let-it-snow-in-the-terminal</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/RyoAnna/20131211/1386769871&quot; title=&quot;Macのターミナルで雪が降る ～ 最後のホワイトクリスマス - #RyoAnnaBlog&quot;&gt;こちらの記事&lt;/a&gt;でターミナルで雪を降らせるRubyスクリプトを知る。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://osxdaily.com/2013/12/06/snow-terminal-mac-os-x-command/&quot; title=&quot;Let it Snow in the Terminal of Mac OS X with This Command&quot;&gt;Let it Snow in the Terminal of Mac OS X with This Command&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;そのスクリプト。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &#39;C=`stty size`.scan(/\d+/)[1].to_i;S=[&quot;2743&quot;.to_i(16)].pack(&quot;U*&quot;);a={};puts &quot;\033[2J&quot;;loop{a[rand(C)]=0;a.each{|x,o|;a[x]+=1;print &quot;\033[#{o};#{x}H \033[#{a[x]};#{x}H#{S} \033[0;0H&quot;};$stdout.flush;sleep 0.1}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;感動した。&lt;/p&gt;

&lt;p&gt;カラー化した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &#39;C=`stty size`.scan(/\d+/)[1].to_i;S=[&quot;2743&quot;.to_i(16)].pack(&quot;U*&quot;);a={};puts &quot;\033[2J&quot;;loop{a[rand(C)]=0;a.each{|x,o|;a[x]+=1;print &quot;\033[#{o};#{x}H \033[#{[*31..37].sample}m \033[#{a[x]};#{x}H#{S} \033[0;0H \033[0m&quot;};$stdout.flush;sleep 0.1}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;http://gifzo.net/7WE3pRFQzH.gif&quot; alt=&quot;snow noshadow&quot; /&gt;
Hosted by &lt;a href=&quot;http://gifzo.net/&quot; title=&quot;Gifzo - 宇宙一簡単なスクリーンキャスト共有&quot;&gt;Gifzo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;雪じゃない。&lt;/p&gt;

&lt;p&gt;翻訳もした。&lt;/p&gt;

&lt;div&gt;&lt;script src=&#39;https://gist.github.com/7928434.js?file=&#39;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;You are being &amp;lt;a href=&amp;quot;https://github.com/gist/7928434&amp;quot;&amp;gt;redirected&amp;lt;/a&amp;gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ</title>
   <link href="http://melborne.github.io/2013/12/13/minimum-step-for-deplying-websocket-app-to-heroku"/>
   <updated>2013-12-13T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/13/minimum-step-for-deplying-websocket-app-to-heroku</id>
   <content type="html">&lt;p&gt;「テレビ放送が駄目になった」と言われて久しいですがその理由ははっきりしています。それは放送というものがリアルタイム・コンテンツを扱う媒体だからです。リアルタイム・コンテンツはユーザの自由を奪います。ある番組を見るためにユーザはその時間テレビの前に固定化されます。録画放送番組は字義的にはバッファード・コンテンツ&lt;sup id=&#39;fnref:1&#39;&gt;&lt;a href=&#39;#fn:1&#39; rel=&#39;footnote&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;と言えますが、ユーザがそのコントロール権を持っていないつまりその視聴タイミングの制御を製作者側が持っているので、これはリアルタイム・コンテンツなのです。ユーザの唯一の武器はDVDレコーダによる制約の中のローカルバファリングのみです。&lt;/p&gt;

&lt;p&gt;現在の&lt;strong&gt;Web&lt;/strong&gt;は主としてバッファード・コンテンツを扱う媒体です。バッファード・コンテンツの世界ではユーザは好きな時間に好きなだけコンテンツを視聴できるという自由が与えられます。コンテンツの製作者側・提供者側にそのタイミングをコントロールする自由はありません。ユーザがコンテンツのコントロール権を持っている世界、それが&lt;strong&gt;Web&lt;/strong&gt;なのです。&lt;/p&gt;

&lt;p&gt;その一方でWebにも変化が訪れています。&lt;strong&gt;体験の共有&lt;/strong&gt;に対する回帰です。リアルタイム・コンテンツの消費からバッファード・コンテンツの消費への移行でユーザが失ったもの、それが&lt;strong&gt;体験の共有&lt;/strong&gt;です。体験の共有はコンテンツに対する消費の同時性つまりリアルタイム性を要求します。前述のようにこれはユーザにとっての制約です。しかしユーザは今、この制約の一部を受け入れてでもWeb上での体験の共有を求めるようになってきています。その結果としてWeb上のコンテンツもバッファード・コンテンツから偽リアルタイム・コンテンツにその一部が変質しつつあります。テキストコンテンツは頁という概念を失い、リアルタイム・コミュニケーションのために140文字の言葉のかけらに圧縮されました。&lt;/p&gt;

&lt;p&gt;この変化をWebがすべてを飲み込んでいると見ることもできるでしょう。結局、この世界では誰もコントロール権など持っていない（いらない）、そう理解するのが正しいのかもしれません。&lt;/p&gt;

&lt;p&gt;とか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;そんなわけで、WebSocketです。WebSocketはWebの世界で真のリアルタイムを実現します。そしてその準備は整いつつあります。&lt;/p&gt;

&lt;p&gt;まずは体験です。さあ、次のリンクをクリックして真のリアルタイムの世界を、体験の共有を味わってください！&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;使い方の説明はこちら。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;/2013/12/10/is-this-chat-or-typewriter/&quot; title=&quot;チャット？　タイプライター？　音？　何？&quot;&gt;チャット？　タイプライター？　音？　何？&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;スイマセン...遊びに来てくれる人が少なくて...宣伝...。&lt;/p&gt;

&lt;p&gt;まあ、でもこれがWebSocketによるリアルタイムWebの一サンプルです。リアルタイムWebの世界は未開拓の地です。発想次第でユニークなものが生まれる可能性があります。&lt;/p&gt;

&lt;h2&gt;Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ&lt;/h2&gt;

&lt;p&gt;さて、ここからが本題です。ふぅ。&lt;/p&gt;

&lt;p&gt;Herokuでは現在試験的機能として、WebSocketを可能にするオプションが用意されています。これを使うと&lt;a href=&quot;http://pusher.com/&quot; title=&quot;Pusher | HTML5 WebSocket Powered Realtime Messaging Service&quot;&gt;Pusher&lt;/a&gt;などの外部サービスに頼らずに、HerokuでホスティングされるWebアプリ上でWebSocketの機能を実現できるようになります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/heroku-labs-websockets&quot; title=&quot;Heroku Labs: WebSockets | Heroku Dev Center&quot;&gt;Heroku Labs: WebSockets | Heroku Dev Center&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;加えて、HerokuはRuby（Sinatra）でWebSocketを使ったチャットシステムのサンプル＆デモも公開しています。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/ruby-websockets#deploy&quot; title=&quot;Using WebSockets on Heroku with Ruby | Heroku Dev Center&quot;&gt;Using WebSockets on Heroku with Ruby | Heroku Dev Center&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;で、この記事に従えばWebSocketのアプリを作って公開することが簡単にできるのですが、それでもやっぱり定型的なコードを一つずつ用意するのには骨が折れます。SinatraにはRailsのようなGeneratorもないですし。&lt;/p&gt;

&lt;p&gt;そんなわけで...。&lt;/p&gt;

&lt;p&gt;SinatraでWebSocketを作る際のスケルトンを生成する&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;というGemを作りました:-)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/sinatra_websocket_template&quot; title=&quot;sinatra_websocket_template | RubyGems.org | your community gem host&quot;&gt;sinatra_websocket_template | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/sinatra-websocket-template&quot; title=&quot;melborne/sinatra-websocket-template&quot;&gt;melborne/sinatra-websocket-template&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;は、&lt;code&gt;bundle gem PROJECT&lt;/code&gt;で生成されるファイル群に加えて、上記記事を参考にしたWebSocketに必要なファイル群を生成、出力します。ファイルにはWebSocketを実現するサンプルコードが載っているので、コードを一行も書くこと無くWebSocketの体験ができます。&lt;/p&gt;

&lt;p&gt;以下では、このGemを使ってWebSocketアプリを作る手順および作ったWebアプリをHerokuにデプロイする手順を説明します。&lt;/p&gt;

&lt;h2&gt;STEP1: Sinatra-websocket-templateのインストール&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;をインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% gem install sinatra_websocket_template
Fetching: sinatra_websocket_template-0.0.1.gem (100%)
Successfully installed sinatra_websocket_template-0.0.1
1 gem installed
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;STEP2: プロジェクトの生成&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sinatra_websocket_template&lt;/code&gt;コマンドを実行してサブコマンドを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% sinatra_websocket_template
Commands:
  sinatra_websocket_template help [COMMAND]  # Describe available commands or one specific command
  sinatra_websocket_template new PROJECT     # Creates a skeleton for your project
  sinatra_websocket_template version         # Prints the SinatraWebsocketTemplate&#39;s version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;new&lt;/code&gt;サブコマンドにプロジェクトの名前を渡して、プロジェクトのスケルトンを生成します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sinatra_websocket_template new hello_chat
      create  hello_chat/Procfile
      create  hello_chat/config.ru
      create  hello_chat/lib/app.rb
      create  hello_chat/lib/views/index.haml
      create  hello_chat/lib/public/css/main.css
      create  hello_chat/lib/public/js/application.js
      create  hello_chat/lib/hello_chat/backend.rb
      create  hello_chat/Gemfile
      create  hello_chat/Rakefile
      create  hello_chat/LICENSE.txt
      create  hello_chat/README.md
      create  hello_chat/.gitignore
      create  hello_chat/hello_chat.gemspec
      create  hello_chat/lib/hello_chat.rb
      create  hello_chat/lib/hello_chat/version.rb
Initializating git repo in /Users/keyes/Dropbox/playground/hello_chat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プロジェクトのディレクトリに移動して、生成されたファイル群を確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% cd hello_chat
/hello_chat% tree
.
├── Gemfile
├── LICENSE.txt
├── Procfile
├── README.md
├── Rakefile
├── config.ru
├── hello_chat.gemspec
└── lib
    ├── app.rb
    ├── hello_chat
    │   ├── backend.rb
    │   └── version.rb
    ├── hello_chat.rb
    ├── public
    │   ├── css
    │   │   └── main.css
    │   └── js
    │       └── application.js
    └── views
        └── index.haml

6 directories, 14 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;折角だから、「&lt;a href=&quot;https://rubygems.org/gems/dir_friend&quot; title=&quot;dir_friend&quot;&gt;dir_friend&lt;/a&gt;」を使って、ビジュアライズもします:-)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% dir_friend dot .
&#39;a.dot&#39; created in the current directory.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/12/hello_chat1.png&quot; alt=&quot;hello chat noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（参考：&lt;a href=&quot;/2013/10/31/there-is-a-beauty-in-your-computer/&quot; title=&quot;あなたはファイルシステムに美を見るか？&quot;&gt;あなたはファイルシステムに美を見るか？&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;この中でWebSocketを実現する重要なファイルは、&lt;code&gt;lib/hello_chat/backend.rb&lt;/code&gt;と&lt;code&gt;lib/public/js/application.js&lt;/code&gt;です。中身は後で確認するとして、先に進みます。&lt;/p&gt;

&lt;h2&gt;STEP3: ローカルでのプロジェクトの起動&lt;/h2&gt;

&lt;p&gt;まずは&lt;code&gt;bundle install&lt;/code&gt;します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/hello_chat% bundle install
Fetching gem metadata from https://rubygems.org/...........
Fetching gem metadata from https://rubygems.org/..
Resolving dependencies...
Using rake (10.1.0)
Using bundler (1.3.5)
Using dotenv (0.9.0)
Using eventmachine (1.0.3)
Using websocket-driver (0.3.1)
Using faye-websocket (0.7.1)
Using thor (0.18.1)
Using foreman (0.63.0)
Using tilt (1.4.1)
Using haml (4.0.4)
Using rack (1.5.2)
Using puma (2.7.1)
Using rack-protection (1.5.1)
Using sinatra (1.4.4)
Using hello_chat (0.0.1) from source at /Users/keyes/Dropbox/playground/hello_chat
hello_chat at /Users/keyes/Dropbox/playground/hello_chat did not have a valid gemspec.
This prevents bundler from installing bins or native extensions, but that may not affect its functionality.
The validation message from Rubygems was:
  &quot;FIXME&quot; or &quot;TODO&quot; is not a description

Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アプリケーションに必要なGemsがインストールされました。プロセスマネージャのforemanを通してアプリを起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/hello_chat% bundle exec foreman start
13:37:24 web.1  | started with pid 18722
13:37:27 web.1  | Puma starting in single mode...
13:37:27 web.1  | * Version 2.7.1, codename: Earl of Sandwich Partition
13:37:27 web.1  | * Min threads: 0, max threads: 16
13:37:27 web.1  | * Environment: development
13:37:27 web.1  | * Listening on tcp://0.0.0.0:5000
13:37:27 web.1  | Use Ctrl-C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5000番ポートでサーバが起動したので、２つのブラウザを起動してアクセスします。&lt;/p&gt;

&lt;p&gt;それぞれのブラウザでページ上のHello!ボタンを交互に押してみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/12/hello_chat2.png&quot; alt=&quot;hello chat noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;WebSocketによる通信が成功しています。これでSinatra-websocket-templateで生成されるスケルトンで一応WebSocketが実現できることが確認できました。&lt;/p&gt;

&lt;h2&gt;STEP4: プロジェクトのコードを書く&lt;/h2&gt;

&lt;p&gt;生成されたスケルトンを土台にしてプロジェクトに必要なコードを書きます。あなたの出番です。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt;で準備が完了しました。&lt;/p&gt;

&lt;h2&gt;STEP5: Herokuへデプロイ&lt;/h2&gt;

&lt;p&gt;プロジェクトが完成したのでHerokuにアプリを作ります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% heroku create hellochat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Heroku上のWebSocketの機能を有効にします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% heroku labs:enable websockets
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デプロイです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% git push heroku master
% heroku open
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで完了です。&lt;/p&gt;

&lt;h2&gt;backend.rbとapplication.jsの中身&lt;/h2&gt;

&lt;p&gt;スケルトンにおける&lt;code&gt;backend.rb（WebSocketにおけるサーバー側）&lt;/code&gt;と&lt;code&gt;application.js（クライアント側）&lt;/code&gt;の中身だけ確認してみます。&lt;/p&gt;

&lt;p&gt;backend.rbはRackのミドルウェアとして構成されています。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# backend.rb&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;faye/websocket&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloChat&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Backend&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;KEEPALIVE_TIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Faye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:WebSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;websocket?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Faye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:WebSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KEEPALIVE_TIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:close&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rack_response&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;クライアント側からの通信がWebSocketに係る場合、Backend#callでそのイベントをソケット側にハイジャックし（Faye::WebSocket.websocket?(env)）、ここでそのイベントに応じた処理を返します。例えば、クライアント側からWebSocketに係るメッセージが送信されてきた場合は、これを&lt;code&gt;ws.on :message&lt;/code&gt;で受けて、そのメッセージを全クライントにブロードキャストしています。また、クライアントが立ち上げられたときは、これを&lt;code&gt;ws.on :open&lt;/code&gt;で受けて、そのクライアントに自身の識別ID（object_id）を返すと共に、クライアントの総数をブロードキャストしています。&lt;/p&gt;

&lt;p&gt;次に、&lt;code&gt;application.js&lt;/code&gt;のコードを見ます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// application.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counterRefresh&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#user-counter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appendMessage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#message-box&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;div class=&amp;#39;message&amp;#39;&amp;gt;&amp;lt;span class=&amp;#39;user-id&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;lt;/span&amp;gt; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;/div&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#count-button&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^http/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ws&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;my-message&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;appendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counterRefresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;クライアント側では、WebSocketオブジェクトを生成して&lt;code&gt;ws.onmessage&lt;/code&gt;にサーバー側からのメッセージを受けたときの処理を登録しています。そして受信データに含まれるプロパティに応じて処理を切り分けています。また、&lt;code&gt;Hello!&lt;/code&gt;ボタンがクリックされたときに,&lt;code&gt;ws.send(data)&lt;/code&gt;でサーバー側にメッセージを送信します。&lt;/p&gt;

&lt;p&gt;以上で、説明は終わりです。&lt;/p&gt;

&lt;p&gt;是非とも&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;をベースに何か面白いものを作ってくださいね。&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/ruby_parallel_cover.png&quot; alt=&quot;ruby_parallel&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/rack_cover.png&quot; alt=&quot;rack&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/js_oop_cover.png&quot; alt=&quot;js_oop&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
    &lt;ol&gt;
        &lt;li id=&#39;fn:1&#39;&gt;今勝手に考えた造語です。ユーザがランダムアクセス可能なリソースをイメージしています。 &lt;a href=&#39;#fnref:1&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>チャット？　タイプライター？　音？　何？</title>
   <link href="http://melborne.github.io/2013/12/10/is-this-chat-or-typewriter"/>
   <updated>2013-12-10T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/10/is-this-chat-or-typewriter</id>
   <content type="html">&lt;p&gt;前の記事でチャットのようなタイプライターのようなリアルタイムWebアプリ「&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;」を紹介しました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/09/typewr-new-style-chat-with-websocket/&quot; title=&quot;WebSocketで実現する未来型チャットシステム?!&quot;&gt;WebSocketで実現する未来型チャットシステム?!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;で、今回これにタイプ音を付けてみましたのでお知らせします。タイプライター経験者も未経験者も是非ともその感覚を味わってください。&lt;/p&gt;

&lt;p&gt;一応、使い方と注意点を書いておきます。&lt;/p&gt;

&lt;h2&gt;Typewrの使い方と注意点&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ブラウザ上でタイプするとタイプ音とともに一つの表示領域に文字が入力されていきます。タイプした文字はそのページを開いている他のユーザの表示領域にも同じように表示されます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;複数のユーザからの入力があると文字が混在して先の表示領域に入力されていきます。ユーザ毎に異なる文字色が使われるので、それによって辛うじてユーザ単位の入力が識別できます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Vimperatorなどのキー入力を奪うExtensionを使っている場合は、これをOFFにする必要があります。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文字を消すにはBackSpace（delete）キーを押します。BackSpaceを押し続けると他の人の入力を含めて文字が一つづつ消されていきます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ChromeではBackSpaceは「戻る」に固定され、変更できません。自分の環境（Mac）では代わりに&lt;code&gt;Ctrl+h&lt;/code&gt;が使えているのですが、使えない人もいるようです。解決策は今のところありません。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FireFoxでもBackSpaceは「戻る」ですが、設定でこれを無効にすることができます。設定方法は以下の記事が参考になります。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SafariではBackSpaceもCtrl+hも効いています。IEについてはわかりません。ごめんなさい。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://mozilla-remix.seesaa.net/article/128191783.html&quot; title=&quot;Mozilla Re-Mix: Firefoxで[Backspace]キーを押したときの挙動を変更する方法。&quot;&gt;Mozilla Re-Mix: Firefoxで[Backspace]キーを押したときの挙動を変更する方法。&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;以上です。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>WebSocketで実現する未来型チャットシステム?!</title>
   <link href="http://melborne.github.io/2013/12/09/typewr-new-style-chat-with-websocket"/>
   <updated>2013-12-09T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/09/typewr-new-style-chat-with-websocket</id>
   <content type="html">&lt;p&gt;Herokuで&lt;a href=&quot;http://pusher.com/&quot; title=&quot;Pusher | HTML5 WebSocket Powered Realtime Messaging Service&quot;&gt;Pusher&lt;/a&gt;を使わずにWebSocketが利用できるということを知ったので&lt;a href=&quot;https://devcenter.heroku.com/articles/ruby-websockets&quot; title=&quot;Using WebSockets on Heroku with Ruby | Heroku Dev Center&quot;&gt;ここ&lt;/a&gt;を参考に面白いものできないかと弄ってたらなんか不思議なチャットシステム？が出来上がったので暇で誰か知らない人と匿名でチャットというかタイピングのやりとりというか邪魔し合いというかまあ恐らく未体験な人と人との繋がりの類を経験したい方居られましたら是非とも来て見て触ってみてできたら感想などをTwitterとかでつぶやいてくれたら大変にうれしく思います。VimperatorとかのExtensionをOFFにして。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ソースはこちら。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/typewr&quot; title=&quot;melborne/typewr&quot;&gt;melborne/typewr&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;併せて、Server-sent Eventsを使った姉妹品もどうぞよろしく。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/06/come-join-ototwe/&quot; title=&quot;つぶやきで合奏したいだと？そんなやつは一昨日（おとつい）きやがれ！&quot;&gt;つぶやきで合奏したいだと？そんなやつは一昨日（おとつい）きやがれ！&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/ruby_parallel_cover.png&quot; alt=&quot;ruby_parallel&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/rack_cover.png&quot; alt=&quot;rack&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/js_oop_cover.png&quot; alt=&quot;js_oop&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>つぶやきで合奏したいだと？そんなやつは一昨日（おとつい）きやがれ！</title>
   <link href="http://melborne.github.io/2013/12/06/come-join-ototwe"/>
   <updated>2013-12-06T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/06/come-join-ototwe</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.adventar.org/calendars/95&quot;&gt;FuniSaya Advent Calendar 2013&lt;/a&gt;６日目です。昨日は&lt;a href=&quot;http://www.adventar.org/users/1306&quot; title=&quot;あるる 日下部 - Adventar&quot;&gt;あるる 日下部&lt;/a&gt;さんの&lt;a href=&quot;http://arlerlyeh.blog.fc2.com/blog-entry-12.html&quot;&gt;海底都市 冬コミ&lt;/a&gt;でした。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;音楽を作る才能には恵まれなかったので楽器を作ることにしました。「おとつい（OtoTwe）」という楽器です。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://ototwe.herokuapp.com/&quot; title=&quot;OtoTwe&quot;&gt;OtoTwe : http://ototwe.herokuapp.com/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;OtoTweの楽しみ方&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;コンピュータにヘッドホンを繋いで耳に当てる。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「&lt;a href=&quot;http://ototwe.herokuapp.com/&quot; title=&quot;OtoTwe&quot;&gt;OtoTwe&lt;/a&gt;」をChromeかFirefoxかSafariで開く。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;いつも使っているTwitterクライアントを起動する（iPhoneとかのもので構いません）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Twitterクライアントで「これが俺の叫びだ！ #ototwe #C3」などと打ち込む。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OtoTweにおける&lt;code&gt;Audiences&lt;/code&gt;の数を横目で確認しつつ&lt;sup id=&#39;fnref:1&#39;&gt;&lt;a href=&#39;#fn:1&#39; rel=&#39;footnote&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;、つぶやきをツイートする。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OtoTweから流れる音に耳を傾ける（表示されるつぶやきを見ながら）。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;または&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;上記1, 2に同じ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;誰かが上記3〜5に従いツイートするのを辛抱強く待つ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上記６に同じ。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;または&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;適当な楽曲の適当な小節を選ぶ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;選んだ小節内の音数に相応する暇な友人を見つける。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小節内の各音を各友人に割り当てる。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;楽曲のテンポに基づき各友人のツイート時間を決定する。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全員の時計を合わせて指定時間でのツイートを依頼する。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;今まで築いてきた友人との信頼関係を信じつつOtoTweの前で時間が来るのを待つ。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;※期待通りの結果が得られないことがあります。&lt;/p&gt;

&lt;h2&gt;ツイートの作法&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;OtoTweで音を鳴らすには、ツイートに二種類のハッシュタグを入れる必要があります。１つはOtoTweを指定する&lt;code&gt;#ototwe&lt;/code&gt;タグです。もう一つは音高を指定するタグです。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;音高を指定するタグは、A〜Gの大文字アルファベットと数字の組で表現します。「#A4」は440Hzのラの音を出力します。半音は間に&lt;code&gt;b&lt;/code&gt;を挟んで「#Eb2」のように半音下げて表現します（シャープは使えません）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;出力できる音域はG1〜C4です。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;音の種類としてはピアノかホルンの音がランダムで出力されます。たまにMusicBox(?)の音も出ます。音の種類を指定したい場合は、音高タグの数字の後にp(ピアノ)かh(ホルン)を付けます（ex. #C3p #A3h）。m(MusicBox)も有効ですが、音域はC3〜C4の幹音に限られています。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「#C3Eb3G3」などと複数の音を一度に渡すと、和音や連音が気まぐれで再生されます（実装が悪いためです）。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ハッシュタグ以外のツイートの内容は音に影響しませんが、スクリーンネームと共にOtoTwe上で5秒程度晒されます。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;OtoTweのしくみ&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/12/ototwe1.png&quot; alt=&quot;ototwe noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OtoTweはHTML5における&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Server-sent_events&quot; title=&quot;Server-sent events | MDN&quot;&gt;Server-sent events&lt;/a&gt;というしくみを使っています。Server-sent eventsでは、サーバーとクライアントのコネクションは維持され、これによりクライアントからのリクエストを待たずに任意のタイミングでサーバー側からデータを投げられるようになります。OtoTweではTwitterのStreaming APIからデータが送られてきたタイミングで全クライアントに向けてデータをブロードキャストしています。&lt;/p&gt;

&lt;p&gt;音の再生はWeb Audio APIを使ってmp3またはoggファイルを読みだして再生しています。もっとスムーズな再生を実現するにはここを工夫する必要があるんでしょうね（JavaScriptむずかしぃ...）。音は初めてのGarageBandでシコシコと作りました。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;ソースは以下にあります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/ototwe&quot; title=&quot;melborne/ototwe&quot;&gt;melborne/ototwe&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;どれくらいのコネクションを捌けるのか全くわかりませんけど、固まってたらゴメンナサイ！&lt;/p&gt;

&lt;p&gt;そんなわけで...&lt;/p&gt;

&lt;p&gt;つぶやきで合奏したい人は「&lt;a href=&quot;http://ototwe.herokuapp.com/&quot; title=&quot;OtoTwe&quot;&gt;OtoTwe&lt;/a&gt;」に来てくださいね :-)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://www.adventar.org/calendars/95&quot;&gt;FuniSaya Advent Calendar 2013&lt;/a&gt; 明日は&lt;a href=&quot;http://www.adventar.org/users/974&quot; title=&quot;りひにー - Adventar&quot;&gt;りひにー&lt;/a&gt;さんです！&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
    &lt;ol&gt;
        &lt;li id=&#39;fn:1&#39;&gt;離席したユーザの更新に著しい遅延があります.. &lt;a href=&#39;#fnref:1&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>iTuneの音楽ライブラリにアクセスしてCSV化できる「iTunesTrack」の紹介</title>
   <link href="http://melborne.github.io/2013/11/20/introduce-itunestrack-gem"/>
   <updated>2013-11-20T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/11/20/introduce-itunestrack-gem</id>
   <content type="html">&lt;p&gt;前の記事では&lt;code&gt;iTunesTrack&lt;/code&gt;を使ってiTunesから音楽データを抽出しWebアプリ化する手順を説明しました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;/2013/11/19/build-a-database-for-itunes-music-data/&quot; title=&quot;iTunes.appの音楽ライブラリを最速でWebアプリにするたった３つのステップ&quot;&gt;iTunes.appの音楽ライブラリを最速でWebアプリにするたった３つのステップ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ここでは&lt;code&gt;iTunesTrack&lt;/code&gt;の詳細を説明します。対象バージョンは0.0.1です。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/itunes_track&quot; title=&quot;itunes_track | RubyGems.org | your community gem host&quot;&gt;itunes_track | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/itunes_track&quot; title=&quot;melborne/itunes_track&quot;&gt;melborne/itunes_track&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ターミナルでの使い方&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;gem install itunes_track&lt;/code&gt;でインストールすると、&lt;code&gt;itunes_track&lt;/code&gt;ターミナルコマンドが使えるようになります。サブコマンドを渡さなければそのヘルプが表示されます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% itunes_track
Commands:
  itunes_track csv PATH        &lt;span class=&quot;c&quot;&gt;# Create CSV file from tracks data&lt;/span&gt;
  itunes_track &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;COMMAND&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Describe available commands or one specific command&lt;/span&gt;
  itunes_track size &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ARTIST&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# Show track size for ARTIST match&lt;/span&gt;
  itunes_track tracks          &lt;span class=&quot;c&quot;&gt;# Show tracks&lt;/span&gt;
  itunes_track version         &lt;span class=&quot;c&quot;&gt;# Show ItunesTrack version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;size&lt;/code&gt;サブコマンドは、引数で渡したARTISTにマッチするトラックの数を返します。引数を省略すると全楽曲数が返ります。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% itunes_track size sixpence
47
% itunes_track size
1091
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tracks&lt;/code&gt;サブコマンドは楽曲一覧を表示するもので、&lt;code&gt;--artist&lt;/code&gt;と&lt;code&gt;--album&lt;/code&gt;というオプションを取れます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% itunes_track &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;tracks
Usage:
  itunes_track tracks

Options:
  -a, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--artist&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ARTIST&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  -l, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--album&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ALBUM&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Show tracks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;% itunes_track tracks -a sixpence -l &#39;Best Of&#39;
 Kiss Me 3:29 Sixpence None The Richer The Best Of Sixpence None The Richer 36
 Loser Like Me 3:33 Sixpence None The Richer The Best Of Sixpence None The Richer 53
 Need To Be Next To You 4:07 Sixpence None The Richer The Best Of Sixpence None The Richer 51
 Breathe 4:05 Sixpence None The Richer The Best Of Sixpence None The Richer 53
 Dancing Queen 4:02 Sixpence None The Richer The Best Of Sixpence None The Richer 46
 Melody Of You 4:50 Sixpence None The Richer The Best Of Sixpence None The Richer 42
 I Can&#39;t Catch You 4:12 Sixpence None The Richer The Best Of Sixpence None The Richer 38
 I Just Wasn&#39;t Made For These Times 3:02 Sixpence None The Richer The Best Of Sixpence None The Richer 57
 There She Goes 2:43 Sixpence None The Richer The Best Of Sixpence None The Richer 44
 Don&#39;t Dream It&#39;s Over 4:02 Sixpence None The Richer The Best Of Sixpence None The Richer 45
 I Need Love 4:12 Sixpence None The Richer The Best Of Sixpence None The Richer 54
 Breathe Your Name 3:56 Sixpence None The Richer The Best Of Sixpence None The Richer 37
 Us 4:22 Sixpence None The Richer The Best Of Sixpence None The Richer 42
 The Ground You Shook 4:18 Sixpence None The Richer The Best Of Sixpence None The Richer 42
 Too Far Gone 6:37 Sixpence None The Richer The Best Of Sixpence None The Richer 45
 Waiting On The Sun 2:52 Sixpence None The Richer The Best Of Sixpence None The Richer 46
 Brighten My Heart 4:38 Sixpence None The Richer The Best Of Sixpence None The Richer 44
 Trust 3:21 Sixpence None The Richer The Best Of Sixpence None The Richer 44
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;現状、カラー化できていないので非常に見づらいものとなっています^ ^;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;csv&lt;/code&gt;サブコマンドは、抽出したトラックデータをCSVファイルに保存するためのコマンドです。対象フィールドを指定する&lt;code&gt;--fields&lt;/code&gt;とアーティストを特定する&lt;code&gt;--artist&lt;/code&gt;オプションがあります。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% itunes_track &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;csv
Usage:
  itunes_track csv PATH

Options:
  -f, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--fields&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FIELDS&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
                         &lt;span class=&quot;c&quot;&gt;# Default: name,time,artist,album,genre,rating,played_count,year,composer,track_count,track_number,disc_count,disc_number,lyrics&lt;/span&gt;
  -a, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--artist&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ARTIST&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Create CSV file from tracks data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;次のように使います。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% itunes_track csv sixpence.csv -a sixpence -f name,artist,album,year
I am working on csv...
CSV file successfully created at sixpence.csv.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下のようなファイルが出来上がります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;name,artist,album,year
Kiss Me,Sixpence None The Richer,The Best Of Sixpence None The Richer,1999
Loser Like Me,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Need To Be Next To You,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Breathe,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Dancing Queen,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Melody Of You,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
I Can&#39;t Catch You,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
I Just Wasn&#39;t Made For These Times,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
There She Goes,Sixpence None The Richer,The Best Of Sixpence None The Richer,1997
Don&#39;t Dream It&#39;s Over,Sixpence None The Richer,The Best Of Sixpence None The Richer,2002
I Need Love,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Breathe Your Name,Sixpence None The Richer,The Best Of Sixpence None The Richer,2002
Us,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
The Ground You Shook,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Too Far Gone,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Waiting On The Sun,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Brighten My Heart,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
Trust,Sixpence None The Richer,The Best Of Sixpence None The Richer,2004
 .
 .
 .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Rubyスクリプトでの使い方&lt;/h2&gt;

&lt;p&gt;ItunesTrackクラスは次のようなクラスメソッドを持っています。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;sx&quot;&gt;% irb &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ritunes_track&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;IRB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ruby2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ItunesTrack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [:build, :full_build, :tracks, :itunes, :itunes_tracks, :size, :track_properties, :to_csv]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;.size&lt;/code&gt;メソッドは楽曲数を返しますが、条件を指定したブロックを取ることができます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ItunesTrack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/jazz/i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; 66&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ItunesTrack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/hello/i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;rb-appscript&lt;/code&gt;の仕様上、メソッドの最後で&lt;code&gt;get&lt;/code&gt;する必要があります（イケてない）。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.build&lt;/code&gt;メソッドは対象のタグ（フィールド）を指定して、ブロックで渡した条件のトラックのリストを生成し&lt;code&gt;tracks&lt;/code&gt;変数に格納します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ItunesTrack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Adele&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#&amp;lt;ItunesTrack::Track name=&amp;quot;Daydreamer&amp;quot;, time=&amp;quot;3:40&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;Best For Last&amp;quot;, time=&amp;quot;4:18&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;Chasing Pavements&amp;quot;, time=&amp;quot;3:30&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;Cold Shoulder&amp;quot;, time=&amp;quot;3:11&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;Crazy For You&amp;quot;, time=&amp;quot;3:28&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;Melt My Heart To Stone&amp;quot;, time=&amp;quot;3:23&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;First Love&amp;quot;, time=&amp;quot;3:10&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, #&amp;lt;ItunesTrack::Track name=&amp;quot;Right As Rain&amp;quot;, time=&amp;quot;3:17&amp;quot;, artist=&amp;quot;Adele&amp;quot;&amp;gt;, ... ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;引数を省略した場合、name, time, artist, album, genre, rating, played_count, year, composer, track_count, track_number, disc_count, disc_number, lyricsを対象にリストを生成します。&lt;code&gt;rb-appscript&lt;/code&gt;でアクセス可能なすべてのタグを取得したい場合は&lt;code&gt;build&lt;/code&gt;に代えて&lt;code&gt;full_build&lt;/code&gt;メソッドを使います。楽曲数が多い場合、生成に時間がかかることを覚悟します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.to_csv&lt;/code&gt;メソッドはbuildしたデータをcsvファイルに保存します。第２引数でCSV化するフィールドを更に限定することもできます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ItunesTrack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;adele.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:album&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;大体以上です。&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/02/ruby_object_cover.png&quot; alt=&quot;ruby_object&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/04/ruby_tutorial_cover.png&quot; alt=&quot;ruby_tutorial&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/03/ruby_trivia_cover.png&quot; alt=&quot;ruby_trivia&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>iTunes.appの音楽ライブラリを最速でWebアプリにするたった３つのステップ</title>
   <link href="http://melborne.github.io/2013/11/19/build-a-database-for-itunes-music-data"/>
   <updated>2013-11-19T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/11/19/build-a-database-for-itunes-music-data</id>
   <content type="html">&lt;p&gt;意味もなく&lt;code&gt;iTunes.app&lt;/code&gt;に入ってる音楽ライブラリをブラウザ上に表示したいという衝動に駆られる。&lt;/p&gt;

&lt;p&gt;手始めに音楽ファイルからメタ情報を取るライブラリがないか探してみる。次のようなものが見つかる。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/arbarlow/ruby-mp4info&quot; title=&quot;arbarlow/ruby-mp4info&quot;&gt;arbarlow/ruby-mp4info&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moumar/ruby-audioinfo&quot; title=&quot;moumar/ruby-audioinfo&quot;&gt;moumar/ruby-audioinfo&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;しかしどういうわけか上手く働かない。&lt;/p&gt;

&lt;p&gt;次にAppleScriptをブリッジしてMacなアプリを操作するための&lt;code&gt;rb-appscript&lt;/code&gt;の存在を思い出す。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/rb-appscript&quot; title=&quot;rb-appscript | RubyGems.org | your community gem host&quot;&gt;rb-appscript | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://appscript.sourceforge.net/rb-appscript/doc/appscript-manual/index.html&quot; title=&quot;rb-appscript manual | Contents&quot;&gt;rb-appscript manual | Contents&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;iTunesを操作できるんだから情報くらいとれるに違いない。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;sx&quot;&gt;% irb &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rappscript&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;IRB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ruby2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Appscript&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; Object&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;iTunes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; app(&amp;quot;/Applications/iTunes.app&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;AirPlay_devices&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;EQ_presets&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;EQ_windows&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;URL_tracks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;application&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;artworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;audio_CD_playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;audio_CD_tracks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;browser_windows&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;encoders&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;file_tracks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;folder_playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;items&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;library_playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;playlist_windows&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;print_settings&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;radio_tuner_playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shared_tracks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sources&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;tracks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;user_playlists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;visuals&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;windows&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tracks&lt;/code&gt;というのが怪しい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracks&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; app(&amp;quot;/Applications/iTunes.app&amp;quot;).tracks&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; app(&amp;quot;/Applications/iTunes.app&amp;quot;).tracks.first&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; Appscript::Reference&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;AirPlay_enabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;EQ&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;EQ_enabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;active&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;album&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;album_artist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;album_rating&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;album_rating_kind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;artist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;available&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_10&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_4&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_5&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_6&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_8&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;band_9&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bit_rate&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bookmark&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bookmarkable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bounds&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bpm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;capacity&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;category&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;class_&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;closeable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;collapseable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;collapsed&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;collating&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;comment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;compilation&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;composer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;converting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;copies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_AirPlay_devices&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_EQ_preset&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_encoder&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_playlist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_stream_URL&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_stream_title&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_track&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;current_visual&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;data_&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;database_ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;date_added&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;disc_count&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;disc_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;downloaded&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;duration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ending_page&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;episode_ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;episode_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;error_handling&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fax_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;finish&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fixed_indexing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;free_space&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;frontmost&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;full_screen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gapless&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;genre&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;grouping&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;iTunesU&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;id_&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;long_description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;lyrics&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;minimized&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;modifiable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;modification_date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;mute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;network_address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;pages_across&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;pages_down&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;parent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;persistent_ID&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;played_count&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;played_date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;player_position&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;player_state&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;podcast&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;position&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;preamp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;printer_features&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;properties_&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rating&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rating_kind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;raw_data&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;release_date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;requested_print_time&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;resizable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sample_rate&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;season_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;selected&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;selection&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shared&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;show&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shufflable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;shuffle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;skipped_count&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;skipped_date&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;smart&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;song_repeat&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sort_album&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sort_album_artist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sort_artist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sort_composer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sort_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sort_show&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sound_volume&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;special_kind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;starting_page&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;supports_audio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;supports_video&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;target_printer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;track_count&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;track_number&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;unplayed&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;update_tracks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;video_kind&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;view&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;visible&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;visual_size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;visuals_enabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;volume_adjustment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;year&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;zoomable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;zoomed&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;思ったとおりだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &amp;quot;S.O.S.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itunes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tracks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &amp;quot;ABBA&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これを使ってまずはCSVファイルを吐くか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;そんなわけで...。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rb-appscript&lt;/code&gt;を使ってiTunesのtrack情報にアクセスする&lt;code&gt;ItunesTrack&lt;/code&gt;というライブラリを作りました:-)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/itunes_track&quot; title=&quot;itunes_track | RubyGems.org | your community gem host&quot;&gt;itunes_track | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/itunes_track&quot; title=&quot;melborne/itunes_track&quot;&gt;melborne/itunes_track&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;ItunesTrack&lt;/code&gt;には&lt;code&gt;to_csv&lt;/code&gt;という抽出した音楽情報をCSVに落とすメソッドがあるので、以下ではこれを使って３ステップでWebアプリを作る手順を説明します。&lt;code&gt;ItunesTrack&lt;/code&gt;の詳しい説明は別の記事にします。&lt;/p&gt;

&lt;h2&gt;STEP1: ItunesTrackでITunesから音楽データを取得しCSV化する&lt;/h2&gt;

&lt;p&gt;ItunesTrackをインストールします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/itunes% gem install itunes_track
Fetching: itunes_track-0.0.1.gem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Successfully installed itunes_track-0.0.1
1 gem installed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでターミナル上でitunes_trackコマンドが使えるようになります。&lt;/p&gt;

&lt;p&gt;まずはitunes_trackコマンドで表示されるhelpを確認します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;itunes% itunes_track
Commands:
  itunes_track csv PATH        &lt;span class=&quot;c&quot;&gt;# Create CSV file from tracks data&lt;/span&gt;
  itunes_track &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;COMMAND&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Describe available commands or one specific command&lt;/span&gt;
  itunes_track size ARTIST     &lt;span class=&quot;c&quot;&gt;# Show track size for ARTIST match&lt;/span&gt;
  itunes_track tracks          &lt;span class=&quot;c&quot;&gt;# Show tracks&lt;/span&gt;
  itunes_track version         &lt;span class=&quot;c&quot;&gt;# Show ItunesTrack version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;size&lt;/code&gt;サブコマンドを使って自分の音楽ライブラリの曲数を数えます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;itunes% itunes_track size
1091
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これくらいならさばけそうなので&lt;code&gt;csv&lt;/code&gt;サブコマンドで全曲をCSV化します。まずはヘルプを読みます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/itunes% itunes_track &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;csv
Usage:
  itunes_track csv PATH

Options:
  -f, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--fields&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FIELDS&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
                         &lt;span class=&quot;c&quot;&gt;# Default: name,time,artist,album,genre,rating,played_count,year,composer,track_count,track_number,disc_count,disc_number,lyrics&lt;/span&gt;
  -a, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--artist&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ARTIST&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Create CSV file from tracks data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;--fields&lt;/code&gt;オプションで抽出するフィールドを限定できるようなので、name, time, artist, album, played_count, lyricsを対象にして、CSVを作ってみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/itunes% itunes_track csv itunes.csv -f name,time,artist,album,played_count,lyrics
I am working on csv...
CSV file successfully created at itunes.csv.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;カレントディレクトリにできた&lt;code&gt;itunes.csv&lt;/code&gt;を開いてみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;name,time,artist,album,played_count,lyrics
S.O.S.,3:23,ABBA,The Piano Songs &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Disc 2&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,76,&lt;span class=&quot;s2&quot;&gt;&amp;quot;Where are those happy...&amp;quot;&lt;/span&gt;
Daydreamer,3:40,Adele,19,13,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Best For Last,4:18,Adele,19,11,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Chasing Pavements,3:30,Adele,19,11,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Cold Shoulder,3:11,Adele,19,12,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Crazy For You,3:28,Adele,19,14,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
  .
  .
  .
Things Will Change,4:53,Audiophil,&lt;span class=&quot;s2&quot;&gt;&amp;quot;Mercedes-Benz Mixed Tape &amp;quot;&amp;quot;Fine Frequencies&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;,22,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Hard Line,6:03,AXMusique,Mercedes-Benz Mixed Tape ‘Cherry Chimes’,60,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
New-Ish,3:14,Azekel ,Mercedes-Benz Mixed Tape ‘Anniversary Bliss’,82,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Oblivious,3:12,Aztec Camera,The Guitar Songs &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Disc 1&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,71,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
Spirit You Are My Cherry Blossom,4:55,Baker,Mercedes-Benz Mixed Tape &lt;span class=&quot;c&quot;&gt;#52,7,&amp;quot;&amp;quot;&lt;/span&gt;
僕たちの将来,6:46,Bank Band,沿志奏逢,79,&lt;span class=&quot;s2&quot;&gt;&amp;quot;あたしたち多分 大丈夫よね...&amp;quot;&lt;/span&gt;
突然の贈り物,6:11,Bank Band,沿志奏逢,78,&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
糸,4:44,Bank Band,沿志奏逢,61,&lt;span class=&quot;s2&quot;&gt;&amp;quot;なぜ　めぐり逢うのかを...&amp;quot;&lt;/span&gt;
  .
  .
  .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;いい感じです。&lt;/p&gt;

&lt;h2&gt;STEP2: CtoDでCSVからデータベース・テーブルを作る&lt;/h2&gt;

&lt;p&gt;CSVができればあとは&lt;code&gt;CtoD&lt;/code&gt;に投げればいいです。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/11/14/introduce-ctod-gem-easyway-to-make-a-database-table/&quot; title=&quot;CSVデータをデータベース化するツール「CtoD」の紹介&quot;&gt;CSVデータをデータベース化するツール「CtoD」の紹介&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;上の記事に従って&lt;code&gt;ctoD export&lt;/code&gt;します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/itunes% ctoD &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;itunes.csv sqlite3://localhost/&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;/itunes.sqlite3
Table &lt;span class=&quot;s1&quot;&gt;&amp;#39;itunes&amp;#39;&lt;/span&gt; created at sqlite3://localhost//Users/keyes/Dropbox/playground/itunes/itunes.sqlite3.
CSV data exported successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sqlite3データベースの完成です。&lt;/p&gt;

&lt;h2&gt;STEP3: SinatraでWebアプリを作る&lt;/h2&gt;

&lt;p&gt;あとはSinatraを使ってRubyのコードを書きます。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/11/11/your-data-from-excel-to-the-web/&quot; title=&quot;Excelデータを最速でWebアプリ(Heroku)にする&amp;lt;del&amp;gt;１０&amp;lt;/del&amp;gt;９のステップ&quot;&gt;Excelデータを最速でWebアプリ(Heroku)にする&lt;del&gt;１０&lt;/del&gt;９のステップ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#app.rb&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;haml&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ctoD&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Itune&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Base&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   &lt;span class=&quot;ss&quot;&gt;CtoD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;sqlite3://localhost/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PWD&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/itunes.sqlite3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/itune&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/itune&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Itune&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:index&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/itune/:id&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# avoid ActiveRecord::ConnectionTimeoutError&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection_pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with_connection&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Itune&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;helpers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Itune&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;columns_long&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/_at$/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;columns_short&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/(_at|lyrics)$/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;__END__&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;@@layout&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;!!!&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;%html&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;  %head&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    %meta{charset:&amp;#39;utf-8&amp;#39;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    %title iTunes Music&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    %link{:href=&amp;gt;&amp;quot;//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css&amp;quot;, :rel=&amp;gt;&amp;quot;stylesheet&amp;quot;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    %script{:src=&amp;gt;&amp;quot;//netdna.bootstrapcdn.com/bootstrap/3.0.2/js/bootstrap.min.js&amp;quot;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;  %body&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    .container&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;      != yield&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;@@index&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;%h2 iTunes Music&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;%table.table.table-striped.table-hover.table-bordered&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;  %thead.header&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    - columns_short.each do |t|&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;      %th= t&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;  %tbody&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    - @collection.each do |st|&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;      %tr&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;        - columns_short.each do |t|&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;          - if t==&amp;#39;name&amp;#39;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;            %td&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;              %a{href:&amp;quot;/itune/#{st.id}&amp;quot;}= st[t]&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;          - else&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;            %td= st[t]&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;@@item&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;%h3= @item.name&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;%table.table&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;  - columns_long.each do |t|&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;    %tr&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;      %td= t&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;      %td= @item[t]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;ruby app.rb&lt;/code&gt;して&lt;a href=&quot;http://localhost:4567/itune&quot; title=&quot;iTunes Music&quot;&gt;http://localhost:4567/itune&lt;/a&gt;にアクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/11/itune1.png&quot; alt=&quot;itunes noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;リンクを開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/11/itune2.png&quot; alt=&quot;itunes noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ソートとかフィルタリングとか検索とかの機能がほしいですねぇ。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;(追記：2013-11-20) ItunesTrackの説明記事を書きました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:4000/2013/11/20/introduce-itunestrack-gem/&quot; title=&quot;iTuneの音楽ライブラリにアクセスしてCSV化できる「iTunesTrack」の紹介&quot;&gt;iTuneの音楽ライブラリにアクセスしてCSV化できる「iTunesTrack」の紹介&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/Apple-iTunes-Music-プリペイドカード-MA782J/dp/B000JCENFM?SubscriptionId=06WK2XPKDH9TJJ979P02&amp;tag=keyesblog05-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B000JCENFM&quot;&gt;&lt;img class=&quot;amazon&quot; src=&quot;http://ecx.images-amazon.com/images/I/51rGlNz2%2BsL._SL160_.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/Apple-iTunes-Music-プリペイドカード-MA782J/dp/B000JCENFM?SubscriptionId=06WK2XPKDH9TJJ979P02&amp;tag=keyesblog05-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B000JCENFM&quot;&gt;Apple iTunes Music プリペイドカード 3,000円 [MA782J/A]&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CSVデータをデータベース化するツール「CtoD」の紹介</title>
   <link href="http://melborne.github.io/2013/11/14/introduce-ctod-gem-easyway-to-make-a-database-table"/>
   <updated>2013-11-14T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/11/14/introduce-ctod-gem-easyway-to-make-a-database-table</id>
   <content type="html">&lt;p&gt;前の記事では&lt;code&gt;CtoD&lt;/code&gt;を使ってCSVデータからHeroku上にWebアプリを構築する手順を説明しました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;/2013/11/11/your-data-from-excel-to-the-web/&quot; title=&quot;Excelデータを最速でWebアプリ(Heroku)にする&amp;lt;del&amp;gt;１０&amp;lt;/del&amp;gt;９のステップ&quot;&gt;Excelデータを最速でWebアプリ(Heroku)にする&lt;del&gt;１０&lt;/del&gt;９のステップ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ここでは&lt;code&gt;CtoD&lt;/code&gt;の詳細を説明します。対象バージョンは0.0.3です。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/ctoD&quot; title=&quot;ctoD | RubyGems.org | your community gem host&quot;&gt;ctoD | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/ctoD&quot; title=&quot;melborne/ctoD&quot;&gt;melborne/ctoD&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;使い方&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;gem install ctoD&lt;/code&gt;でインストールすると、&lt;code&gt;ctoD&lt;/code&gt;ターミナルコマンドが使えるようになります。サブコマンドを渡さなければそのヘルプが表示されます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% ctoD
Commands:
  ctoD create_table CSV DATABASE  &lt;span class=&quot;c&quot;&gt;# Create a database table for CSV&lt;/span&gt;
  ctoD &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;CSV DATABASE        &lt;span class=&quot;c&quot;&gt;# Export CSV data to DATABASE&lt;/span&gt;
  ctoD &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;COMMAND&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;             &lt;span class=&quot;c&quot;&gt;# Describe available commands or one specific command&lt;/span&gt;
  ctoD version                    &lt;span class=&quot;c&quot;&gt;# Show CtoD version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;create_table&lt;/code&gt;サブコマンドは、引数で渡したDATABASEにテーブルを生成します。テーブルの名称およびスキーマは第1引数で渡すCSVデータの内容に基づき構築されます。第1引数のCSVにはそのファイルパスを指定し、第2引数のDATABASEにはデータベースURLアドレスを指定します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export&lt;/code&gt;サブコマンドは、DATABASEに該当テーブルがなければそれを構築した上で、CSVデータの内容をテーブルにストアします。&lt;/p&gt;

&lt;h2&gt;データベースURL&lt;/h2&gt;

&lt;p&gt;第2引数で渡すデータベースURLは、スキーマ、ユーザおよびそのパスワード、ホスト、データベース名で構成されるデータベースのアドレスです。例を示します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;postgres://localhost/movies

mysql://root:mypasswd@localhost/movies

sqlite3://localhost//Users/username/path/to/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mysqlの例ではユーザ名とパスワードを渡しています。sqlite3の例ではデータベースとなるファイルの絶対パスを渡します（ホストとパスの間の&lt;code&gt;//&lt;/code&gt;に注意）。&lt;/p&gt;

&lt;h2&gt;CSVデータの規約&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;CtoD&lt;/code&gt;では基になるCSVデータの内容に応じてテーブルのスキーマを決定しています。フィールドのデータ型はActiveRecordにおけるデータ型の何れかです（CtoDではテーブルの生成にActiveRecord::Base.connection.create_tableを使っています）。version0.0.3におけるルールは次のようになっています（将来変更の可能性があります）。&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;テーブル名はCSVファイル名と同じとなる&lt;/li&gt;
&lt;li&gt;CSVの先頭行はテーブルのヘッダーとして使われる&lt;/li&gt;
&lt;li&gt;先頭レコードにおける値が&#39;true&#39;または&#39;false&#39;のフィールドは、boolean型になる&lt;/li&gt;
&lt;li&gt;先頭レコードにおける値が&lt;code&gt;YYYY-MM-DD&lt;/code&gt;または&lt;code&gt;YYYY/MM/DD&lt;/code&gt;の形式のフィールドは、date型になる&lt;/li&gt;
&lt;li&gt;値が数値で構成されるフィールドは、そのフィールドの何れかの値がFloat型である場合はfloat型に、そうでない場合はinteger型になる&lt;/li&gt;
&lt;li&gt;既定の文字数（デフォルトで100文字）を超える値を持ったフィールドはtext型に、それ以外はstring型になる&lt;/li&gt;
&lt;li&gt;先頭レコードにおける値がないフィールドは、string型になる&lt;/li&gt;
&lt;li&gt;id, created_at, updated_atの各フィールドが自動生成される&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;text型を判定する文字数は、create_tableまたはexportコマンドの&lt;code&gt;--string-size&lt;/code&gt;オプションで変更できます。&lt;/p&gt;

&lt;p&gt;この規約に従って期待するテーブルを作るために、以下の方針を取るのがいいです。&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;CSVのファイル名は英単語の複数形にすること（ActiveRecordを使っているため）&lt;/li&gt;
&lt;li&gt;余分な行・列が含まれていないこと&lt;/li&gt;
&lt;li&gt;各フィールドのヘッダー名が各異なる&lt;strong&gt;英文字&lt;/strong&gt;であること&lt;/li&gt;
&lt;li&gt;idフィールドは削除すること&lt;/li&gt;
&lt;li&gt;日付のフィールドは&lt;code&gt;YYYY-MM-DD&lt;/code&gt;または&lt;code&gt;YYYY/MM/DD&lt;/code&gt;の形式とすること&lt;/li&gt;
&lt;li&gt;論理値の値は&#39;true&#39;または&#39;false&#39;にすること&lt;/li&gt;
&lt;li&gt;先頭レコードの各フィールドをできるだけ空欄にしないこと&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2&gt;sqlite3での例&lt;/h2&gt;

&lt;p&gt;以下のような&lt;code&gt;langs.csv&lt;/code&gt;があるとして、SQLite3でテーブルを作る方法を示します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;year,name,designer,predecessor
1995,Ruby,Yukihiro Matsumoto,Smalltalk / Perl
1959,LISP,John McCarthy,IPL
1972,Smalltalk,Daniel Henry Holmes Ingalls Jr. / Xerox PARC,Simula 67
1990,Haskell,Simon Peyton Jones,Miranda
1995,JavaScript,Brendan Eich,LiveScript
1995,Java,James Gosling,C / Simula 67 / C++ / Smalltalk
1993,Lua,Roberto Ierusalimschy,Scheme / SNOBOL / Modula / CLU
1987,Erlang,Joe Armstrong,Prolog
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;&lt;p&gt;from &lt;a href=&quot;http://en.wikipedia.org/wiki/Timeline_of_programming_languages&quot; title=&quot;Timeline of programming languages - Wikipedia, the free encyclopedia&quot;&gt;Timeline of programming languages - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;export&lt;/code&gt;サブコマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/plangs% ctoD &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;langs.csv sqlite3://localhost/&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;/langs.sqlite3
Table &lt;span class=&quot;s1&quot;&gt;&amp;#39;langs&amp;#39;&lt;/span&gt; created at sqlite3://localhost//Users/keyes/plangs/langs.sqlite3.
CSV data exported successfully.
/plangs% ls
langs.csv     langs.sqlite3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;テーブルが生成されているか確かめてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/plangs% sqlite3 langs.sqlite3
SQLite version 3.7.13 2012-07-17 17:46:21
Enter &quot;.help&quot; for instructions
Enter SQL statements terminated with a &quot;;&quot;
sqlite&amp;gt; .tables
langs
sqlite&amp;gt; .schema
CREATE TABLE &quot;langs&quot; (&quot;id&quot; INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, &quot;year&quot; integer, &quot;name&quot; varchar(255), &quot;designer&quot; varchar(255), &quot;predecessor&quot; varchar(255), &quot;created_at&quot; datetime NOT NULL, &quot;updated_at&quot; datetime NOT NULL);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テーブルのスキーマを見ると、id, created_at, updated_atのフィールドが自動生成されているのが分かります。また&lt;code&gt;year&lt;/code&gt;フィールドのデータ型は&lt;code&gt;integer&lt;/code&gt;で他は&lt;code&gt;varchar(255)&lt;/code&gt;であることが確認できます。&lt;/p&gt;

&lt;p&gt;テーブルにデータが挿入されているかも確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqlite&amp;gt; select name, designer, year from langs;
Ruby|Yukihiro Matsumoto|1995
LISP|John McCarthy|1959
Smalltalk|Daniel Henry Holmes Ingalls Jr. / Xerox PARC|1972
Haskell|Simon Peyton Jones|1990
JavaScript|Brendan Eich|1995
Java|James Gosling|1995
Lua|Roberto Ierusalimschy|1993
Erlang|Joe Armstrong|1987
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;PostgreSQLでの例&lt;/h2&gt;

&lt;p&gt;事前にdatabaseを作っておく必要があります。ここでは&lt;code&gt;psql&lt;/code&gt;コマンドを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/plangs% psql
psql (9.3.0)
Type &quot;help&quot; for help.

keyes=# create database langs;
CREATE DATABASE
keyes=# \l
                         List of databases
   Name    | Owner | Encoding | Collate | Ctype | Access privileges
-----------+-------+----------+---------+-------+-------------------
 keyes     | keyes | UTF8     | C       | C     |
 langs     | keyes | UTF8     | C       | C     |
 postgres  | keyes | UTF8     | C       | C     |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ctoD export&lt;/code&gt;サブコマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/plangs% ctoD &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;langs.csv postgres://localhost/langs
Table &lt;span class=&quot;s1&quot;&gt;&amp;#39;langs&amp;#39;&lt;/span&gt; created at postgresql://localhost/langs.
CSV data exported successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;テーブルが生成されているか確かめてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/plangs% psql langs
psql (9.3.0)
Type &quot;help&quot; for help.

langs=# \d langs;
                                      Table &quot;public.langs&quot;
   Column    |            Type             |                     Modifiers
-------------+-----------------------------+-------------------------------
 id          | integer                     | not null default nextval(&#39;langs_id_seq&#39;::regclass)
 year        | integer                     |
 name        | character varying(255)      |
 designer    | character varying(255)      |
 predecessor | character varying(255)      |
 created_at  | timestamp without time zone | not null
 updated_at  | timestamp without time zone | not null
Indexes:
    &quot;langs_pkey&quot; PRIMARY KEY, btree (id)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テーブルにデータが挿入されているかも確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;langs=# select name, designer, year from langs;
    name    |                   designer                   | year
------------+----------------------------------------------+------
 Ruby       | Yukihiro Matsumoto                           | 1995
 LISP       | John McCarthy                                | 1959
 Smalltalk  | Daniel Henry Holmes Ingalls Jr. / Xerox PARC | 1972
 Haskell    | Simon Peyton Jones                           | 1990
 JavaScript | Brendan Eich                                 | 1995
 Java       | James Gosling                                | 1995
 Lua        | Roberto Ierusalimschy                        | 1993
 Erlang     | Joe Armstrong                                | 1987
(8 rows)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;MySQLでの例&lt;/h2&gt;

&lt;p&gt;事前にdatabaseを作っておく必要があります。ここでは&lt;code&gt;mysql&lt;/code&gt;コマンドを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/plangs% mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.6.14 MySQL Community Server (GPL)

mysql&amp;gt; create database langs character set utf8;
Query OK, 1 row affected (0.00 sec)

mysql&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| langs              |
| mysql              |
| performance_schema |
+--------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ctoD export&lt;/code&gt;サブコマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;/plangs% ctoD &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;langs.csv mysql://root:xxxx@localhost/langs
Table &lt;span class=&quot;s1&quot;&gt;&amp;#39;langs&amp;#39;&lt;/span&gt; created at mysql://root:xxxx@localhost/langs.
CSV data exported successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;テーブルが生成されているか確かめてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/plangs% mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 6
Server version: 5.6.14 MySQL Community Server (GPL)

mysql&amp;gt; use langs;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&amp;gt; show create table langs;
+-------+---------------------------------------------+
| Table | Create Table                                |
+-------+---------------------------------------------+
| langs | CREATE TABLE `langs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `year` int(11) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `designer` varchar(255) DEFAULT NULL,
  `predecessor` varchar(255) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 |
+-------+----------------------------------------------+
1 row in set (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テーブルにデータが挿入されているかも確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; select name, designer, year from langs;
+------------+----------------------------------------------+------+
| name       | designer                                     | year |
+------------+----------------------------------------------+------+
| Ruby       | Yukihiro Matsumoto                           | 1995 |
| LISP       | John McCarthy                                | 1959 |
| Smalltalk  | Daniel Henry Holmes Ingalls Jr. / Xerox PARC | 1972 |
| Haskell    | Simon Peyton Jones                           | 1990 |
| JavaScript | Brendan Eich                                 | 1995 |
| Java       | James Gosling                                | 1995 |
| Lua        | Roberto Ierusalimschy                        | 1993 |
| Erlang     | Joe Armstrong                                | 1987 |
+------------+----------------------------------------------+------+
8 rows in set (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Rubyからデータベースに接続する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;CtoD&lt;/code&gt;は&lt;code&gt;CtoD::DB.connect&lt;/code&gt;というデータベースに接続するためのメソッドをもっており、かつActiveRecordをrequireしているので、Rubyからデータベースにアクセスするのは簡単です。irbを立ち上げてアクセスしてみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;irb&quot;&gt;&lt;span class=&quot;go&quot;&gt;/plangs% irb -rctoD&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;IRB on Ruby2.0.0&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;CtoD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:DB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;postgres://localhost/langs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; #&amp;lt;URI::Generic:0x007f81f330c4e8 URL:postgresql://localhost/langs&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lang&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; nil&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;┌-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ id ╎ year ╎ name       ╎ designer            ╎ predecessor                 │&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;┌-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 1  ╎ 1995 ╎ Ruby       ╎ Yukihiro Matsumoto  ╎ Smalltalk / Perl            │&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 2  ╎ 1959 ╎ LISP       ╎ John McCarthy       ╎ IPL                         |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 3  ╎ 1972 ╎ Smalltalk  ╎ Daniel Henry Holmes ╎ Simula 67                   |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 4  ╎ 1990 ╎ Haskell    ╎ Simon Peyton Jones  ╎ Miranda                     |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 5  ╎ 1995 ╎ JavaScript ╎ Brendan Eich        ╎ LiveScript                  |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 6  ╎ 1995 ╎ Java       ╎ James Gosling       ╎ C / Simula 67 / C++ / Smallt╎&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 7  ╎ 1993 ╎ Lua        ╎ Roberto Ierusalimsch╎ Scheme / SNOBOL / Modula / C╎&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 8  ╎ 1987 ╎ Erlang     ╎ Joe Armstrong       ╎ Prolog                      | &lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;8 rows in set&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1995&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;┌-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ id ╎ year ╎ name       ╎ designer            ╎ predecessor                 │&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;┌-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 1  ╎ 1995 ╎ Ruby       ╎ Yukihiro Matsumoto  ╎ Smalltalk / Perl            │&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 5  ╎ 1995 ╎ JavaScript ╎ Brendan Eich        ╎ LiveScript                  |&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;│ 6  ╎ 1995 ╎ Java       ╎ James Gosling       ╎ C / Simula 67 / C++ / Smallt╎&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;└-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;3 rows in set&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上です。&lt;/p&gt;

&lt;p&gt;データベースのシードを適当に作る場合などに使ってもらえるといいかもしれません。&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/02/ruby_object_cover.png&quot; alt=&quot;ruby_object&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/04/ruby_tutorial_cover.png&quot; alt=&quot;ruby_tutorial&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/03/ruby_trivia_cover.png&quot; alt=&quot;ruby_trivia&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>

