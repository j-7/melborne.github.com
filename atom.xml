<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>hp12c</title>
 <link href="http://melborne.github.io/atom.xml" rel="self"/>
 <link href="http://melborne.github.io"/>
 <updated>2014-06-29T15:15:06+09:00</updated>
 <id>http://melborne.github.io</id>
 <author>
   <name>kyoendo</name>
   <email>postagie@gmail.com</email>
 </author>

 
 <entry>
   <title>RubyのHashの秘密 その３ - ハッシュテーブルの理解</title>
   <link href="http://melborne.github.io/2014/06/14/hash-table-in-ruby"/>
   <updated>2014-06-14T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/06/14/hash-table-in-ruby</id>
   <content type="html">
&lt;p&gt;同姓同名のいない1億人の日本人の中から素早く「山田 太郎」を見つけ出して彼と話をしたい。各人の胸には名札が貼ってあるので、「山田 太郎」の名札の付いた人物を見つけ出せばいい。全国を行脚して片っ端に名札を確認していくという手もあるが、恐ろしく時間が掛かることは想像に難くない。最悪で1億人、平均で5000万人の名札の確認が必要となる。したがって事前に彼ら彼女らをなんらかのかたちに整列させるべきだと認識する。かと言って、こちらが持っている情報は彼ら彼女らの名前（姓と名）しかないから順位付けで整列というのは難しい。そこで姓（苗字）によるグループ化を思いつく。つまり各人の名札を「苗字関数」に通して苗字を得、その苗字のために割り当てられた区域に彼ら彼女らを住まわせるのだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;苗字関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\s+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;山田 太郎&quot;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;苗字関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;山田&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;日本人の苗字は30万種ほどらしいから1億人は30万個のグループに分けられ、各区域には平均330人が住むことになる。この場合「山田 太郎」に辿り着くには、まずは30万の区域の中から「山田」区を見つけ出し、次いで「山田」区の中から「山田 太郎」の名札を持った人物を総当りで探せばいい。「山田」区に辿り着くには平均15万回の区訪問が必要だが、区が見つかればあと平均165回で彼に出会える。&lt;/p&gt;

&lt;p&gt;ところがよく調べてみると全国に「山田」姓の日本人は85万人もいることが分かった。これで彼に辿り着くには平均57万5000回(15万 + 42万5000)の照合が必要となった。一方で、「佐村河内」という姓は全国に40人しかいないそうで、その照合は平均15万回ほどだから姓によってそこに辿り着くまでの時間が相当異なることになる。これは安定的でない。ここに至って「苗字関数」の問題に気付く。この関数がグループを平均に分散しないのだ。&lt;/p&gt;

&lt;p&gt;明日の予定を気にしながら良い方法がないか考えていたら、目の前にあるカレンダーが1年365日を7つの曜日で均等に分割していることに気付いた。年初からの経過日数を曜日の数で割った余り（剰余）を求めれば、すべての日にちは各曜日に紐付けられた0から6の数字の何れかになる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;剰余関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;剰余関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 5&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;剰余関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 2&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;剰余関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;224&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;「剰余関数」により1年の365日は52個ずつの7つのグループに均等に分けられる。もし仮に人の名前をランダムなそれでいて一定である整数に置き換えられるなら、1億人の日本人も均等に分割できるかもしれない。つまり「山田 太郎」から作られる数字が常に一定であり、かつそれが「佐村河内 守」から作られる数字とは異なるようなランダムな数字、そんなものを生み出す関数があれば、どんな名前に対しても安定した結果を得られるに違いない。そんな関数を世間では「ハッシュ関数」と呼んでいる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# String#hashを使う&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;山田 太郎&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 2948999586394291103&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;山田 太郎&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 2948999586394291103&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;佐村河内 守&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 3017522113704884285&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;佐村河内 守&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 3017522113704884285&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;苗字種数に倣って名前を30万のグループに分けるならこの値を30万で除した余を、求める「ハッシュ値」とすればいい。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30_0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;abs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;山田 太郎&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 270422&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;山田 太郎&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 270422&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;佐村河内 守&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 179742&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ハッシュ関数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;佐村河内 守&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 179742&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;この「ハッシュ関数」から出力される数値は、0から30万の何れかだからこれを直線的に並べられた30万個の区域のインデックスとみなせばいい。つまり「山田 太郎」をこのデータ構造における先頭から270422番目の区域に住まわせ、「佐村河内 守」を179742番目の区域に住まわせる。こうすると「山田 太郎」に辿り着くには名前に「ハッシュ関数」を適用してハッシュ値を得、それが示すインデックスの区域に移動してそこに住んでいる330人の中から彼を見つけ出せばいい。これで彼を見つけるまでのコストは、「ハッシュ関数」を求めるコスト、対象区域のインデックスに移動するコスト、対象区域の330人にシーケンシャルにアクセスするコストとなる。このなかでは明らかに対象区域内でのシーケンシャルアクセスのコストが高い。対象インデックスへの移動コストは相対的に小さいからその数が増えても影響は小さいだろうから、この数つまり「ハッシュ関数」における剰余の基数を30万から300万に増やせば各区域内は33人になってその探索コストは改善する。言い換えれば各区域内の人数を最小に保てれば総コストは小さくなるということがわかる。&lt;/p&gt;

&lt;p&gt;何れにしてもこれで探索対象が「山田 太郎」であろうが「佐村河内 守」であろうが「野田 江川富士一二三四五左衛門助太郎」であろうが一定のコストで目的に辿りつけるようになった。めでたしめでたし。&lt;/p&gt;

&lt;p&gt;こんな理解であってる？&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;関連記事：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/2014/06/11/secret-in-rubys-hash/&quot; title=&quot;RubyのHashの秘密&quot;&gt;RubyのHashの秘密&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/2014/06/12/fib-in-hash-default/&quot; title=&quot;RubyのHashの秘密 その２&quot;&gt;RubyのHashの秘密 その２&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;参考記事：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB&quot; title=&quot;ハッシュテーブル - Wikipedia&quot;&gt;ハッシュテーブル - Wikipedia&lt;/a&gt;
&lt;a href=&quot;http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E9%96%A2%E6%95%B0&quot; title=&quot;ハッシュ関数 - Wikipedia&quot;&gt;ハッシュ関数 - Wikipedia&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://i.loveruby.net/ja/rhg/book/name.html&quot; title=&quot;第3章 名前と名前表&quot;&gt;第3章 名前と名前表&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://patshaughnessy.net/ruby-under-a-microscope&quot; title=&quot;Ruby Under a Microscope - Pat Shaughnessy&quot;&gt;Ruby Under a Microscope - Pat Shaughnessy&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/zariganitosh/20090716/1247709137&quot; title=&quot;Rubyのハッシュテーブルの仕組みを徹底的に理解する - ザリガニが見ていた...。&quot;&gt;Rubyのハッシュテーブルの仕組みを徹底的に理解する - ザリガニが見ていた…。&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://ufcpp.net/study/algorithm/col_hash.html&quot; title=&quot;ハッシュテーブル (アルゴリズムとデータ構造)&quot;&gt;ハッシュテーブル (アルゴリズムとデータ構造)&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://www2.nipponsoft.co.jp/bldoko/&quot; title=&quot;姓名分布&amp;amp;姓名ランキング 写録宝夢巣／名前・苗字・名字&quot;&gt;姓名分布&amp;amp;姓名ランキング 写録宝夢巣／名前・苗字・名字&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://myoji-yurai.net/&quot; title=&quot;名字検索No.1／名字由来net｜日本人の名字(苗字)98%以上を掲載!!&quot;&gt;名字検索No.1／名字由来net｜日本人の名字(苗字)98%以上を掲載!!&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</content>
 </entry>
 
 <entry>
   <title>RubyのHashの秘密 その２</title>
   <link href="http://melborne.github.io/2014/06/12/fib-in-hash-default"/>
   <updated>2014-06-12T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/06/12/fib-in-hash-default</id>
   <content type="html">
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; sec&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 55&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 354224848179261915075&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 0.003656 sec&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;あるいは、&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 354224848179261915075&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;とか。&lt;/p&gt;

&lt;p&gt;有名か。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;関連記事：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/2014/06/11/secret-in-rubys-hash/&quot; title=&quot;RubyのHashの秘密&quot;&gt;RubyのHashの秘密&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</content>
 </entry>
 
 <entry>
   <title>RubyのHashの秘密</title>
   <link href="http://melborne.github.io/2014/06/11/secret-in-rubys-hash"/>
   <updated>2014-06-11T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/06/11/secret-in-rubys-hash</id>
   <content type="html">
&lt;p&gt;巷では個人情報保護の機運が高まっているからぼくもひとつそのための仕組みを考えてみたよ。ぼくのやり方はRubyのHashを使うんだ。&lt;/p&gt;

&lt;p&gt;まずはHashに&lt;code&gt;HashSecret&lt;/code&gt;というモジュールを挿すよ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HashSecret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;このHashは普通のHashのように使えるんだけど、そこに機密情報をセットするための&lt;code&gt;Hash#secret=&lt;/code&gt;というメソッドを追加するんだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Charlie&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:job&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Programmer&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;&quot;Charlie&quot;, :job=&amp;gt;&quot;Programmer&quot;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;My-password123&#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 機密情報をセット！&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で、ここからがミソなんだけれども、セットされた機密情報はHashを走査しても見えないんだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;My-password123&#39;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 機密情報をセット！&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;&quot;Charlie&quot;, :job=&amp;gt;&quot;Programmer&quot;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; [:name, &quot;Charlie&quot;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; [:job, &quot;Programmer&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;でも、&lt;code&gt;secret&lt;/code&gt;キーを使えばアクセスできる。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;My-password123&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;複数の機密情報を扱いたい場合は、&lt;code&gt;Hash#secret=&lt;/code&gt;に配列やハッシュをセットすればいいんだ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 配列で機密情報を管理！&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;My-password123&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;charlie@secret.com&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;&quot;Charlie&quot;, :job=&amp;gt;&quot;Programmer&quot;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [&quot;My-password123&quot;, &quot;charlie@secret.com&quot;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ハッシュで機密情報を管理！&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:credit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;123-456-789-012&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;charlie@secret.com&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;&quot;Charlie&quot;, :job=&amp;gt;&quot;Programmer&quot;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:credit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;123-456-789-012&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;charlie@secret.com&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;&quot;Charlie&quot;, :job=&amp;gt;&quot;Programmer&quot;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ねっ？&lt;/p&gt;

&lt;p&gt;でも、多分これだと、こう言う人がきっといるよね。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;「HashSecret使ってんの分かったら、&lt;code&gt;secret&lt;/code&gt;キーでアクセスされちゃうじゃん。バカなの？」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;そんなときは&lt;code&gt;secret&lt;/code&gt;キーに別の値をセットして隠蔽すればいいんだよ。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Nothing here&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;Nothing here&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;&quot;Charlie&quot;, :job=&amp;gt;&quot;Programmer&quot;, :secret=&amp;gt;&quot;Nothing here&quot;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;今度は、こういう声が聞こえてくるよ。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;「それでどうやって機密情報にアクセスすんの？お前、あほなの？」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;まあ、落ち着いて。&lt;/p&gt;

&lt;p&gt;まずは、ヨガで言うところの「シッダアーサナ（達人座）」のポーズを取って目を閉じ静かに深く呼吸する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://yoga-pose.info/img/zai/tatsujinza.jpg&quot; alt=&quot;Alt title noshadow&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;出典：&lt;a href=&quot;http://yoga-pose.info/zai/tatsujinza.htm&quot; title=&quot;達人座（シッダ・アーサナ） - ヨガのポーズ大全集&quot;&gt;達人座（シッダ・アーサナ） - ヨガのポーズ大全集&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;で、心の中が「無」になったら、そこに浮かんだ「言葉」を読むんだ。&lt;/p&gt;

&lt;p&gt;ぼくの言葉はこうだった。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;:sekai_no_owari&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;さあ、試してみるよ！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sekai_no_owari&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:credit=&amp;gt;&quot;123-456-789-012&quot;, :email=&amp;gt;&quot;charlie@secret.com&quot;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ほら、読めた！&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;つまらないネタ思いついちゃったので…。&lt;/p&gt;

&lt;p&gt;まだ？（はてな）な人いるかもしれないから、&lt;code&gt;HashSecret&lt;/code&gt;の実装は下の方に置いておきますm(__)m&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HashSecret&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Hash#default=&lt;/code&gt;の別名かよ！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:credit=&amp;gt;&quot;123-456-789-012&quot;, :email=&amp;gt;&quot;charlie@secret.com&quot;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:credit=&amp;gt;&quot;123-456-789-012&quot;, :email=&amp;gt;&quot;charlie@secret.com&quot;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:blah_blah_blah&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:credit=&amp;gt;&quot;123-456-789-012&quot;, :email=&amp;gt;&quot;charlie@secret.com&quot;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;秘密のコード教えて&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:credit=&amp;gt;&quot;123-456-789-012&quot;, :email=&amp;gt;&quot;charlie@secret.com&quot;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;機密情報のブロードキャストみたいな。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>earthquake.gemで逆さ書きツイートとか縦書きツイートとか</title>
   <link href="http://melborne.github.io/2014/06/01/tweet-flip-or-vertical-with-earthquake-gem"/>
   <updated>2014-06-01T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/06/01/tweet-flip-or-vertical-with-earthquake-gem</id>
   <content type="html">
&lt;p&gt;昔作った「&lt;a href=&quot;https://rubygems.org/gems/flippy&quot; title=&quot;flippy&quot;&gt;flippy gem&lt;/a&gt;」を元に、「&lt;a href=&quot;https://github.com/jugyo/earthquake&quot; title=&quot;jugyo/earthquake&quot;&gt;earthquake.gem&lt;/a&gt;」用の&lt;a href=&quot;https://gist.github.com/melborne/31f81cc17084a0aea7d7&quot; title=&quot;flip.rb&quot;&gt;flip.rb&lt;/a&gt;というプラグインを書きました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install flippy&lt;/code&gt;した上で&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:plugin_install https://gist.github.com/melborne/31f81cc17084a0aea7d7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすれば&lt;code&gt;:flip&lt;/code&gt;コマンドが使えるようになります。&lt;/p&gt;

&lt;p&gt;オプション無しで逆さ書き、&lt;code&gt;-r&lt;/code&gt;オプション付きでそれをさらにリバース、&lt;code&gt;-v&lt;/code&gt;オプション付きで縦書きを出力します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:flip twitter # =&amp;gt; &quot;ɹəʇʇᴉʍʇ&quot;
   
:flip -r twitter # =&amp;gt; &quot;ʇʍᴉʇʇəɹ&quot;
   
:flip -v FOO\\BAR++ by vertical # =&amp;gt; &quot;B F&quot;
                                     &quot;A O&quot;
                                     &quot;R O by vertical&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;縦書きの区切りは&lt;code&gt;\\&lt;/code&gt;か全角空白で、例のように&lt;code&gt;++&lt;/code&gt;以降は横書きに戻ります。&lt;/p&gt;

&lt;p&gt;まあ逆さ・縦書きブームなんてものはとっくに過ぎ去りましたが、そんなことは気にせずにツイートしてくださいね :)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>earthquake.gemのプラグイン管理</title>
   <link href="http://melborne.github.io/2014/06/01/manage-plugins-of-earthquake-gem"/>
   <updated>2014-06-01T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/06/01/manage-plugins-of-earthquake-gem</id>
   <content type="html">
&lt;p&gt;ターミナルに張り付いている人の10人に8人は使ってると言われている「&lt;a href=&quot;https://github.com/jugyo/earthquake&quot; title=&quot;jugyo/earthquake&quot;&gt;earthquake.gem&lt;/a&gt;」ですが、その魅力はプラグインによる拡張にあります。既に沢山のプラグインがgistで公開されていますから、その中から好きなモノを選んで&lt;code&gt;:plugin_install&lt;/code&gt;を実行すれば簡単に機能拡張ができます。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/jugyo/earthquake/wiki&quot; title=&quot;plugins&quot;&gt;plugins&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;:plugin_install https://gist.github.com/melborne/ac7a3613ad5c77387b8c
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section&quot;&gt;プラグインの管理&lt;/h2&gt;

&lt;p&gt;使っているプラグインが増えてくるとその管理も大変ですが、milligrammeさんの「&lt;a href=&quot;https://gist.github.com/milligramme/5253047&quot; title=&quot;earthquake.gem pluginを管理する&quot;&gt;manage_plugins&lt;/a&gt;」というプラグインを使えば管理が楽になります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:manage_plugins  # インストールされているpluginの一覧を表示する

:manage_plugins off emoji.rb  # emoji.rbプラグインを無効にする

:manage_plugins on emoji.rb   # emoji.rbプラグインを有効にする
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;managepluginsfork&quot;&gt;manage_pluginsのFork版&lt;/h2&gt;

&lt;p&gt;manage_pluginsにはエラーが吐かれるなど一部に問題があったので、これを&lt;a href=&quot;https://gist.github.com/melborne/ef108e0270b871cfaeef&quot; title=&quot;manage_plugins.rb&quot;&gt;fork&lt;/a&gt;して修正＆機能追加版を作りました。変更点は次の通りです。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;問題点修正＆リファクタリング&lt;/li&gt;
    &lt;li&gt;プラグイン指定時にその名前だけでも受け付けるよう変更&lt;/li&gt;
    &lt;li&gt;プラグインを削除する&lt;code&gt;rm&lt;/code&gt;サブコマンドの追加&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;:manage_plugins  # インストールされているpluginの一覧を表示する

:manage_plugins off emoji  # emoji.rbプラグインを無効にする

:manage_plugins on emoji   # emoji.rbプラグインを有効にする

:manage_plugins rm emoji   # emoji.rbプラグインを削除する
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールは次のようにします（earthquake ver 1.0.2以上が必要）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:plugin_install https://gist.github.com/melborne/ef108e0270b871cfaeef
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで、一層快適なearthquake.gemライフが送れますね😃&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>earthquake.gemで絵文字ツイート</title>
   <link href="http://melborne.github.io/2014/05/30/tweet-emojis-with-earthquake"/>
   <updated>2014-05-30T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/05/30/tweet-emojis-with-earthquake</id>
   <content type="html">
&lt;p&gt;「&lt;a href=&quot;https://github.com/jugyo/earthquake&quot; title=&quot;jugyo/earthquake&quot;&gt;earthquake.gem&lt;/a&gt;」には「&lt;a href=&quot;https://gist.github.com/jugyo/2551072&quot; title=&quot;emoji.rb&quot;&gt;emoji.rb&lt;/a&gt;」プラグインがあるので簡単に絵文字ツイートができます。&lt;code&gt;gem install named_emoji&lt;/code&gt;した上でearthquake上で&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:plugin_install https://gist.github.com/jugyo/2551072
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;すればセットアップが完了します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;そろそろ帰って :beer: するか
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などと打てば:beer:のところが🍺に変わってツイートされます。また&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:emojis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で絵文字の一覧が表示できます。タブ補完が使えるので文頭以外で&lt;code&gt;:be&lt;/code&gt;などとしてTABすれば該当候補がリストアップされます。&lt;/p&gt;

&lt;p&gt;使える絵文字は500個くらいはあると思いますが、それじゃ足りないという人はこれをForkした僕の「&lt;a href=&quot;https://gist.github.com/melborne/ac7a3613ad5c77387b8c&quot; title=&quot;emoji.rb&quot;&gt;emoji.rb&lt;/a&gt;」を使います。870個くらいの絵文字が使えるようになります。&lt;/p&gt;

&lt;p&gt;こちらは&lt;code&gt;emot&lt;/code&gt;というGemに依存していますので、&lt;code&gt;gem install emot&lt;/code&gt;した上で、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:plugin_install https://gist.github.com/melborne/ac7a3613ad5c77387b8c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;してください（earthquake.gemはver1.0.2~が必要）。&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;code&gt;.earthquake/plugin&lt;/code&gt;にファイルを配置してください（:plugin_installによるインストールはversion 1.0.1では上手くいきません。現在このfixを&lt;a href=&quot;https://github.com/jugyo/earthquake/pull/172&quot;&gt;PR&lt;/a&gt;中です）。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;(追記：2014-5-31) @jugyoさんが速攻で上記PRをマージしたver1.0.2をリリースしてくれました。Thanks!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;関連記事：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/2014/05/19/emoji-cheat-sheet-on-terminal/&quot; title=&quot;GitHubで使える絵文字Emojiが何か分からないとき😖（Mac向け）&quot;&gt;GitHubで使える絵文字Emojiが何か分からないとき😖（Mac向け）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Rubyスクリプトをターミナルからオシャレにツイートする方法</title>
   <link href="http://melborne.github.io/2014/05/29/twitt-ruby-outputs-in-terminal"/>
   <updated>2014-05-29T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/05/29/twitt-ruby-outputs-in-terminal</id>
   <content type="html">
&lt;p&gt;１.「&lt;a href=&quot;https://rubygems.org/gems/rcodetools&quot; title=&quot;rcodetools&quot;&gt;rcodetools&lt;/a&gt;」と「&lt;a href=&quot;https://rubygems.org/gems/t&quot; title=&quot;t&quot;&gt;t&lt;/a&gt;」を&lt;code&gt;gem install&lt;/code&gt;でインストールする。&lt;/p&gt;

&lt;p&gt;２. おもむろにターミナルで次のように打ち込む。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% echo &quot;require &#39;emot&#39;; ~:&#39;beer smile&#39; #=&amp;gt;&quot; | xmpfilter | xargs -0 t update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;３. ツイートを見る&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;require &amp;#39;emot&amp;#39;; ~:&amp;#39;beer smile&amp;#39; # =&amp;gt; &amp;quot;🍺 😄&amp;quot;&lt;/p&gt;&amp;mdash; kyoendo (@merborne) &lt;a href=&quot;https://twitter.com/merborne/statuses/471989515934916608&quot;&gt;May 29, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;関連記事：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2014/05/19/emoji-cheat-sheet-on-terminal/&quot; title=&quot;GitHubで使える絵文字Emojiが何か分からないとき😖（Mac向け）&quot;&gt;GitHubで使える絵文字Emojiが何か分からないとき😖（Mac向け）&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GitHubで使える絵文字Emojiが何か分からないとき😖（Mac向け）</title>
   <link href="http://melborne.github.io/2014/05/19/emoji-cheat-sheet-on-terminal"/>
   <updated>2014-05-19T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/05/19/emoji-cheat-sheet-on-terminal</id>
   <content type="html">
&lt;p&gt;またEmojiネタで恐縮ですが😓、&lt;code&gt;emot&lt;/code&gt;というMacのターミナル💻で絵文字を表示するためのGem💎を作りましたので紹介します😃&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/emot&quot; title=&quot;emot&quot;&gt;emot | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/melborne/emot&quot; title=&quot;melborne/emot&quot;&gt;melborne/emot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Web⛅️にある「&lt;a href=&quot;http://www.emoji-cheat-sheet.com/&quot; title=&quot;Emoji cheat sheet for Campfire and GitHub&quot;&gt;Emoji cheat sheet for Campfire and GitHub&lt;/a&gt;」のMacターミナル版ですね。&lt;/p&gt;

&lt;p&gt;Rubyで絵文字を扱うツールには既にGitHub🐙🐱社の「&lt;a href=&quot;https://github.com/github/gemoji&quot; title=&quot;github/gemoji&quot;&gt;gemoji&lt;/a&gt;」というのがあるのですが、これは絵文字imageを含んでいて軽量でなく、とりあえずMacで使えればいいという自分の需要には合わず、またjugyo👶さんによるMacでの使用を前提にした軽量な「&lt;a href=&quot;https://github.com/jugyo/named_emoji&quot; title=&quot;jugyo/named_emoji&quot;&gt;named_emoji&lt;/a&gt;」というのがありましたが対応絵文字が少し少なくまたunicodeも表示したかったので、別途作ることにしました。&lt;/p&gt;

&lt;p&gt;絵文字とその名前の対応表は、gemojiの&lt;code&gt;Emoji#mapping&lt;/code&gt;というメソッドの出力を加工して作りました。&lt;/p&gt;

&lt;h2 id=&quot;emotmac&quot;&gt;EmotをMacターミナルで使う&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;gem install emot&lt;/code&gt;でインストールすると、&lt;code&gt;emot&lt;/code&gt;というコマンドが使えるようになります。サブコマンドを渡さなければhelpが表示されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% emot                
Commands:
  emot help [COMMAND]  # Describe available commands or one specific command
  emot icons           # show all emoji icons
  emot names           # show all available names for emoji
  emot show [NAME]     # show emoji icon and unicode for NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;emot show&lt;/code&gt;とすると870個の絵文字がその名前とunicodeとともに、ずらっと表示されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014/05/emot01.png&quot; alt=&quot;emot noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;これをインラインで表示したい場合は、–inlineオプションを渡して、&lt;code&gt;emot show -i&lt;/code&gt;とします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014/05/emot02.png&quot; alt=&quot;emot noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;アイコンだけで表示したい場合は、–onlyオプションに&lt;code&gt;icon&lt;/code&gt;を渡して、&lt;code&gt;emot show -o=icon -i&lt;/code&gt;などとするか、&lt;code&gt;emot icons&lt;/code&gt;とします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014/05/emot03.png&quot; alt=&quot;emot noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;アイコン＋名前、アイコン＋unicodeで表示したい場合は、–onlyオプションに&lt;code&gt;name&lt;/code&gt;または&lt;code&gt;code&lt;/code&gt;を渡します。また、名前だけをずらっと表示したいときは&lt;code&gt;nameonly&lt;/code&gt;をオプションで渡すか、&lt;code&gt;emot names&lt;/code&gt;します。&lt;/p&gt;

&lt;p&gt;まだカテゴリ別表示などに対応していないので使いづらいです👎 🙅 🙇 &lt;/p&gt;

&lt;h2 id=&quot;emotruby&quot;&gt;EmotをRubyで使う&lt;/h2&gt;

&lt;p&gt;Rubyでは次のような感じで使います。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;emot&#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Emot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sunflower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; 🌻&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Emot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;unicode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sunflower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;U+1F33B&quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Emot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# list available emoji with name and unicode.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;symbol&quot;&gt;Symbol#~&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;emot&lt;/code&gt;は余計な機能💩として、Symbolクラスに&lt;code&gt;~&lt;/code&gt;メソッドを勝手に差し込みます😱。その結果、次のような感じで絵文字を含んだ文を簡単に作れるようになります。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;emot&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:smile&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:beginner&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:shit&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:jack_o_lantern&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&#39;+1&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;I broken_heart you!&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;The pencil is mightier than gun&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;dango is better than sunflower&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;疲れたら beer を飲もう！&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;fish + hocho =&amp;gt; sushi&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;.fush + .hocho =&amp;gt; sushi&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# escape emoji with prefix dot.&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 😄&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 🔰&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 💩&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 🎃&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 👍&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; I 💔 you!&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; The 📝 is mightier than 🔫&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 🍡 is better than 🌻&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 疲れたら 🍺 を飲もう！&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 🐟 + 🔪 =&amp;gt; 🍣&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; fush + hocho =&amp;gt; 🍣&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;絵文字をエスケープしたいときは、最後の例のように.（ピリオド）を前置します。&lt;/p&gt;

&lt;p&gt;これは前回のネタがスベった🏄 ので、無理やりGemにぶち込みました👈 &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/2014/05/16/emoji-be-easy/&quot; title=&quot;オレは遂にRubyのチルダの究極の使い方に辿り着いたのだ！&quot;&gt;オレは遂にRubyのチルダの究極の使い方に辿り着いたのだ！&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;letiffall&quot;&gt;let_if_fallのアップデート&lt;/h2&gt;

&lt;p&gt;当然の流れとして、あのターミナルから物がありのままに降ってくる「&lt;a href=&quot;https://rubygems.org/gems/let_it_fall&quot; title=&quot;let_it_fall&quot;&gt;let_it_fall&lt;/a&gt;」を&lt;code&gt;emot&lt;/code&gt;を使った版にアップデートしましたので、お知らせします。バージョンは0.3.0です。&lt;/p&gt;

&lt;p&gt;その結果、使えるコマンド数は870を超えました🙀。ターミナルで&lt;code&gt;let_it_fall&lt;/code&gt;とだけ打てば使えるコマンドが分かります。まずは、&lt;code&gt;let_it_fall go&lt;/code&gt;として順番に降ってくる、およそ870個の絵文字をぼーっと眺めるのがお薦めです👀 &lt;/p&gt;

&lt;p&gt;もう絵文字ネタは終わりたい..。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;関連記事：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/2014/05/01/let-it-fall-in-the-mac-terminal/&quot; title=&quot;Macのターミナルで〇〇が降る&quot;&gt;Macのターミナルで〇〇が降る&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/2014/05/12/letitfall-is-not-letitgo/&quot; title=&quot;(注意)「Let It Fall」は、アナと雪の女王の挿入歌「Let It Go」と何ら関係ございません！&quot;&gt;(注意)「Let It Fall」は、アナと雪の女王の挿入歌「Let It Go」と何ら関係ございません！&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</content>
 </entry>
 
 
</feed>

