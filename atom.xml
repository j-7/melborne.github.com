<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>hp12c</title>
 <link href="http://melborne.github.io/atom.xml" rel="self"/>
 <link href="http://melborne.github.io"/>
 <updated>2014-01-08T22:54:18+09:00</updated>
 <id>http://melborne.github.io</id>
 <author>
   <name>kyoendo</name>
   <email>postagie@gmail.com</email>
 </author>

 
 <entry>
   <title>Graphvizがドローイングソフトになってしまった件について</title>
   <link href="http://melborne.github.io/2014/01/08/graphviz-is-a-tool-for-drawing"/>
   <updated>2014-01-08T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2014/01/08/graphviz-is-a-tool-for-drawing</id>
   <content type="html">&lt;p&gt;GraphvizのRubyラッパーであるGvizというツールを作っておりまして。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/gviz&quot; title=&quot;gviz | RubyGems.org | your community gem host&quot;&gt;gviz | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/Gviz&quot; title=&quot;melborne/Gviz&quot;&gt;melborne/Gviz&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;それは、次のような&lt;code&gt;graph.ru&lt;/code&gt;というファイルを用意して、&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cleanup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:parse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:execute&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:execute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sample&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そのディレクトリで&lt;code&gt;gviz build&lt;/code&gt;コマンドを実行すると、DOTファイルが出来上がるという代物です。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% gviz build
% open sample.dot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/images/2014/01/gviz_draw1.png&quot; alt=&quot;Alt title noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ネットワーク図とかクラス図とか系統樹などを描くのに適しています。&lt;/p&gt;

&lt;h2&gt;ドローイング？&lt;/h2&gt;

&lt;p&gt;でも、もっとアーティスティックな図も描きたいよね、Graphvizで。&lt;/p&gt;

&lt;p&gt;というわけで...。&lt;/p&gt;

&lt;p&gt;Gvizをアップデート（ver 0.3.0）しまして、Drawライクなメソッド群を追加しました。&lt;/p&gt;

&lt;p&gt;ここで言うDrawライクなメソッドというのは、ノードの形のメソッド名を持ちx, y座標を引数に取るメソッドのことです。&lt;/p&gt;

&lt;h2&gt;使い方&lt;/h2&gt;

&lt;p&gt;こんなふうに使います。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# graph.ru&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:c&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Rect&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;triangle&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cyan&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;diamond&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;magenta&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;egg&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Egg&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:draw&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;各メソッドの第１引数にはユニークなIDを渡します。座標は図の中心点で、省略すると原点(0,0)となります。lineはfromを省略すると原点からの線分になります。これらのメソッドを使うとgraph layoutが&lt;code&gt;neato&lt;/code&gt;に自動で設定されます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% gviz build
% open draw.dot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/images/2014/01/gviz_draw2.png&quot; alt=&quot;Alt title noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;なお、saveメソッドの第２引数にはpngなどの出力フォーマットを指定できるのですが、これを使うと座標のスケールが変わってしまうので調整が必要になります。Graphvizビューワのexport機能を使ったほうがいいでしょう。&lt;/p&gt;

&lt;p&gt;circleのサイズは&lt;code&gt;r&lt;/code&gt;属性で指定し、他の図形は&lt;code&gt;width&lt;/code&gt;と&lt;code&gt;height&lt;/code&gt;属性で指定します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;colorscheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;blues8&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;square&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:draw2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;出力です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2014/01/gviz_draw3.png&quot; alt=&quot;Alt title noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Drawライクなメソッドにはplaintext, none以外のノードの全shapeが含まれます。Gviz::SHAPESで全shapeを取得できるので、全メソッドを使って図形を出力してみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;colorable&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Colorable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Colorset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;Gviz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:SHAPES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plaintext&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;deg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fillcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;aa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:draw3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/images/2014/01/gviz_draw4.png&quot; alt=&quot;Alt title noshadow&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;曲線&lt;/h2&gt;

&lt;p&gt;残念ながら曲線を描くcurveのようなメソッドはありません。&lt;/p&gt;

&lt;p&gt;「おまっ、曲線も描けないでドローイングとか言ってんの？」って話です。&lt;/p&gt;

&lt;p&gt;いやいや、僕らには数式があるじゃないですか〜。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://math.stackexchange.com/questions/54506/is-this-batman-equation-for-real&quot; title=&quot;geometry - Is this Batman equation for real? - Mathematics Stack Exchange&quot;&gt;geometry - Is this Batman equation for real? - Mathematics Stack Exchange&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;div&gt;&lt;script src=&#39;https://gist.github.com/8316694.js?file=&#39;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;You are being &amp;lt;a href=&amp;quot;https://github.com/gist/8316694&amp;quot;&amp;gt;redirected&amp;lt;/a&amp;gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/images/2014/01/gviz_batman.png&quot; alt=&quot;Alt title noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ね？&lt;/p&gt;

&lt;p&gt;お前は何がしたいんだ、って感じですが。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>2013年、僕は74件のRuby関連ブログ記事を書き、5冊のRuby関連電子書籍を出版し、8個のRubygemsを作り、2個のRuby製Webアプリを作った</title>
   <link href="http://melborne.github.io/2013/12/27/what-i-did-2013"/>
   <updated>2013-12-27T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/27/what-i-did-2013</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;/books/20131224ruby_pack8.html&quot;&gt;
  &lt;img src=&quot;/assets/images/books/ruby_pack8.png&quot; alt=&quot;ruby_pack8&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;74件のRuby関連ブログ記事&lt;/h2&gt;

&lt;p&gt;僕はこの一年間でこの記事を含め全部で77件のブログ記事を書いた。そしてそのうちRubyに関係のない記事は以下の３件のみだった。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/06/03/i-create-kindle-case/&quot; title=&quot;僕にもできた！フェルトで作るKindleケース&quot;&gt;僕にもできた！フェルトで作るKindleケース&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/02/16/use-feedburner-for-hp12c-feeds/&quot; title=&quot;feedburner設置のお知らせ&quot;&gt;feedburner設置のお知らせ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/01/12/it-enginners-must-study-english/&quot; title=&quot;2013年、ITエンジニアは英語を学ぶべきか？&quot;&gt;2013年、ITエンジニアは英語を学ぶべきか？&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;残りの74件はすべてRubyに関連する記事だ。「Ruby愛どんだけw」という声が聞こえてくる。しかし僕はRubyを愛しているわけではない。Matzを愛してるわけでもない(ｷﾘｯ&lt;sup id=&#39;fnref:1&#39;&gt;&lt;a href=&#39;#fn:1&#39; rel=&#39;footnote&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;。「自分の表現の手段として僕は&lt;code&gt;Ruby&lt;/code&gt;しか持ち合わせていない」、というのが僕の意識だ。日本人としての日本語のような存在、それが僕にとってのRubyだ（流暢に使えるという意味ではない）。こう言うと「なんだ言語は単なる道具か」と言う人がいるが、言語は思考の一部なのだ。コードを書き始めるとそこにコードの種となる思考が生まれる&lt;sup id=&#39;fnref:2&#39;&gt;&lt;a href=&#39;#fn:2&#39; rel=&#39;footnote&#39;&gt;2&lt;/a&gt;&lt;/sup&gt;。文章もそうだよね？つまりそれは自分の一部といっていい。僕にとってRubyはそういう存在である。&lt;/p&gt;

&lt;p&gt;さて、&lt;a href=&quot;https://rubygems.org/gems/hatebu_entry&quot; title=&quot;hatebu_entry&quot;&gt;hatebu_entry&lt;/a&gt;を使って、今年の人気記事を並べてみよう。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;sx&quot;&gt;% hatebu_entry &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$BLOG_URL&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$BLOG_URL2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2013&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/04/15/i-need-bookmarks/&quot;&gt;ギットハブの事情&lt;/a&gt;によりこのブログのURLが途中で変わってしまったので、２つのURLをマージして2013年ものだけを抜き出す。結果は次の通りだ（数字は総はてブ数）。&lt;/p&gt;

&lt;table cellpadding=3px border=&#39;solid 1px&#39; align=center &gt;
  &lt;tr&gt;&lt;th&gt; &lt;/th&gt;&lt;th&gt;記事&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;698&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/12/24/why-not-start-ruby/&#39;&gt;僕が考えた最速・最小投資でRubyを学ぶ方法またはステマ乙&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;681&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/03/04/ruby-trivias-you-should-know-4/&#39;&gt;知って得する！５５のRubyのトリビアな記法&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;624&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/02/25/i-wanna-say-something-about-rubys-case/&#39;&gt;Rubyのcaseを〇〇(言語名)のswitch文だと思っている人たちにぼくから一言ガツンと申し上げたい&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;254&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/11/11/your-data-from-excel-to-the-web/&#39;&gt;Excelデータを最速でWebアプリ(Heroku)にする１０のステップ&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;186&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.com/2013/01/21/why-fp-with-ruby/&#39;&gt;Rubyを使って「なぜ関数プログラミングは重要か」を読み解く（改定）─ 前編 ─ 但し後編の予定なし&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;185&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/01/24/csv-table-method-is-awesome/&#39;&gt;Ruby標準添付ライブラリcsvのCSV.tableメソッドが最強な件について&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;162&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll/&#39;&gt;Jekyllいつやるの？ジキやルの？今でしょ！&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;111&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/09/04/is-that-a-yet-another-rdoc/&#39;&gt;メソッドの使い方もRubyに教えてほしい&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;97&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/11/14/introduce-ctod-gem-easyway-to-make-a-database-table/&#39;&gt;CSVデータをデータベース化するツール「CtoD」の紹介&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;87&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/08/30/monkey-patching-for-prudent-rubyists/&#39;&gt;分別のあるRubyモンキーパッチャーになるために&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/10/28/visualize-your-directory/&#39;&gt;あなたのプロジェクトを美しく視覚化する&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;64&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/12/13/minimum-step-for-deplying-websocket-app-to-heroku/&#39;&gt;Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;63&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/09/27/auto-attr-set-in-ruby/&#39;&gt;RubyistたちのDRY症候群との戦い&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;61&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/09/02/yes-i-hate-array-unshift/&#39;&gt;ええ、ハッキリ言います。私はRubyのArray#unshiftが嫌いです。&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;33&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;http://melborne.github.io/2013/10/18/visualize-ruby-tree-with-graphviz/&#39;&gt;RubyユニバースをGraphvizで視覚化する&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;


&lt;p&gt;ステマ記事が１位！スマン。&lt;/p&gt;

&lt;p&gt;まあ、今年も結構書いたなあという印象だが、これも読んでくれるブクマしてくれるツイートしてくれる人たちがいるからだ。感謝です。自分のお気に入りの記事はやっぱり「Rubyのcaseを〇〇(言語名)...」だな。&lt;/p&gt;

&lt;h2&gt;5冊のRuby関連電子書籍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:4000/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;において以下の5冊のRuby関連電子書籍を出版した。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20130207understand_ruby_object.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/02/ruby_object_cover.png&quot; alt=&quot;ruby_object&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/20130426ruby_tutorial.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/04/ruby_tutorial_cover.png&quot; alt=&quot;ruty_tutorial&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/zxUk&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「オブジェクトの理解から始めるRuby」EPUB版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/DBgJ&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「Rubyチュートリアル ～英文小説の最頻出ワードを見つけよう!」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20130304ruby_trivia.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/03/ruby_trivia_cover.png&quot; alt=&quot;trivia&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/20121207jekyll.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/05/jk/jekyll_cover.png&quot; alt=&quot;rack&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/owIqH&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「知って得する！５５のRubyのトリビアな記法」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/xfJY&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「30分のチュートリアルでJekyllを理解する」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20131224ruby_pack8.html&quot;&gt;
  &lt;img src=&quot;/assets/images/books/ruby_pack8.png&quot; alt=&quot;ruby_pack8&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gum.co/WwoyT&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「Ruby入門パッケージ８」EPUB/MOBI版&lt;/a&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;ここにもしっかりリンク貼る。&lt;/p&gt;

&lt;p&gt;5冊といってもJekyllは改訂版で最後のはパッケージ版なので実質3冊だ。しかも全部過去ネタ...。まあ去年の暮に&lt;a href=&quot;https://rubygems.org/gems/maliq&quot; title=&quot;maliq | RubyGems.org | your community gem host&quot;&gt;maliq&lt;/a&gt;作った勢いで始めたプロジェクトだからねぇ。&lt;/p&gt;

&lt;p&gt;売れ行きだが、毎月ちょろちょろとは買ってくれる人たちがいて、先日のステマ乙記事でちょっと跳ねた。もちろんビジネスというには程遠いが僕のkindle paperwhiteや電子書籍購入の原資にはなっている。兎に角、中途半端なRuby使いの書いたタダで読める信頼ならないコンテンツにお金を払う、僕はそういう人たちの心意気に感謝せずにはいられない。ありがとう！良かったら、もう一冊買ってね。&lt;/p&gt;

&lt;h2&gt;9個のRubygems&lt;/h2&gt;

&lt;p&gt;今年は8個の新しい宝石(Gem)を作った。&lt;/p&gt;

&lt;table cellpadding=3px border=&#39;solid 1px&#39; &gt;
  &lt;tr&gt;&lt;th&gt;date&lt;/th&gt;&lt;th&gt;gem&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;1/14&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/yampla&#39;&gt;yampla&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;1/29&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/flippy&#39;&gt;flippy&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;10/15&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/money_exchange&#39;&gt;money_exchange&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;10/16&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/hatebu_entry&#39;&gt;hatebu_entry&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;10/28&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/dir_friend&#39;&gt;dir_friend&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;11/10&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/ctoD&#39;&gt;ctoD&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;11/18&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/itunes_track&#39;&gt;itunes_track&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;12/12&lt;/td&gt;&lt;td&gt;&lt;a href=&#39;https://rubygems.org/gems/sinatra_websocket_template&#39;&gt;sinatra_websocket_template&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;


&lt;p&gt;これで僕の作ったGemは全部で13個になった（&lt;a href=&quot;https://rubygems.org/profiles/melborne&quot;&gt;my gems&lt;/a&gt;）。まあ小石ばかりだが。10月に入ってから「兎に角作ったものはGemの形で残そう」ということで数が増えた。僕にとって今年は「&lt;strong&gt;Gemの年&lt;/strong&gt;」と言っていい。&lt;/p&gt;

&lt;p&gt;各Gemの解説記事を貼っておこう。&lt;/p&gt;

&lt;h3&gt;Yampla&lt;/h3&gt;

&lt;p&gt;YamplaはYAMLファイルから&lt;a href=&quot;http://liquidmarkup.org/&quot; title=&quot;Liquid Templating language&quot;&gt;Liquid&lt;/a&gt;で書かれたテンプレートに基いてXMLのようなファイルを出力するツールだ。商品リストのような頁を作るために使う。これはM&#39;ELBORNE BOOKSの頁を用意するために作った。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/01/15/build-book-pages-with-yampla-gem/&quot; title=&quot;Rubyで商品リストのようなものを作るときあなたはいつもどうしていますか？&quot;&gt;Rubyで商品リストのようなものを作るときあなたはいつもどうしていますか？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/01/16/build-xml-with-yampla/&quot; title=&quot;Ruby製ドキュメント生成ツール「Yampla」でYAMLファイルからXMLファイルを生成する&quot;&gt;Ruby製ドキュメント生成ツール「Yampla」でYAMLファイルからXMLファイルを生成する&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Flippy&lt;/h3&gt;

&lt;p&gt;Flippyは&lt;code&gt;Ꮧəʇʇɪʍʇ&lt;/code&gt;のような上下反転文字を生成するツールだ。Terminalの出力を完全に反転するconsoleという機能も作った。縦書きツイートする機能も作った。Termtter用のpluginも書いた。縦ついについてはEarthquake.gem用のpluginを@no6vさんが書いてくれて、このときのTwitterでのやりとりがよかった。勉強になった。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/01/28/make-ruby-script-encript-with-flippy/&quot; title=&quot;RubyのコードをFlipして暗号化する？&quot;&gt;RubyのコードをFlipして暗号化する？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/02/19/flippy-console-now-added/&quot; title=&quot;flippy consoleで上下反転文字の不思議な感覚を味わってみませんか？&quot;&gt;flippy consoleで上下反転文字の不思議な感覚を味わってみませんか？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/03/18/lets-tweet-vertically-with-flippy/&quot; title=&quot;縦書きツイートの時代が来たようなので、わたし、RubyでTermtterで「縦つい。」します&quot;&gt;縦書きツイートの時代が来たようなので、わたし、RubyでTermtterで「縦つい。」します&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Colorable&lt;/h3&gt;

&lt;p&gt;Colorableは去年作ったツールだが、今年大幅に機能を強化したので一応ここに上げておく。&lt;a href=&quot;https://rubygems.org/gems/gviz&quot; title=&quot;gviz&quot;&gt;Gviz&lt;/a&gt;で色を簡単に扱えるようにしたかったから作った。色変換、色合成、色の環状リストの生成が簡単にできる。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/05/15/color-handler-colorable-gem-updated/&quot; title=&quot;Rubyで色を扱うライブラリ「Colorable」をアップデートしましたのでお知らせいたします&quot;&gt;Rubyで色を扱うライブラリ「Colorable」をアップデートしましたのでお知らせいたします&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;MoneyExchange&lt;/h3&gt;

&lt;p&gt;MoneyExchangeはGoogle Currency APIを使ってターミナルで簡単に通貨換算するためのツールだ。でも、いま試したら動かない..。Google Currency APIは非公式のものだったからこれが使えなくなったのかもしれない。まあ作ったのはmethod_missing使いたかっただけという話もある。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/10/15/yet-another-currency-converter-in-ruby/&quot; title=&quot;やっぱり通貨換算もターミナルでしたいよね - Google Currency APIをRubyで使う&quot;&gt;やっぱり通貨換算もターミナルでしたいよね - Google Currency APIをRubyで使う&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;HatebuEntry&lt;/h3&gt;

&lt;p&gt;HatebuEntryは渡されたURLのはてブ数をターミナルで出力するツールだ。上で見たようにこのブログのように途中でURLが変わってしまったサイトのはてブ数をマージする機能がある。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/10/16/hatena-bookmark-entries-in-terminal/&quot; title=&quot;はてなブックマークの人気エントリーもターミナルでみたいよね - ブクマ取得APIをRubyで使う&quot;&gt;はてなブックマークの人気エントリーもターミナルでみたいよね - ブクマ取得APIをRubyで使う&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;DirFriend&lt;/h3&gt;

&lt;p&gt;DirFriendはファイル・ディレクトリをGrahphvizを使ってビジュアライズするためのツールだ。Gvizでディレクトリを視覚化しようとしたら結構手間が掛かることがわかったので作った。Graphvizを自動でopenする機能ができないと泣きを入れていたら、@rosylillyさんが助けてくれたのがよかった。configファイルで予め出力スタイルを設定できるようにもした。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/10/28/visualize-your-directory/&quot; title=&quot;あなたのプロジェクトを美しく視覚化する&quot;&gt;あなたのプロジェクトを美しく視覚化する&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/10/31/there-is-a-beauty-in-your-computer/&quot; title=&quot;あなたはファイルシステムに美を見るか？&quot;&gt;あなたはファイルシステムに美を見るか？&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;CtoD&lt;/h3&gt;

&lt;p&gt;CtoDはCSVデータからデータベーステーブルを生成するツールだ。奥さんの韓ドラ視聴EXCELデータをWebアプリ化するために作った。実は密かに「&lt;a href=&quot;http://www.amazon.co.jp/%E3%83%91%E3%83%BC%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88Ruby-PERFECT-SERIES-6-Ruby%E3%82%B5%E3%83%9D%E3%83%BC%E3%82%BF%E3%83%BC%E3%82%BA/dp/4774158798&quot; title=&quot;パーフェクトRuby&quot;&gt;パーフェクトRuby&lt;/a&gt;」のすがまさおさんのチュートリアルをかなり参考にしている。テストを一行も書いていなかったところ@twitt__さんが書いてくれたのがよかった。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/11/11/your-data-from-excel-to-the-web/&quot; title=&quot;Excelデータを最速でWebアプリ(Heroku)にする&amp;lt;del&amp;gt;１０&amp;lt;/del&amp;gt;９のステップ&quot;&gt;Excelデータを最速でWebアプリ(Heroku)にする&lt;del&gt;１０&lt;/del&gt;９のステップ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/11/14/introduce-ctod-gem-easyway-to-make-a-database-table/&quot; title=&quot;CSVデータをデータベース化するツール「CtoD」の紹介&quot;&gt;CSVデータをデータベース化するツール「CtoD」の紹介&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;ItunesTrack&lt;/h3&gt;

&lt;p&gt;ItunesTrackは&lt;a href=&quot;https://rubygems.org/gems/rb-appscript&quot; title=&quot;rb-appscript | RubyGems.org | your community gem host&quot;&gt;rb-appscript&lt;/a&gt;を使って、音楽ライブラリをCSV化するツールだ。CtoDと組合せて自分の音楽ライブラリをブラウザ上で眺めて見るために作った。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/11/19/build-a-database-for-itunes-music-data/&quot; title=&quot;iTunes.appの音楽ライブラリを最速でWebアプリにするたった３つのステップ&quot;&gt;iTunes.appの音楽ライブラリを最速でWebアプリにするたった３つのステップ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/11/20/introduce-itunestrack-gem/&quot; title=&quot;iTuneの音楽ライブラリにアクセスしてCSV化できる「iTunesTrack」の紹介&quot;&gt;iTuneの音楽ライブラリにアクセスしてCSV化できる「iTunesTrack」の紹介&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;SinatraWebsocketTemplate&lt;/h3&gt;

&lt;p&gt;SinatraWebsocketTemplateはWebSocketアプリのひな形を簡単に作れるようにするために作った。後に書くOtoTweというWebアプリとかを作ったときに、無駄に反復作業が多いと思ったので作った。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/13/minimum-step-for-deplying-websocket-app-to-heroku/&quot; title=&quot;Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ&quot;&gt;Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;以上だが、これらのGemを作るに際し今年は「&lt;a href=&quot;http://whatisthor.com/&quot; title=&quot;Thor - Home&quot;&gt;Thor&lt;/a&gt;」の使い方を学んだのがよかった。Thorを使うとサブコマンド付きCLIツールのインタフェースが簡単にできる。SinatraWebsocketTemplateでテンプレートを生成するのにも大いに使っている。&lt;/p&gt;

&lt;h2&gt;2個のRuby製Webアプリ&lt;/h2&gt;

&lt;p&gt;2個のRuby製Webアプリを作った。まあいずれも簡単なデモアプリだが。&lt;/p&gt;

&lt;h3&gt;OtoTwe&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://ototwe.herokuapp.com/&quot; title=&quot;OtoTwe&quot;&gt;OtoTwe&lt;/a&gt;は、Twitterで#ototweタグを付けてつぶやくと音が出るというサイトだ。音はサイトを開いている人全員にブロードキャストされる。さっちゃん（@ne_sachirou）に誘われて参加することになった、&lt;a href=&quot;http://www.adventar.org/calendars/95&quot; title=&quot;FuniSaya Advent Calendar 2013 - Adventar&quot;&gt;FuniSaya Advent Calendar 2013 - Adventar&lt;/a&gt;に併せて作った。最初WebSocketを使うつもりだったが、後に&quot;Server-Sent Events&quot;という技術があるのを知ってこれを使ってみた（Userカウンタの更新に激しい遅延があるのはそのため）。HTML5 Web Audioに触れたのがよかった。&lt;/p&gt;

&lt;p&gt;ただサイトとしては今ひとつ盛り上がれなかったのが残念だった。リアルタイムWebの難しさを垣間見た。いまでも生きているのでサイトを開いて、&#39;hello #ototwe #C3&#39;などとつぶやいてみてほしい。待ってるから。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/06/come-join-ototwe/&quot; title=&quot;つぶやきで合奏したいだと？そんなやつは一昨日（おとつい）きやがれ！&quot;&gt;つぶやきで合奏したいだと？そんなやつは一昨日（おとつい）きやがれ！&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Typewr&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;は、タイプライターのようなチャットシステムだ。なんのことやらだが、これもWebSocketを使っているので一人のタイプが全員にブロードキャストされる。各人の文字は一応色分けで区別できる。&lt;/p&gt;

&lt;p&gt;個人的には気に入ってるんだが、みんなシャイなのでちょっとタイプして直ぐ去ってしまうのが残念だ。今でも生きているので、遊びに来てほしい。vimperatorとかをOFFにして。待ってるから。できればSafariがいい。ChromeはBackSpaceが効かないようだ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/09/typewr-new-style-chat-with-websocket/&quot; title=&quot;WebSocketで実現する未来型チャットシステム?!&quot;&gt;WebSocketで実現する未来型チャットシステム?!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/10/is-this-chat-or-typewriter/&quot; title=&quot;チャット？　タイプライター？　音？　何？&quot;&gt;チャット？　タイプライター？　音？　何？&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;まとめ&lt;/h2&gt;

&lt;p&gt;そんなわけで、この１年の成果というか活動を振り返ってみた。来年はどういう年になるかな。来年もよろしく！&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
    &lt;ol&gt;
        &lt;li id=&#39;fn:1&#39;&gt;感謝と愛は別次元の脳の作用です &lt;a href=&#39;#fnref:1&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&#39;fn:2&#39;&gt;これがいつまでもテストファーストできない理由ですかね？ &lt;a href=&#39;#fnref:2&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>Rubyで不揃いのデータを集計する</title>
   <link href="http://melborne.github.io/2013/12/26/how-about-enumerable-chunky"/>
   <updated>2013-12-26T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/26/how-about-enumerable-chunky</id>
   <content type="html">&lt;h2&gt;─　問題　─&lt;/h2&gt;

&lt;p&gt;ブログ記事に関する次のようなテキストデータがあって、Rubyを使って年別の記事数を集計したいとします。あなたならどうしますか？&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2013
    Dec 25 Blog Post22
    Nov 10 Blog Post21
    Aug 09 Blog Post20
    Feb 06 Blog Post19
    Jun 09 Blog Post18
    Mar 11 Blog Post17
    Jan 21 Blog Post16
    Jan 02 Blog Post15
2012
    Nov 20 Blog Post14
    Oct 09 Blog Post13
    Oct 05 Blog Post12
    Sep 15 Blog Post11
    Sep 10 Blog Post10
    Feb 02 Blog Post9
2011
    Dec 24 Blog Post8
    Dec 03 Blog Post7
    Nov 04 Blog Post6
    Oct 12 Blog Post5
    Aug 12 Blog Post4
    Aug 02 Blog Post3
    May 11 Blog Post2
    Mar 18 Blog Post1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h2&gt;─　僕のやり方　─&lt;/h2&gt;

&lt;p&gt;一見簡単そうで、でもよく考えるとちょっと厄介そうな問題ですよね。状態遷移を管理する必要がありそうな...。&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;でも安心してください、Rubyには&lt;code&gt;Enumerable#chunk&lt;/code&gt;があります！&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://docs.ruby-lang.org/ja/2.0.0/method/Enumerable/i/chunk.html&quot; title=&quot;instance method Enumerable#chunk&quot;&gt;instance method Enumerable#chunk&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog_entries.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:empty?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\d{4}/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [[false, [&amp;quot;2013&amp;quot;]], [true, [&amp;quot;Dec 26 Blog Post23&amp;quot;, &amp;quot;Dec 25 Blog Post22&amp;quot;, &amp;quot;Nov 10 Blog Post21&amp;quot;, &amp;quot;Aug 09 Blog Post20&amp;quot;, &amp;quot;Feb 06 Blog Post19&amp;quot;, &amp;quot;Jun 09 Blog Post18&amp;quot;, &amp;quot;Mar 11 Blog Post17&amp;quot;, &amp;quot;Jan 21 Blog Post16&amp;quot;, &amp;quot;Jan 02 Blog Post15&amp;quot;]], [false, [&amp;quot;2012&amp;quot;]], [true, [&amp;quot;Nov 20 Blog Post14&amp;quot;, &amp;quot;Oct 09 Blog Post13&amp;quot;, &amp;quot;Oct 05 Blog Post12&amp;quot;, &amp;quot;Sep 15 Blog Post11&amp;quot;, &amp;quot;Sep 10 Blog Post10&amp;quot;, &amp;quot;Feb 02 Blog Post9&amp;quot;]], [false, [&amp;quot;2011&amp;quot;]], [true, [&amp;quot;Dec 24 Blog Post8&amp;quot;, &amp;quot;Dec 03 Blog Post7&amp;quot;, &amp;quot;Nov 04 Blog Post6&amp;quot;, &amp;quot;Oct 12 Blog Post5&amp;quot;, &amp;quot;Aug 12 Blog Post4&amp;quot;, &amp;quot;Aug 02 Blog Post3&amp;quot;, &amp;quot;May 11 Blog Post2&amp;quot;, &amp;quot;Mar 18 Blog Post1&amp;quot;]]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;chunkは各lineに対するブロックの評価結果が変化（遷移）する点を監視し、その点を区切りとしてlineを複数のチャンク（塊）に分けます。ここでは年のラベルにマッチする正規表現でチャンクを分けています。&lt;/p&gt;

&lt;p&gt;こうなればあとは簡単ですね！&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%d =&amp;gt; %d&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2013 =&amp;gt; 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2012 =&amp;gt; 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2011 =&amp;gt; 8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ちなみにブロック内におけるマッチ結果に対するnil評価（nil?）は必須です。chunkではブロックの返り値がnilになる場合はその行をチャンクの対象外にするからです（非マッチはnilを返します）。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog_entries.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:empty?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\d{4}/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [[#&amp;lt;MatchData &amp;quot;2013&amp;quot;&amp;gt;, [&amp;quot;2013&amp;quot;]], [#&amp;lt;MatchData &amp;quot;2012&amp;quot;&amp;gt;, [&amp;quot;2012&amp;quot;]], [#&amp;lt;MatchData &amp;quot;2011&amp;quot;&amp;gt;, [&amp;quot;2011&amp;quot;]]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;併せて各月の集計もしてみます。これはEnumerable#group_byで一発です。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%d =&amp;gt; %d&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^[A-Z][a-z]{2}/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; %s: %d&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2013 =&amp;gt; 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2012 =&amp;gt; 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2011 =&amp;gt; 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  May: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h2&gt;このブログの記事数を集計してみる&lt;/h2&gt;

&lt;p&gt;そんなわけで...&lt;/p&gt;

&lt;p&gt;このブログのトップページをコピペして記事数を集計してみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;hp12c_entries.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:empty?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\d{4}/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chunks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%d =&amp;gt; %d&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^[A-Z][a-z]{2}/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; %s: %d&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2013 =&amp;gt; 75&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  May: 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Apr: 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2012 =&amp;gt; 83&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 10&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jul: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  May: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Apr: 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 12&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2011 =&amp;gt; 60&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 13&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jul: 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  May: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2010 =&amp;gt; 39&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jul: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  May: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 13&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2009 =&amp;gt; 56&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  May: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Apr: 20&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 18&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2008 =&amp;gt; 41&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jul: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Apr: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 11&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt; 2007 =&amp;gt; 31&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Dec: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Nov: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Oct: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Sep: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Aug: 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jun: 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Apr: 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Mar: 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Feb: 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &amp;gt;&amp;gt;  Jan: 7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;うん、今年もよく書いた。&lt;/p&gt;

&lt;p&gt;みんなもチャンクしようぜ。チャンク！チャンク！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>電子書籍「Ruby入門パッケージ８ EPUB/MOBI版（500円）」売れてます！</title>
   <link href="http://melborne.github.io/2013/12/25/ruby-package-8-released"/>
   <updated>2013-12-25T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/25/ruby-package-8-released</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/24/why-not-start-ruby/&quot;&gt;前の記事&lt;/a&gt;でも紹介しましたが改めて。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;この度、「&lt;a href=&quot;http://melborne.github.io/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;」の2013年12月24日現在における全Ruby関連電子書籍８冊をパッケージングした「Ruby入門パッケージ８EPUB/MOBI版(500円)」の販売を開始しましたよ！個別購入（805円）に対し４割近い割引になっています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20131224ruby_pack8.html&quot;&gt;
  &lt;img src=&quot;/assets/images/books/ruby_pack8.png&quot; alt=&quot;ruby_pack8&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;書名：Ruby入門パッケージ８
内容：M&#39;ELBORNE BOOKSで現在（2013-12-24）までに販売されているRuby関連電子書籍全８冊を１つにパッケージしたもの
著者：kyoendo
フォーマット：EPUB / MOBI / DRMフリー
価格：500円
初版：2013年12月24日
含まれている電子書籍：
  1. これからRubyを始める人たちへ
  2. オブジェクトの理解から始めるRuby
  3. Rubyチュートリアル ～英文小説の最頻出ワードを見つけよう!
  4. irbから学ぶRubyの並列処理 ~ forkからWebSocketまで
  5. 知って得する！５５のRubyのトリビアな記法
  6. エラーメッセージから学ぶRack
  7. 30分のチュートリアルでJekyllを理解する
  8. Ruby脳が理解するJavaScriptのオブジェクト指向
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://gum.co/WwoyT&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「Ruby入門パッケージ８」EPUB/MOBI版&lt;/a&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;上のリンクはGumroadにおける商品購入リンクになっています。クリックすると、オーバーレイ・ウインドウが立ち上がって、この場でクレジットカード決済による購入が可能です。購入にはクレジット情報およびメールアドレスの入力が必要になります。購入すると、入力したメールアドレスにコンテンツのDLリンクが送られてきます。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;各書籍の概要についてはM&#39;ELBORNE BOOKSのトップページで確認するか、以下の記事を参考にしてください。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/24/why-not-start-ruby/&quot; title=&quot;僕が考えた最速・最小投資でRubyを学ぶ方法またはステマ乙&quot;&gt;僕が考えた最速・最小投資でRubyを学ぶ方法またはステマ乙&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;本パッケージに含まれるすべての電子書籍は、本ブログで公開している記事に対し、誤記の修正およびメディア向けの調整を行ったもので、実質的な内容についての追加・変更はありません。したがってテキストに関しお金を支払う価値は無いかもしれませんが、次の何れかの理由で興味を持たれる方が居られましたら、是非とも購入後検討の程宜しくお願い申し上げますm(__)m&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;コンテンツに関心があるので、それが電子書籍の形態で読めるのはやはり便利だ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;コードのSyntax HighlightingをEPUBで実現したものをあまり見たことがない。どんなものかちょっと見てみたい。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EPUB生成ツール&lt;a href=&quot;http://melborne.github.io/2012/12/03/when-bloggers-become-publishers/&quot; title=&quot;maliq&quot;&gt;Maliq&lt;/a&gt;に関心がある。つまり自分もブログを電子書籍化したいので、その出力サンプルとして参考にしたい。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ブログの記事を読んだが参考になった。これが無料なんて申し訳なく思うから買ってあげたい。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ブログの記事は読んでないが、興味はあるのでどうせなら電子書籍で読んでみよう。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;なんか表紙が気に入ったからそれを眺めるために買ってみよう。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;このブログのネタは全体としてなかなか面白い。これからも継続して欲しいので寄付の気持ちで購入してもいいかな。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;タブレットを買ったばかりなので、いろいろな電子書籍を衝動買いしたい。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Merry Christmas!。最高の気分。だれでもいいから俺の500円受け取って。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;なお、M&#39;ELBORNE BOOKSにおける電子書籍販売の収益金はもっぱら私、merborneの電子書籍購入原資に当てられています ^ ^;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>僕が考えた最速・最小投資でRubyを学ぶ方法またはステマ乙</title>
   <link href="http://melborne.github.io/2013/12/24/why-not-start-ruby"/>
   <updated>2013-12-24T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/24/why-not-start-ruby</id>
   <content type="html">&lt;p&gt;そろそろ軽くRubyをやってみたいけどなんか情報多すぎてどこから手を付けたらいいかわからない、リファレンス的なものとか言語論的なものとかコミュニティー的なものとかの情報は結構あるけど、もっとカジュアルでかと言ってどの言語でも使いまわせる的な説明じゃなくRubyらしさが浮き出てるようなもので、しかもちょっとしたCLIツールとかWebアプリとかを作れる程度に理解の手助けをしてくれるものがほしいけど、今の段階で大枚叩きたくないしという人向けに僕がRubyの道案内を致します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20131224ruby_pack8.html&quot;&gt;
  &lt;img src=&quot;/assets/images/books/ruby_pack8.png&quot; alt=&quot;ruby_pack8&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;ステップ１（所要時間：０〜１０分、投資額：０円）&lt;/h2&gt;

&lt;p&gt;あなたのコンピュータでRuby2系を使えるようにします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Macなひと =&gt; Mavericksをインストールする。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windowsなひと =&gt; &lt;a href=&quot;http://rubyinstaller.org/&quot; title=&quot;RubyInstaller for Windows&quot;&gt;RubyInstaller for Windows&lt;/a&gt;でRuby2系をインストールする。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linuxなひと =&gt; ご自由に。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ターミナルを開いて以下のようにして確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% ruby -v
ruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-darwin12.2.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同時に&lt;code&gt;irb&lt;/code&gt;という対話型実行環境が導入されているはずです。ためしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% irb
irb(main):001:0&amp;gt; 123 ** 100
=&amp;gt; 97838805977257474352566705351629014033137938449734350966526074342064414099511156930426773522415958061389200997320437636836296142253482249885877442849062074323416253749444792245426920843456133929113701176246001
irb(main):002:0&amp;gt; Math.sqrt 5
=&amp;gt; 2.23606797749979
irb(main):003:0&amp;gt; puts &quot;hello, world!&quot;
hello, world!
=&amp;gt; nil
irb(main):004:0&amp;gt; [&quot;Madrid&quot;, &quot;Tokyo&quot;, &quot;Istanbul&quot;].find {|city| city.start_with?(&quot;T&quot;)}
=&amp;gt; &quot;Tokyo&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h2&gt;ステップ２（所要時間：５分、投資額：０円）&lt;/h2&gt;

&lt;p&gt;以下のスライドを見ながら自らもirbを叩いて、Rubyのオブジェクト指向を感じる。&lt;/p&gt;

&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;50432e8fd956d50002024bc2&quot; data-ratio=&quot;1.2945638432364097&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;


&lt;p&gt;Web版はこちらを。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://learn-ruby-from-one.herokuapp.com/#1&quot; title=&quot;Learn Ruby from One&quot;&gt;「１から始めるRuby」 on Heroku&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h2&gt;ステップ３（所要時間：30分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上のスライドを見てRubyに興味を持てたなら、M&#39;ELBORNE出版&lt;sup id=&#39;fnref:1&#39;&gt;&lt;a href=&#39;#fn:1&#39; rel=&#39;footnote&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/books/20121201start_ruby.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/start_ruby.jpg&quot; alt=&quot;start_ruby&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/RjRO&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「これからRubyを始める人たちへ」EPUB版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;上のリンクはGumroadにおける商品購入リンクになっています。クリックすると、オーバーレイ・ウインドウが立ち上がって、この場でクレジットカード決済による購入が可能です。購入にはクレジット情報およびメールアドレスの入力が必要になります。購入すると、入力したメールアドレスにコンテンツのDLリンクが送られてきます。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文庫本にして50頁ほどの短い本ですが、そのなかで簡単なRubyスクリプトの作成、Webアプリの作成、Rubyにおけるクラス構造の説明、メタプログラミングについてちょっと、オススメ紙本の紹介と欲張りな内容となっています。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/04/09/to-newbie/&quot; title=&quot;これからRubyを始める人たちへ&quot;&gt;これからRubyを始める人たちへ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;電子本で読みたいけど、&lt;a href=&quot;http://www.amazon.co.jp/Amazon-53-000955-Kindle-Paperwhite%EF%BC%88%E3%83%8B%E3%83%A5%E3%83%BC%E3%83%A2%E3%83%87%E3%83%AB%EF%BC%89/dp/B00CTUMNAO&quot; title=&quot;Kindle Paperwhite&quot;&gt;Kindle Paperwhite&lt;/a&gt;をお持ちでない方はこちらをインストールして。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/feature.html/ref=amb_link_361458882_3?ie=UTF8&amp;amp;docId=1000493771&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;amp;pf_rd_s=center-6&amp;amp;pf_rd_r=0MKXT4XT3WDHGDFHQS4R&amp;amp;pf_rd_t=1401&amp;amp;pf_rd_p=1354791822&amp;amp;pf_rd_i=1000464931&quot; title=&quot;Amazon.com: Free Kindle Reading Apps&quot;&gt;Amazon.com: Free Kindle Reading Apps&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ４（所要時間：30分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRubyにさらに興味が出てRubyでオブジェクト指向したいと思ったら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20130207understand_ruby_object.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/02/ruby_object_cover.png&quot; alt=&quot;ruby_object&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/zxUk&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「オブジェクトの理解から始めるRuby」EPUB版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;文庫本にして50頁ほどの短い本ですが、Rubyにおけるクラス、モジュール、オブジェクトの基本的事項をやさしく楽しい例と共に学べる内容になっています。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/02/07/understand-ruby-object/&quot; title=&quot;Rubyを始めたけど今ひとつRubyのオブジェクト指向というものが掴めないという人、ここに来て見て触って！&quot;&gt;Rubyを始めたけど今ひとつRubyのオブジェクト指向というものが掴めないという人、ここに来て見て触って！&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ５（所要時間：50分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRubyやりたいからなんか簡単なチュートリアルがほしいと思ったら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20130426ruby_tutorial.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/04/ruby_tutorial_cover.png&quot; alt=&quot;ruty_tutorial&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/DBgJ&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「Rubyチュートリアル ～英文小説の最頻出ワードを見つけよう!」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;文庫本にして170頁ほどの短い本ですが、英文小説の最頻出ワードを見つけるプログラムの作成を通してRubyの基礎を楽しく学ぶチュートリアルです。最初のプログラムの改善（ときには改悪）をこれでもかこれでもかと繰り返し（バージョン1〜29）その過程でRubyの書き方を学ぶものとなっています。&lt;/p&gt;

&lt;p&gt;チュートリアルなげーよという方は、Rubyの特徴の説明が書かれた１章は読んで２章のチュートリアルは適当に切り上げて次のステップ６へどうぞ。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/04/26/find-most-frequently-words-with-ruby/&quot; title=&quot;Rubyチュートリアル ─ 英文小説の最頻出ワードを見つけよう! ─&quot;&gt;Rubyチュートリアル ─ 英文小説の最頻出ワードを見つけよう! ─&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ６（所要時間：30分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRubyいいよでも遅いよねと思っているなら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20121213ruby_parallelize.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/ruby_parallel_cover.png&quot; alt=&quot;ruby_parallel&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/PjVk&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「irbから学ぶRubyの並列処理 ~ forkからWebSocketまで」EPUB版 &lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;文庫本にして30頁ほどの短い本ですが、チュートリアルに沿ってRubyの並列処理の基礎を理解する内容になっています。本書を読めばRubyのfork、Thread、Reactor、EventMachine、WebSocketの基本的な使い方を学べます。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2011/09/29/irb-Ruby-fork-WebSocket/&quot; title=&quot;irbから学ぶRubyの並列処理 ~ forkからWebSocketまで&quot;&gt;irbから学ぶRubyの並列処理 ~ forkからWebSocketまで&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ７（所要時間：40分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRubyやるやるTipsも知りたいよと思っているなら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20130304ruby_trivia.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/03/ruby_trivia_cover.png&quot; alt=&quot;trivia&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/owIqH&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「知って得する！５５のRubyのトリビアな記法」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;文庫本にして120頁ほどの短い本ですが、実用的なTips、役に立たないトリビアを次から次へと紹介して読者を「へぇ」とか「ほぅ」とか言わせる内容になっています。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/03/04/ruby-trivias-you-should-know-4/&quot; title=&quot;知って得する！５５のRubyのトリビアな記法&quot;&gt;知って得する！５５のRubyのトリビアな記法&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ８（所要時間：50分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRubyでWebアプリやりたいと思っているなら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20121224lerning_rack.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/rack_cover.png&quot; alt=&quot;rack&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/ZqRt&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「エラーメッセージから学ぶRack」EPUB版 &lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;RackはRailsやSinatraなどのWebフレームワークでも採用されている、WebサーバーとWebアプリを繋ぐ重要なコンポーネントです。本書は文庫本にして145頁ほどの短い本ですが、rackupコマンドの実行に対するエラー出力を追っていきながら、Rackを学ぶチュートリアルになっています。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/08/02/build-your-own-web-framework-with-rack/&quot; title=&quot;エラーメッセージから学ぶRack - 最初の一歩&quot;&gt;エラーメッセージから学ぶRack - 最初の一歩&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ９（所要時間：30分、投資額：105円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRackで動的サイトもいいけどブログとかには簡単に構築できる静的サイトがいいよねと思っているなら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20121207jekyll.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/05/jk/jekyll_cover.png&quot; alt=&quot;rack&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/xfJY&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「30分のチュートリアルでJekyllを理解する」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Jekyllはブログのような静的サイトを構築するためのRuby製ファイルジェネレータです。本書は文庫本にして75頁ほどの短い本ですが、ブログサイトの構築を通してJekyllの基礎を学ぶチュートリアルになっています。ちなみに本ブログもJekyllを使ってgithub上に構築されています。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll/&quot; title=&quot;Jekyllいつやるの？ジキやルの？今でしょ！&quot;&gt;Jekyllいつやるの？ジキやルの？今でしょ！&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ１０（所要時間：40分、投資額：100円）&lt;/h2&gt;

&lt;p&gt;上の書籍を読んでRubyもいいけどWebアプリやってるとJavaScriptの理解も大事だよねと思っているなら、M&#39;ELBORNE出版から出ている以下の電子書籍を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20121215js_oop.html&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/js_oop_cover.png&quot; alt=&quot;js_oop&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/wNxf&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「Ruby脳が理解するJavaScriptのオブジェクト指向」EPUB版 &lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad-button.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;本書は文庫本にして115頁ほどの短い本ですが、Rubyにおけるオブジェクト指向と対比しながらJavaScriptのオブジェクト指向を学ぶチュートリアルになっています。&lt;/p&gt;

&lt;p&gt;事前に内容を確かめたい方、100円が大枚だという方はこちらへ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/09/09/understand-js-oop-with-ruby-brain/&quot; title=&quot;Ruby脳が理解するJavaScriptのオブジェクト指向&quot;&gt;Ruby脳が理解するJavaScriptのオブジェクト指向&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ１１（所要時間：３００分、投資額：500円）&lt;/h2&gt;

&lt;p&gt;ここまで読んでRubyはやる気があるけど言う通りにやったらお前に８００円も払わなならんのか気に食わんと思ったなら、M&#39;ELBORNE出版から出ている先の８冊をパッケージにした「電子書籍「Ruby入門パッケージ８」EPUB/MOBI版」(500円)を買って読みます:-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/20131224ruby_pack8.html&quot;&gt;
  &lt;img src=&quot;/assets/images/books/ruby_pack8.png&quot; alt=&quot;ruby_pack8&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gum.co/WwoyT&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「Ruby入門パッケージ８」EPUB/MOBI版&lt;/a&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2&gt;ステップ１２（所要時間：∞分、投資額：∞円）&lt;/h2&gt;

&lt;p&gt;ここまで読んでRubyやるけどもっとまともな電子書籍ないのと思ってるなら、僕が１年前に書いた以下の記事を読みます:-)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/12/25/ebooks-for-learning-ruby/&quot; title=&quot;今年の冬休みに電子書籍であなたがRubyを習得しなければいけないたった一つの理由&quot;&gt;今年の冬休みに電子書籍であなたがRubyを習得しなければいけないたった一つの理由&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;ステップ１３（所要時間：60分、投資額：０〜Amazon出品者の気分円）&lt;/h2&gt;

&lt;p&gt;ここまで読んで本気でRubyやりたいからRubyの言語仕様の要点を端的に正確にちょっと古くてもいいから知りたいと思ってるなら、青木峰郎さんが書かれた以下の絶版本（通称RHG）の第１章と第８章を読みます。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://i.loveruby.net/ja/rhg/book/&quot; title=&quot;Rubyソースコード完全解説&quot;&gt;Rubyソースコード完全解説&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://i.loveruby.net/ja/rhg/book/minimum.html&quot; title=&quot;第1章 Ruby言語ミニマム&quot;&gt;第1章 Ruby言語ミニマム&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://i.loveruby.net/ja/rhg/book/spec.html&quot; title=&quot;第8章 Ruby言語の詳細&quot;&gt;第8章 Ruby言語の詳細&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/Rubyソースコード完全解説-青木-峰郎/dp/4844317210?SubscriptionId=06WK2XPKDH9TJJ979P02&amp;tag=keyesblog05-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4844317210&quot;&gt;&lt;img class=&quot;amazon&quot; src=&quot;http://ecx.images-amazon.com/images/I/51MQAYG70TL._SL160_.jpg&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;http://www.amazon.co.jp/Rubyソースコード完全解説-青木-峰郎/dp/4844317210?SubscriptionId=06WK2XPKDH9TJJ979P02&amp;tag=keyesblog05-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4844317210&quot;&gt;Rubyソースコード完全解説&lt;/a&gt; by 青木 峰郎&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;僕からは以上です。&lt;/p&gt;

&lt;p&gt;Merry Christmas!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
    &lt;ol&gt;
        &lt;li id=&#39;fn:1&#39;&gt;M&#39;ELBORNE出版はブログの記事を電子書籍化して販売する僕の実験的プロジェクトです。 &lt;a href=&#39;#fnref:1&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>「Macのターミナルで雪が降る」をカラー化した。翻訳した。</title>
   <link href="http://melborne.github.io/2013/12/13/translate-let-it-snow-in-the-terminal"/>
   <updated>2013-12-13T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/13/translate-let-it-snow-in-the-terminal</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/RyoAnna/20131211/1386769871&quot; title=&quot;Macのターミナルで雪が降る ～ 最後のホワイトクリスマス - #RyoAnnaBlog&quot;&gt;こちらの記事&lt;/a&gt;でターミナルで雪を降らせるRubyスクリプトを知る。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://osxdaily.com/2013/12/06/snow-terminal-mac-os-x-command/&quot; title=&quot;Let it Snow in the Terminal of Mac OS X with This Command&quot;&gt;Let it Snow in the Terminal of Mac OS X with This Command&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;そのスクリプト。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &#39;C=`stty size`.scan(/\d+/)[1].to_i;S=[&quot;2743&quot;.to_i(16)].pack(&quot;U*&quot;);a={};puts &quot;\033[2J&quot;;loop{a[rand(C)]=0;a.each{|x,o|;a[x]+=1;print &quot;\033[#{o};#{x}H \033[#{a[x]};#{x}H#{S} \033[0;0H&quot;};$stdout.flush;sleep 0.1}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;感動した。&lt;/p&gt;

&lt;p&gt;カラー化した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &#39;C=`stty size`.scan(/\d+/)[1].to_i;S=[&quot;2743&quot;.to_i(16)].pack(&quot;U*&quot;);a={};puts &quot;\033[2J&quot;;loop{a[rand(C)]=0;a.each{|x,o|;a[x]+=1;print &quot;\033[#{o};#{x}H \033[#{[*31..37].sample}m \033[#{a[x]};#{x}H#{S} \033[0;0H \033[0m&quot;};$stdout.flush;sleep 0.1}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;http://gifzo.net/7WE3pRFQzH.gif&quot; alt=&quot;snow noshadow&quot; /&gt;
Hosted by &lt;a href=&quot;http://gifzo.net/&quot; title=&quot;Gifzo - 宇宙一簡単なスクリーンキャスト共有&quot;&gt;Gifzo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;雪じゃない。&lt;/p&gt;

&lt;p&gt;翻訳もした。&lt;/p&gt;

&lt;div&gt;&lt;script src=&#39;https://gist.github.com/7928434.js?file=&#39;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;You are being &amp;lt;a href=&amp;quot;https://github.com/gist/7928434&amp;quot;&amp;gt;redirected&amp;lt;/a&amp;gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ</title>
   <link href="http://melborne.github.io/2013/12/13/minimum-step-for-deplying-websocket-app-to-heroku"/>
   <updated>2013-12-13T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/13/minimum-step-for-deplying-websocket-app-to-heroku</id>
   <content type="html">&lt;p&gt;「テレビ放送が駄目になった」と言われて久しいですがその理由ははっきりしています。それは放送というものがリアルタイム・コンテンツを扱う媒体だからです。リアルタイム・コンテンツはユーザの自由を奪います。ある番組を見るためにユーザはその時間テレビの前に固定化されます。録画放送番組は字義的にはバッファード・コンテンツ&lt;sup id=&#39;fnref:1&#39;&gt;&lt;a href=&#39;#fn:1&#39; rel=&#39;footnote&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;と言えますが、ユーザがそのコントロール権を持っていないつまりその視聴タイミングの制御を製作者側が持っているので、これはリアルタイム・コンテンツなのです。ユーザの唯一の武器はDVDレコーダによる制約の中のローカルバファリングのみです。&lt;/p&gt;

&lt;p&gt;現在の&lt;strong&gt;Web&lt;/strong&gt;は主としてバッファード・コンテンツを扱う媒体です。バッファード・コンテンツの世界ではユーザは好きな時間に好きなだけコンテンツを視聴できるという自由が与えられます。コンテンツの製作者側・提供者側にそのタイミングをコントロールする自由はありません。ユーザがコンテンツのコントロール権を持っている世界、それが&lt;strong&gt;Web&lt;/strong&gt;なのです。&lt;/p&gt;

&lt;p&gt;その一方でWebにも変化が訪れています。&lt;strong&gt;体験の共有&lt;/strong&gt;に対する回帰です。リアルタイム・コンテンツの消費からバッファード・コンテンツの消費への移行でユーザが失ったもの、それが&lt;strong&gt;体験の共有&lt;/strong&gt;です。体験の共有はコンテンツに対する消費の同時性つまりリアルタイム性を要求します。前述のようにこれはユーザにとっての制約です。しかしユーザは今、この制約の一部を受け入れてでもWeb上での体験の共有を求めるようになってきています。その結果としてWeb上のコンテンツもバッファード・コンテンツから偽リアルタイム・コンテンツにその一部が変質しつつあります。テキストコンテンツは頁という概念を失い、リアルタイム・コミュニケーションのために140文字の言葉のかけらに圧縮されました。&lt;/p&gt;

&lt;p&gt;この変化をWebがすべてを飲み込んでいると見ることもできるでしょう。結局、この世界では誰もコントロール権など持っていない（いらない）、そう理解するのが正しいのかもしれません。&lt;/p&gt;

&lt;p&gt;とか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;そんなわけで、WebSocketです。WebSocketはWebの世界で真のリアルタイムを実現します。そしてその準備は整いつつあります。&lt;/p&gt;

&lt;p&gt;まずは体験です。さあ、次のリンクをクリックして真のリアルタイムの世界を、体験の共有を味わってください！&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;使い方の説明はこちら。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;/2013/12/10/is-this-chat-or-typewriter/&quot; title=&quot;チャット？　タイプライター？　音？　何？&quot;&gt;チャット？　タイプライター？　音？　何？&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;スイマセン...遊びに来てくれる人が少なくて...宣伝...。&lt;/p&gt;

&lt;p&gt;まあ、でもこれがWebSocketによるリアルタイムWebの一サンプルです。リアルタイムWebの世界は未開拓の地です。発想次第でユニークなものが生まれる可能性があります。&lt;/p&gt;

&lt;h2&gt;Ruby製WebSocketアプリを最速でHerokuにデプロイする５つのステップ&lt;/h2&gt;

&lt;p&gt;さて、ここからが本題です。ふぅ。&lt;/p&gt;

&lt;p&gt;Herokuでは現在試験的機能として、WebSocketを可能にするオプションが用意されています。これを使うと&lt;a href=&quot;http://pusher.com/&quot; title=&quot;Pusher | HTML5 WebSocket Powered Realtime Messaging Service&quot;&gt;Pusher&lt;/a&gt;などの外部サービスに頼らずに、HerokuでホスティングされるWebアプリ上でWebSocketの機能を実現できるようになります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/heroku-labs-websockets&quot; title=&quot;Heroku Labs: WebSockets | Heroku Dev Center&quot;&gt;Heroku Labs: WebSockets | Heroku Dev Center&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;加えて、HerokuはRuby（Sinatra）でWebSocketを使ったチャットシステムのサンプル＆デモも公開しています。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/ruby-websockets#deploy&quot; title=&quot;Using WebSockets on Heroku with Ruby | Heroku Dev Center&quot;&gt;Using WebSockets on Heroku with Ruby | Heroku Dev Center&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;で、この記事に従えばWebSocketのアプリを作って公開することが簡単にできるのですが、それでもやっぱり定型的なコードを一つずつ用意するのには骨が折れます。SinatraにはRailsのようなGeneratorもないですし。&lt;/p&gt;

&lt;p&gt;そんなわけで...。&lt;/p&gt;

&lt;p&gt;SinatraでWebSocketを作る際のスケルトンを生成する&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;というGemを作りました:-)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/sinatra_websocket_template&quot; title=&quot;sinatra_websocket_template | RubyGems.org | your community gem host&quot;&gt;sinatra_websocket_template | RubyGems.org | your community gem host&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/melborne/sinatra-websocket-template&quot; title=&quot;melborne/sinatra-websocket-template&quot;&gt;melborne/sinatra-websocket-template&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;は、&lt;code&gt;bundle gem PROJECT&lt;/code&gt;で生成されるファイル群に加えて、上記記事を参考にしたWebSocketに必要なファイル群を生成、出力します。ファイルにはWebSocketを実現するサンプルコードが載っているので、コードを一行も書くこと無くWebSocketの体験ができます。&lt;/p&gt;

&lt;p&gt;以下では、このGemを使ってWebSocketアプリを作る手順および作ったWebアプリをHerokuにデプロイする手順を説明します。&lt;/p&gt;

&lt;h2&gt;STEP1: Sinatra-websocket-templateのインストール&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;をインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% gem install sinatra_websocket_template
Fetching: sinatra_websocket_template-0.0.1.gem (100%)
Successfully installed sinatra_websocket_template-0.0.1
1 gem installed
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;STEP2: プロジェクトの生成&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sinatra_websocket_template&lt;/code&gt;コマンドを実行してサブコマンドを確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% sinatra_websocket_template
Commands:
  sinatra_websocket_template help [COMMAND]  # Describe available commands or one specific command
  sinatra_websocket_template new PROJECT     # Creates a skeleton for your project
  sinatra_websocket_template version         # Prints the SinatraWebsocketTemplate&#39;s version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;new&lt;/code&gt;サブコマンドにプロジェクトの名前を渡して、プロジェクトのスケルトンを生成します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sinatra_websocket_template new hello_chat
      create  hello_chat/Procfile
      create  hello_chat/config.ru
      create  hello_chat/lib/app.rb
      create  hello_chat/lib/views/index.haml
      create  hello_chat/lib/public/css/main.css
      create  hello_chat/lib/public/js/application.js
      create  hello_chat/lib/hello_chat/backend.rb
      create  hello_chat/Gemfile
      create  hello_chat/Rakefile
      create  hello_chat/LICENSE.txt
      create  hello_chat/README.md
      create  hello_chat/.gitignore
      create  hello_chat/hello_chat.gemspec
      create  hello_chat/lib/hello_chat.rb
      create  hello_chat/lib/hello_chat/version.rb
Initializating git repo in /Users/keyes/Dropbox/playground/hello_chat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プロジェクトのディレクトリに移動して、生成されたファイル群を確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% cd hello_chat
/hello_chat% tree
.
├── Gemfile
├── LICENSE.txt
├── Procfile
├── README.md
├── Rakefile
├── config.ru
├── hello_chat.gemspec
└── lib
    ├── app.rb
    ├── hello_chat
    │   ├── backend.rb
    │   └── version.rb
    ├── hello_chat.rb
    ├── public
    │   ├── css
    │   │   └── main.css
    │   └── js
    │       └── application.js
    └── views
        └── index.haml

6 directories, 14 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;折角だから、「&lt;a href=&quot;https://rubygems.org/gems/dir_friend&quot; title=&quot;dir_friend&quot;&gt;dir_friend&lt;/a&gt;」を使って、ビジュアライズもします:-)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% dir_friend dot .
&#39;a.dot&#39; created in the current directory.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/12/hello_chat1.png&quot; alt=&quot;hello chat noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（参考：&lt;a href=&quot;/2013/10/31/there-is-a-beauty-in-your-computer/&quot; title=&quot;あなたはファイルシステムに美を見るか？&quot;&gt;あなたはファイルシステムに美を見るか？&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;この中でWebSocketを実現する重要なファイルは、&lt;code&gt;lib/hello_chat/backend.rb&lt;/code&gt;と&lt;code&gt;lib/public/js/application.js&lt;/code&gt;です。中身は後で確認するとして、先に進みます。&lt;/p&gt;

&lt;h2&gt;STEP3: ローカルでのプロジェクトの起動&lt;/h2&gt;

&lt;p&gt;まずは&lt;code&gt;bundle install&lt;/code&gt;します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/hello_chat% bundle install
Fetching gem metadata from https://rubygems.org/...........
Fetching gem metadata from https://rubygems.org/..
Resolving dependencies...
Using rake (10.1.0)
Using bundler (1.3.5)
Using dotenv (0.9.0)
Using eventmachine (1.0.3)
Using websocket-driver (0.3.1)
Using faye-websocket (0.7.1)
Using thor (0.18.1)
Using foreman (0.63.0)
Using tilt (1.4.1)
Using haml (4.0.4)
Using rack (1.5.2)
Using puma (2.7.1)
Using rack-protection (1.5.1)
Using sinatra (1.4.4)
Using hello_chat (0.0.1) from source at /Users/keyes/Dropbox/playground/hello_chat
hello_chat at /Users/keyes/Dropbox/playground/hello_chat did not have a valid gemspec.
This prevents bundler from installing bins or native extensions, but that may not affect its functionality.
The validation message from Rubygems was:
  &quot;FIXME&quot; or &quot;TODO&quot; is not a description

Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アプリケーションに必要なGemsがインストールされました。プロセスマネージャのforemanを通してアプリを起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/hello_chat% bundle exec foreman start
13:37:24 web.1  | started with pid 18722
13:37:27 web.1  | Puma starting in single mode...
13:37:27 web.1  | * Version 2.7.1, codename: Earl of Sandwich Partition
13:37:27 web.1  | * Min threads: 0, max threads: 16
13:37:27 web.1  | * Environment: development
13:37:27 web.1  | * Listening on tcp://0.0.0.0:5000
13:37:27 web.1  | Use Ctrl-C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5000番ポートでサーバが起動したので、２つのブラウザを起動してアクセスします。&lt;/p&gt;

&lt;p&gt;それぞれのブラウザでページ上のHello!ボタンを交互に押してみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/12/hello_chat2.png&quot; alt=&quot;hello chat noshadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;WebSocketによる通信が成功しています。これでSinatra-websocket-templateで生成されるスケルトンで一応WebSocketが実現できることが確認できました。&lt;/p&gt;

&lt;h2&gt;STEP4: プロジェクトのコードを書く&lt;/h2&gt;

&lt;p&gt;生成されたスケルトンを土台にしてプロジェクトに必要なコードを書きます。あなたの出番です。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt;で準備が完了しました。&lt;/p&gt;

&lt;h2&gt;STEP5: Herokuへデプロイ&lt;/h2&gt;

&lt;p&gt;プロジェクトが完成したのでHerokuにアプリを作ります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% heroku create hellochat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Heroku上のWebSocketの機能を有効にします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% heroku labs:enable websockets
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デプロイです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% git push heroku master
% heroku open
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで完了です。&lt;/p&gt;

&lt;h2&gt;backend.rbとapplication.jsの中身&lt;/h2&gt;

&lt;p&gt;スケルトンにおける&lt;code&gt;backend.rb（WebSocketにおけるサーバー側）&lt;/code&gt;と&lt;code&gt;application.js（クライアント側）&lt;/code&gt;の中身だけ確認してみます。&lt;/p&gt;

&lt;p&gt;backend.rbはRackのミドルウェアとして構成されています。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# backend.rb&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;faye/websocket&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloChat&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Backend&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;KEEPALIVE_TIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Faye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:WebSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;websocket?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Faye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:WebSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KEEPALIVE_TIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:close&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@clients&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rack_response&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;クライアント側からの通信がWebSocketに係る場合、Backend#callでそのイベントをソケット側にハイジャックし（Faye::WebSocket.websocket?(env)）、ここでそのイベントに応じた処理を返します。例えば、クライアント側からWebSocketに係るメッセージが送信されてきた場合は、これを&lt;code&gt;ws.on :message&lt;/code&gt;で受けて、そのメッセージを全クライントにブロードキャストしています。また、クライアントが立ち上げられたときは、これを&lt;code&gt;ws.on :open&lt;/code&gt;で受けて、そのクライアントに自身の識別ID（object_id）を返すと共に、クライアントの総数をブロードキャストしています。&lt;/p&gt;

&lt;p&gt;次に、&lt;code&gt;application.js&lt;/code&gt;のコードを見ます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// application.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counterRefresh&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#user-counter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appendMessage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#message-box&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;div class=&amp;#39;message&amp;#39;&amp;gt;&amp;lt;span class=&amp;#39;user-id&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;:&amp;lt;/span&amp;gt; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;/div&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#count-button&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^http/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ws&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;myid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;my-message&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;appendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counterRefresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;クライアント側では、WebSocketオブジェクトを生成して&lt;code&gt;ws.onmessage&lt;/code&gt;にサーバー側からのメッセージを受けたときの処理を登録しています。そして受信データに含まれるプロパティに応じて処理を切り分けています。また、&lt;code&gt;Hello!&lt;/code&gt;ボタンがクリックされたときに,&lt;code&gt;ws.send(data)&lt;/code&gt;でサーバー側にメッセージを送信します。&lt;/p&gt;

&lt;p&gt;以上で、説明は終わりです。&lt;/p&gt;

&lt;p&gt;是非とも&lt;code&gt;Sinatra-websocket-template&lt;/code&gt;をベースに何か面白いものを作ってくださいね。&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/ruby_parallel_cover.png&quot; alt=&quot;ruby_parallel&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/rack_cover.png&quot; alt=&quot;rack&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/js_oop_cover.png&quot; alt=&quot;js_oop&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
    &lt;ol&gt;
        &lt;li id=&#39;fn:1&#39;&gt;今勝手に考えた造語です。ユーザがランダムアクセス可能なリソースをイメージしています。 &lt;a href=&#39;#fnref:1&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
&lt;/div&gt;



</content>
 </entry>
 
 <entry>
   <title>チャット？　タイプライター？　音？　何？</title>
   <link href="http://melborne.github.io/2013/12/10/is-this-chat-or-typewriter"/>
   <updated>2013-12-10T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/12/10/is-this-chat-or-typewriter</id>
   <content type="html">&lt;p&gt;前の記事でチャットのようなタイプライターのようなリアルタイムWebアプリ「&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;」を紹介しました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/12/09/typewr-new-style-chat-with-websocket/&quot; title=&quot;WebSocketで実現する未来型チャットシステム?!&quot;&gt;WebSocketで実現する未来型チャットシステム?!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://typewr.herokuapp.com/&quot; title=&quot;Typewr&quot;&gt;Typewr&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;で、今回これにタイプ音を付けてみましたのでお知らせします。タイプライター経験者も未経験者も是非ともその感覚を味わってください。&lt;/p&gt;

&lt;p&gt;一応、使い方と注意点を書いておきます。&lt;/p&gt;

&lt;h2&gt;Typewrの使い方と注意点&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ブラウザ上でタイプするとタイプ音とともに一つの表示領域に文字が入力されていきます。タイプした文字はそのページを開いている他のユーザの表示領域にも同じように表示されます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;複数のユーザからの入力があると文字が混在して先の表示領域に入力されていきます。ユーザ毎に異なる文字色が使われるので、それによって辛うじてユーザ単位の入力が識別できます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Vimperatorなどのキー入力を奪うExtensionを使っている場合は、これをOFFにする必要があります。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文字を消すにはBackSpace（delete）キーを押します。BackSpaceを押し続けると他の人の入力を含めて文字が一つづつ消されていきます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ChromeではBackSpaceは「戻る」に固定され、変更できません。自分の環境（Mac）では代わりに&lt;code&gt;Ctrl+h&lt;/code&gt;が使えているのですが、使えない人もいるようです。解決策は今のところありません。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FireFoxでもBackSpaceは「戻る」ですが、設定でこれを無効にすることができます。設定方法は以下の記事が参考になります。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SafariではBackSpaceもCtrl+hも効いています。IEについてはわかりません。ごめんなさい。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://mozilla-remix.seesaa.net/article/128191783.html&quot; title=&quot;Mozilla Re-Mix: Firefoxで[Backspace]キーを押したときの挙動を変更する方法。&quot;&gt;Mozilla Re-Mix: Firefoxで[Backspace]キーを押したときの挙動を変更する方法。&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;以上です。&lt;/p&gt;
</content>
 </entry>
 
 
</feed>

