<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>hp12c</title>
 <link href="http://melborne.github.io/atom.xml" rel="self"/>
 <link href="http://melborne.github.io"/>
 <updated>2013-07-22T21:11:38+09:00</updated>
 <id>http://melborne.github.io</id>
 <author>
   <name>kyoendo</name>
   <email>postagie@gmail.com</email>
 </author>

 
 <entry>
   <title>僕にもできた！フェルトで作るKindleケース</title>
   <link href="http://melborne.github.io/2013/06/03/i-create-kindle-case"/>
   <updated>2013-06-03T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/06/03/i-create-kindle-case</id>
   <content type="html">&lt;p&gt;100均には許容できるタブレット向けケースが見当たらなかったので、自分（裁縫経験値１）でKindle Paperwhite用ケースを作りましたよ。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case11.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;作り方と成果をば。&lt;/p&gt;

&lt;h2&gt;不要なもの&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;700円以上のお金&lt;/li&gt;
&lt;li&gt;裁縫スキル&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;必要なもの&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;２枚のフェルト生地（各250円ほど）&lt;/li&gt;
&lt;li&gt;針と糸（200円ほど）&lt;/li&gt;
&lt;li&gt;定規とかカッターとか&lt;/li&gt;
&lt;li&gt;インターネット&lt;/li&gt;
&lt;li&gt;あなたの１時間半とやる気&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;得られるもの&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;お気に入りKindleケース（priceless）&lt;/li&gt;
&lt;li&gt;肩のこり&lt;/li&gt;
&lt;li&gt;裁縫の経験と微かな自信（iPodケースもこれでいくか...）&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;作り方&lt;/h2&gt;

&lt;h3&gt;0. 準備&lt;/h3&gt;

&lt;p&gt;新宿タカシマヤ内ユザワヤで、２枚のフェルト生地（@252円）と糸（157円）を購入。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case1.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;フェルトサイズは180 x 180 x 3mm。茶とオレンジでツートンに。糸は茶色を選択。&lt;/p&gt;

&lt;h3&gt;1. フェルトの裁断&lt;/h3&gt;

&lt;p&gt;Kindleのサイズに合わせて１辺を裁断。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case2.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;裁断後のサイズは180 x 145mm。幅はあと5〜10mm小さくても良かったとあとでわかる。そしたらもっとフィットしたのに...。&lt;/p&gt;

&lt;h3&gt;2. フェルトの縫製&lt;/h3&gt;

&lt;p&gt;以下のサイトを参考に「ブランケットステッチ」により２枚のフェルトの３辺を縫い合わせる。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://allabout.co.jp/gm/gc/53301/&quot; title=&quot;初めての刺繍3　ブランケットステッチ [ハンドメイド・手芸] All About&quot;&gt;初めての刺繍3　ブランケットステッチ [ハンドメイド・手芸] All About&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kcc.zaq.ne.jp/mim/tyoki/tk_nuihajime.html&quot; title=&quot;チョキチクフエルト　作ってみよう　縫い始め&quot;&gt;チョキチクフエルト　作ってみよう　縫い始め&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;二枚重ねて。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case3.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;先ずは底辺。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case4.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;まあ、適当に。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case5.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;次に側辺。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case6.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;取った糸が短くて一辺に足りないなどのトラブルを乗り越え、完成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case8.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;糸は、辺に対し十分な長さ（４倍以上）を確保しましょう。&lt;/p&gt;

&lt;h2&gt;完成品&lt;/h2&gt;

&lt;p&gt;Kindle Paperwhiteを入れた図。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case11.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case7.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case9.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/06/kindle_case10.jpg&quot; alt=&quot;kindle case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;さて、ケースもできたので、KindleでRubyの本でも読むか...。&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/start_ruby.jpg&quot; alt=&quot;start_ruby&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/02/ruby_object_cover.png&quot; alt=&quot;ruby_object&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/04/ruby_tutorial_cover.png&quot; alt=&quot;ruby_tutorial&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyllいつやるの？ジキやルの？今でしょ！</title>
   <link href="http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll"/>
   <updated>2013-05-20T00:00:00+09:00</updated>
   <id>http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll</id>
   <content type="html">

&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;


&lt;p&gt;す、すいません... ベタなタイトルで...。&lt;/p&gt;

&lt;h2&gt;Jekyll Version 1.0&lt;/h2&gt;

&lt;p&gt;2013年5月5日にJekyllの&lt;code&gt;Version 1.0&lt;/code&gt;がリリースされました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot; title=&quot;Jekyll • Simple, blog-aware, static sites&quot;&gt;Jekyll • Simple, blog-aware, static sites&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.parkermoore.de/2013/05/06/jekyll-1-dot-0-released/&quot; title=&quot;Jekyll 1.0 Released - Musings of Parker J. Moore&quot;&gt;Jekyll 1.0 Released - Musings of Parker J. Moore&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jekylltop.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2011年12月のVersion0.11.2以降、Jekyllの開発は停滞気味でした。しかし、&lt;a href=&quot;https://github.com/parkr&quot; title=&quot;parkr (Parker Moore)&quot;&gt;parkr (Parker Moore)&lt;/a&gt;氏がJekyllのcontributorとして参加したことを機に、昨年12月15日頃から新たな胎動が始まり、同22日に大きな問題を解決したVersion0.12.0がリリースされました。その後も怒涛の勢いでコミットが投げられ、遂に、5月5日に&lt;code&gt;Version 1.0&lt;/code&gt;がリリースされたのでした。Githubにおける&lt;a href=&quot;https://github.com/mojombo/jekyll/graphs/commit-activity&quot; title=&quot;Commit Activity · mojombo/jekyll&quot;&gt;Commit Activity&lt;/a&gt;グラフを見るとその変化がよくわかると思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jekyll.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;p&gt;「オープンソースは生きてる（生き物である）」ってことを実感させられる出来事です。&lt;/p&gt;

&lt;h2&gt;新機能&lt;/h2&gt;

&lt;p&gt;上記の活動を経て、新Jekyllには次のような比較的大きい新たな機能・改善が導入されました（0.12.0からの機能も含む）。&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;サブコマンド方式が採用され、&lt;code&gt;new&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;などのサブコマンドが導入された。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jekyll new&lt;/code&gt;コマンドにより、簡単にブログのひな形が作れるようになった。&lt;/li&gt;
&lt;li&gt;下書き記事を書きやすい環境ができた（Drafts）。&lt;/li&gt;
&lt;li&gt;記事の引用機能が導入された（Excerpt）。&lt;/li&gt;
&lt;li&gt;ページネーションができるようになった（Paginator）。&lt;/li&gt;
&lt;li&gt;コードのシンタックスハイライトおよびgistタグが組み込みとなった。&lt;/li&gt;
&lt;li&gt;公式サイトが大幅リニューアルされ、ドキュメントが充実した。&lt;/li&gt;
&lt;li&gt;Pygments.rbの採用によりビルドが高速化された（0.12.0より）。&lt;/li&gt;
&lt;li&gt;他ブログからの移行を支援するmigrate機能をjekyll-migrateというサブgemに集約した。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;このブログもJekyll（+Github Pages）で構築されていますが、個人的に特にうれしいのは公式サイトにおけるドキュメントの充実っぷりと、Pygments.rbの採用です。ドキュメントは分かりやすく整理され、かつ記述も丁寧で素晴らしいです。現状英語のみですが一読をお薦めします。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot; title=&quot;Welcome&quot;&gt;Jekyll Docs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;また、後者についてですが、Jekyllではビルドの度に全ての記事をコンパイルするので、このブログのようにコードを大量に含むブログのビルドには、そのシンタックスハイライト処理のために悲しいくらいの時間が掛かります。これがPygments.rbの採用により大幅に改善されました。つまりこのサイトでは９分（！）が１分になりました&lt;sup id=&#39;fnref:1&#39;&gt;&lt;a href=&#39;#fn:1&#39; rel=&#39;footnote&#39;&gt;1&lt;/a&gt;&lt;/sup&gt;。詳細は以下の記事が参考になります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://tech.nitoyon.com/ja/blog/2012/12/25/jekyll-0-12-0/&quot; title=&quot;Jekyll の 0.12.0 でシンタックス ハイライトが便利になった - てっく煮ブログ&quot;&gt;Jekyll の 0.12.0 でシンタックス ハイライトが便利になった - てっく煮ブログ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Jekyllをいつやるか&lt;/h2&gt;

&lt;p&gt;Version 1.0によりJekyllの完成度は格段に高まりました。&lt;code&gt;jekyll new&lt;/code&gt;で簡単にブログのひな形ができちゃうし、移行ツールも充実してるし、Githubの無料ホスティング&lt;a href=&quot;http://pages.github.com/&quot; title=&quot;GitHub Pages&quot;&gt;GitHub Pages&lt;/a&gt;もあるし、プログラマが自分に適した快適なブログ環境を構築するのに、もはや何の障壁もありません。&lt;/p&gt;

&lt;p&gt;では、Jekyllをいつやるのか？&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;今やる&lt;/li&gt;
&lt;li&gt;そのうちやる（ジキやル）&lt;/li&gt;
&lt;li&gt;やる予定なし&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;環境が整ったって言ったって、ドキュメントは英語だし、簡単なチュートリアルくらい無いとそう簡単にはねぇ...。&lt;/p&gt;

&lt;p&gt;日本語の電子書籍でもあればやるキッカケにもなるんだけどねぇ...。&lt;/p&gt;

&lt;p&gt;ちなみに、Rubyの公式サイトも今やJekyllを使って構築されているんですね...。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruby-lang.org/ja/&quot; title=&quot;オブジェクト指向スクリプト言語 Ruby&quot;&gt;オブジェクト指向スクリプト言語 Ruby&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;このサイトはRubyとJekyllによって構築されています。 また、コンテンツはRubyコミュニティによって管理されています。 このサイトに関する質問やコメントはGitHubへのissueまたはpull request、もしくはwebmaster までお願いします。 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;そんなわけで...&lt;/p&gt;

&lt;p&gt;^ ^;&lt;/p&gt;

&lt;br /&gt;


&lt;hr /&gt;

&lt;h2&gt;30分のチュートリアルでJekyllを理解する&lt;/h2&gt;

&lt;p&gt;１年前に自分はこのブログでJekyllのチュートリアルの記事を書きました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/05/13/first-step-of-jekyll/&quot; title=&quot;30分のチュートリアルでJekyllを理解する&quot;&gt;30分のチュートリアルでJekyllを理解する&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;この度、これを加筆・訂正しJekyllの最新バージョン（Version 1.0.2）に対応させましたので、ここに公開致します。&lt;/p&gt;

&lt;p&gt;前記事からの追加変更点は次のとおりです。&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;Jekyll Version 1.0.2に対応するよう記述を修正。&lt;/li&gt;
&lt;li&gt;Jekyllの特徴について追記。&lt;/li&gt;
&lt;li&gt;Jekyll newコマンドについて追記。&lt;/li&gt;
&lt;li&gt;Excerpt（記事引用機能）について追記。&lt;/li&gt;
&lt;li&gt;categoriesについて追記。&lt;/li&gt;
&lt;li&gt;gistタグについて追記。&lt;/li&gt;
&lt;li&gt;下書き（Drafts）機能について追記。&lt;/li&gt;
&lt;li&gt;ページネーション、他のブログからの移管について追記。&lt;/li&gt;
&lt;li&gt;その他細部の修正。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;加えて前回同様、本記事を電子書籍化しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jekyll_cover.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;（目次）
１章　Jekyllとは
２章　Jekyllを知る
３章　記事の作成
４章　デフォルト設定の変更
５章　CSSによるスタイル設定
６章　グローバル変数「site」
７章　Liquid制御構文
８章　グローバル変数「page」
９章　Liquidによるシンタックスハイライト
１０章　プラグイン
１１章　その他の機能
１２章　まとめ
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;電子書籍は、いつものようにGumroadを通して販売し、EPUB形式に加えkindleで扱えるMOBI形式を同梱しています。価格は105円です&lt;sup id=&#39;fnref:2&#39;&gt;&lt;a href=&#39;#fn:2&#39; rel=&#39;footnote&#39;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;興味のある方、無くても暇な方、投げ銭したい方、購入ご検討いただければ大変にうれしく思いますm(__)m&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2&gt;１章　Jekyllとは&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot; title=&quot;jekyll&quot;&gt;Jekyll&lt;/a&gt;は、ブログのような静的サイトを構築するためのRuby製ファイルジェネレータです。Jekyllの特徴としては、以下の様な点が挙げられます。&lt;/p&gt;

&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;HTML簡略記法としてMarkdownまたはTextile記法が使える。&lt;/li&gt;
&lt;li&gt;テンプレート言語Liquidを使って、シンタックスハイライト、gist、その他のタグの埋め込みによる拡張が簡単にできる。&lt;/li&gt;
&lt;li&gt;Githubが提供するホスティングサービス「GitHub Pages」のエンジンとして利用されているので、Jekyllで構築されたサイトを無料で簡単に公開できると共に、gitによりそのソースおよび記事データの一元管理ができる。&lt;/li&gt;
&lt;li&gt;Jekyllは静的サイトを構築するため軽いサイトが構築しやすい。&lt;/li&gt;
&lt;li&gt;HTML整形後の文章をローカル環境で確認することができる。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;一方で、&lt;code&gt;Jekyll&lt;/code&gt;はあくまでファイルジェネレータであり、&lt;a href=&quot;http://rubyonrails.org/&quot; title=&quot;Ruby on Rails&quot;&gt;Rails&lt;/a&gt;のように、コマンド一つでサイトの基礎を全部構築してくれるフレームワークではありません。むしろ&lt;a href=&quot;http://www.sinatrarb.com/&quot; title=&quot;Sinatra&quot;&gt;Sinatra&lt;/a&gt;の思想に近く、静的サイト版Sinatraといった趣のツールです。従って、Jekyllを使ってブログサイトを構築しようとする場合、その規約に従って、自分で１つずつファイルを用意していく必要があります。&lt;/p&gt;

&lt;p&gt;しかしながら、Sinatraに&lt;a href=&quot;http://jp.padrinorb.com/&quot; title=&quot;Padrino で素敵なウェブ開発を - Padrino Ruby Web Framework&quot;&gt;Padrino&lt;/a&gt;があるように、Jekyllにもそれをフレームワーク化するツールがあります。&lt;a href=&quot;http://octopress.org/&quot; title=&quot;Octopress&quot;&gt;Octopress&lt;/a&gt;と&lt;a href=&quot;http://jekyllbootstrap.com/&quot; title=&quot;Jekyll-Bootstrap&quot;&gt;Jekyll-Bootstrap&lt;/a&gt;です。&lt;/p&gt;

&lt;h3&gt;Octopress&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://pages.github.com/&quot; title=&quot;GitHub Pages&quot;&gt;GitHub Pages&lt;/a&gt;その他のホスティングにおいて、最小の労力でブログサイトを構築したいなら、&lt;code&gt;Octopress&lt;/code&gt;を選ぶべきです。僅か数ステップで設定が完了し記事を書き始めることができるようになります。各種のPluginも簡単に利用できます。Octopressでブログを構築するのなら、次のサイトが参考になります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://mattn.kaoriya.net/software/lang/ruby/20111017205717.htm&quot; title=&quot;githubとjekyllとoctopressで作る簡単でモダンなブログ&quot;&gt;Big Sky :: githubとjekyllとoctopressで作る簡単でモダンなブログ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/&quot; title=&quot;Octopressのインストールから運用管理まで&quot;&gt;Octopressのインストールから運用管理まで - T.I.D.&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Jekyll-Bootstrap&lt;/h3&gt;

&lt;p&gt;Octopressは簡単な一方で、少しお仕着せのところがあり自由度が少なく感じます。自分の好みにあわせてデザインを変更したり、他の人の作ったデザインを適用したりしたい人は、&lt;code&gt;Jekyll-Bootstrap&lt;/code&gt;をより気に入ると思います。Octopressよりもデザインテーマのモジュール化が進んでいて、簡単にその切り替えができるように作られています。現状ではまだテーマが少ないですが（http://themes.jekyllbootstrap.com/を参照のこと）、他の人のテーマを参考に、そのいいとこ取りをして自分のテーマを用意することもできます。本家サイトの解説が非常に充実していますので、その使い方は概ねこれで足ります。日本語の解説は次のサイトが参考になります。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://krakenbeal.blogspot.jp/2012/05/ruby-jekyll-jekyll-bootstrap.html&quot; title=&quot;ruby と jekyll と jekyll-bootstrap で静的サイトを作る - KRAKENBEAL RECORDS&quot;&gt;ruby と jekyll と jekyll-bootstrap で静的サイトを作る - KRAKENBEAL RECORDS&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;jekyll newコマンド&lt;/h3&gt;

&lt;p&gt;Jekyll version 1.0より&lt;code&gt;new&lt;/code&gt;というサブコマンドが導入されました。これはコマンド一つでブログサイトのひな形を構築するいわゆるscaffoldingを実現します。生成されるひな形にはコメントシステムやソーシャルサービスとの連携機能などはないものの、ブログの基本的要素は既に揃っています。ブログを運用しつつ全体を理解しながら少しづつ独自の改良を加えていく、といった場合には上記フレームワークに頼らないこの方法が最適でしょう。&lt;code&gt;new&lt;/code&gt;の使い方については第１１章で触れます。&lt;/p&gt;

&lt;h2&gt;２章　Jekyllを知る&lt;/h2&gt;

&lt;p&gt;これらのフレームワークは大変便利でJekyllに対する理解がそこそこでも、ブログの運営上大きな支障はありません。しかし、その一方でそのレールから少し外れたことをしようとすると、途端に立ちいかなくなるという問題があります。よくある話です。&lt;/p&gt;

&lt;p&gt;本書の目的は、チュートリアルを通してJekyllの概要を理解することです。Jekyllに対する理解が深まれば、上記フレームワークを使った場合でもその運用が楽になるはずです。&lt;/p&gt;

&lt;p&gt;チュートリアルでは上記フレームワークを使わずに、Jekyllだけでブログの基礎となるファイル群を１つずつ構築していきます。ここではUnix系OSの使用を前提にしていますので、他OSの場合は適宜読み替えて下さい。Jekyllの対応バージョンは1.0.2です。&lt;/p&gt;

&lt;h3&gt;トップページ&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;gem install jekyll&lt;/code&gt;でJekyllを入手したら、ブログを作るディレクトリを用意します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% mkdir jk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;jkディレクトリに移動してトップページを作ります（jkはJekyllの略です）。JekyllではMarkdownが使えるので、index.mdを作ります。Markdownの文法については以下を参考にしてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.2310.net/archives/6&quot; title=&quot;blog::2310 » Markdown文法の全訳&quot;&gt;blog::2310 » Markdown文法の全訳&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text&quot;&gt;% cd jk
% echo #Welcome to my JK Home Page! &amp;gt; index.md 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;そして&lt;code&gt;jekyll build&lt;/code&gt;コマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll build
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;（version1.0でサブコマンドが導入されました。）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tree&lt;/code&gt;します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% tree
.
├── _site
│   └── index.md
└── index.md

1 directory, 2 files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;_site&lt;/code&gt;というディレクトリ以下にindex.mdがそのままコピーされてしまいました。つまりhtmlに変換されていません。ルートのindex.mdを直しましょう。先頭に&lt;code&gt;---&lt;/code&gt;を２本入れます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
---
#Welcome to my JK Home Page!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もう一度&lt;code&gt;jekyll build&lt;/code&gt;して&lt;code&gt;tree&lt;/code&gt;します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll build
% tree
.
├── _site
│   └── index.html
└── index.md

1 directory, 2 files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;今度はうまくいきました。Jekyllではこの先頭の&lt;code&gt;---&lt;/code&gt;で挟まれた領域を&lt;code&gt;YAML Front-Matter&lt;/code&gt;(YAML前付け)といいます。ここにそのドキュメントの書誌事項を書きます。JekyllはYAML Front-Matter付きのドキュメントをその変換の対象とし、それ以外のドキュメントはそのまま_siteディレクトリ以下にコピーするのです。&lt;/p&gt;

&lt;p&gt;では結果をブラウザで確認します。次のようにします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll serve

Configuration file: none
            Source: /Users/keyes/Google Drive/playground/jk
       Destination: /Users/keyes/Google Drive/playground/jk/_site
      Generating... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2013-05-16 21:48:12&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  WEBrick 1.3.1
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2013-05-16 21:48:12&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  ruby 2.0.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2013-02-24&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;x86_64-darwin12.2.0&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2013-05-16 21:48:12&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  WEBrick::HTTPServer#start: &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11794 &lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;（version1.0で従来の&lt;code&gt;jekyll --server&lt;/code&gt;からserveまたはserverサブコマンドを利用するようになりました。）&lt;/p&gt;

&lt;p&gt;4000番ポートでWEBrickが立ち上がりました。http://localhost:4000を開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk01.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;




&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;うまくいきました。&lt;/p&gt;

&lt;h3&gt;レイアウト&lt;/h3&gt;

&lt;p&gt;さて、ブラウザでview sourceなどして、ちょっとこのソースを確認してみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;welcome_to_my_jk_home_page&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Welcome to my JK Home Page!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;当然ながらHTMLによる構造化レイアウトができていません。早速用意します。&lt;/p&gt;

&lt;p&gt;まずはルートに&lt;code&gt;_layouts&lt;/code&gt;ディレクトリを作ります。layoutファイルをdefault.htmlとしてここに配置します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% mkdir _layouts
% touch _layouts/default.html
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;default.htmlをエディタで開いて、次のような内容にします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with layout template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;html内の&lt;code&gt;{{  }}&lt;/code&gt;はLiquidテンプレートによる埋め込み指定です。Jekyllでは&lt;a href=&quot;https://github.com/Shopify/liquid&quot; title=&quot;Shopify/liquid&quot;&gt;Liquid&lt;/a&gt;というテンプレートエンジンが使えます。titleでは&lt;code&gt;page.title&lt;/code&gt;により対象ページのタイトルを、bodyでは&lt;code&gt;content&lt;/code&gt;により対象ページのコンテンツを埋め込むように指定しています。ここではこのlayoutが読み込まれたことを分かるようにするために、&lt;strong&gt;rendered with layout template&lt;/strong&gt;という文字を入れました。&lt;/p&gt;

&lt;p&gt;再度サーバーを起動して変化を見ます。ここでは&lt;code&gt;--watch&lt;/code&gt;オプションを付けて起動してみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll serve --watch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;（version1.0では従来の&lt;code&gt;jekyll --auto&lt;/code&gt;からserveサブコマンドに--watchオプションを渡すようになりました。）&lt;/p&gt;

&lt;p&gt;ブラウザで確認します。
&lt;img src=&quot;/assets/images/2013/05/jk/jk01.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;残念ながら変化がありません。&lt;/p&gt;

&lt;p&gt;これはindex.mdでどのテンプレートを使うかをちゃんと指定していないからです。ここでYAML Front-Matterの出番です。&lt;code&gt;index.md&lt;/code&gt;を次のように直します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでは同時にタイトルもセットしました。サーバーはそのままにブラウザをリロードします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk02.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;今度はうまくいきました。&lt;code&gt;--watch&lt;/code&gt;オブション指定により、変更が直ちに反映されました。ソースも見てみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Oh! My JK&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;welcome_to_my_jk_home_page&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Welcome to my JK Home Page!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with layout template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;いいですね。&lt;/p&gt;

&lt;h2&gt;３章　記事の作成&lt;/h2&gt;

&lt;p&gt;さてトップページができたので、記事を書きます。Jekyllでは記事のことを&lt;strong&gt;Post&lt;/strong&gt;と呼びます。ルートに&lt;code&gt;_posts&lt;/code&gt;ディレクトリを作成し、次のようなファイル名で記事ファイルを作ります。サーバーはそのままに別のターミナルを立ち上げて、以下を実行します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% mkdir _posts
% touch _posts/2013-05-16-Jekyll-Tutorial.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;エディタで次のようにMarkdownで記事を書きます。Front-Matterを忘れずに。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
---
##Jekyll Tutorial
Jekyll is a simple, blog aware, static site generator.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;jekyll build&lt;/code&gt;コマンドを実行してから&lt;code&gt;tree&lt;/code&gt;します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll build
% tree
.
├── _layouts
│   └── default.html
├── _posts
│   └── 2013-05-16-Jekyll-Tutorial.md
├── _site
│   ├── 2013
│   │   └── 05
│   │       └── 16
│   │           └── Jekyll-Tutorial.html
│   └── index.html
└── index.md

6 directories, 5 files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;_site&lt;/code&gt;ディレクトリ以下に&lt;code&gt;/2013/05/16/Jekyll-Tutorial.html&lt;/code&gt;というファイルが生成されたのが分かります。つまり_post以下に生成したファイルのファイル名のうち、その日付部分はファイルパスとして展開されるのです。ブラウザで&lt;code&gt;http://localhost:4000/2013/05/16/Jekyll-Tutorial.html&lt;/code&gt;を開いてみましょう。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk03.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;うまくいってるようです。&lt;/p&gt;

&lt;h3&gt;Postのレイアウト&lt;/h3&gt;

&lt;p&gt;次に記事にも専用のレイアウトを用意します。_layoutsディレクトリ以下に&lt;code&gt;post.html&lt;/code&gt;を作って、次のような内容にします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% touch _layouts/post.html
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;---
layout: default
---
&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;{{ page.date | date_to_string }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;main&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {{ content }}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with post template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Front-Matterでdefault.htmlを読み込むようにします。これによりpost.htmlはdefault.htmlのサブテンプレートになります。header部分に投稿日とタイトルを表示するようLiquidで指定します。&lt;/p&gt;

&lt;p&gt;なお、&lt;code&gt;{{ page.date | date_to_string }}&lt;/code&gt;はJekyllで拡張されたLiquidのフィルターという機能を使って、出力の整形を行なっています(&lt;a href=&quot;http://jekyllrb.com/docs/templates/&quot; title=&quot;Templates&quot;&gt;Templates&lt;/a&gt;)。default.htmlと同様に、このテンプレートが読み込まれたことを見るために&lt;strong&gt;rendered with post template&lt;/strong&gt;を追加しておきます。&lt;/p&gt;

&lt;p&gt;そして記事側(/2013-05-16-Jekyll-Tutorial.md)でこのテンプレートを読めるように、そのFront-Matterを記述します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
---
Jekyll is a simple, blog aware, static site generator.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;タイトルはテンプレート側で用意するようにしたので、ここでは消します。&lt;/p&gt;

&lt;p&gt;サーバーを再起動して変化を見ます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll serve --watch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk04.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;ソースも見ます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Jekyll Tutorial&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;16 May 2013&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Jekyll Tutorial&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;main&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Jekyll is a simple, blog aware, static site generator.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with post template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with layout template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;うまくテンプレートが読み込まれました。&lt;/p&gt;

&lt;h2&gt;４章　デフォルト設定の変更&lt;/h2&gt;

&lt;p&gt;前のソースにおいてはファイル名から&lt;strong&gt;Jekyll Tutorial&lt;/strong&gt;というタイトルが自動的にセットされていることが分かります。Front-Matterを使って、タイトルとついでに投稿日も変えてみましょう。&lt;code&gt;_posts/2013-05-16-Jekyll-Tutorial.md&lt;/code&gt;を修正します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Jekyllのチュートリアル
date: 2013-05-17
---
Jekyll is a simple, blog aware, static site generator.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;日付を変えたので&lt;strong&gt;http://localhost:4000/2013/05/17/Jekyll-Tutorial.html&lt;/strong&gt;にアクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk05.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;投稿日とタイトルが変わりました。つまりYAML Front-Matterの記述によってデフォルトの設定が上書きされました。この場合、元のMarkdownファイルのファイル名における日付と、パスの日付が一致しなくなる点注意が必要です。&lt;/p&gt;

&lt;h3&gt;_config.ymlによる設定&lt;/h3&gt;

&lt;p&gt;個別ページの設定はそのFront-Matterで行うということが分かりました。では全体的な設定はどこでするのでしょうか。それはルートに_config.ymlというファイルを用意して、そこで行います。試しに記事のパス形式を変えてみます。ここではサーバーの再起動が必要です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% echo permalink: /:categories/:year-:month-:day/:title &amp;gt; _config.yml
% jekyll build
% tree
.
├── _config.yml
├── _layouts
│   ├── default.html
│   └── post.html
├── _posts
│   └── 2013-05-16-Jekyll-Tutorial.md
├── _site
│   ├── 2013-05-17
│   │   └── Jekyll-Tutorial
│   │       └── index.html
│   └── index.html
└── index.md

5 directories, 7 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;_site&lt;/code&gt;ディレクトリを見てわかるように、記事のパスが変わりました。&lt;/p&gt;

&lt;p&gt;更に、記事にカテゴリーを付けてみます。ここでは&lt;code&gt;_posts/2013-05-16-Jekyll-Tutorial.md&lt;/code&gt;を&lt;strong&gt;blog&lt;/strong&gt;,&lt;strong&gt;technology&lt;/strong&gt;カテゴリーに属するよう設定します。記事ファイルを開いてそのFront-matterにcategories設定を追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Jekyllのチュートリアル
date: 2013-05-17
categories: blog technology     &amp;lt;-- ここを追加
---
Jekyll is a simple, blog aware, static site generator.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再度ビルドします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% jekyll build
% tree
.
├── _config.yml
├── _layouts
│   ├── default.html
│   └── post.html
├── _posts
│   └── 2013-05-16-Jekyll-Tutorial.md
├── _site
│   ├── blog
│   │   └── technology
│   │       └── 2013-05-17
│   │           └── Jekyll-Tutorial
│   │               └── index.html
│   └── index.html
└── index.md

5 directories, 7 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;_siteディレクトリを見ると、記事が/blog/technology/パス以下に配置されているのが確認できます。先に進む前にcategories設定は削除しておいて下さい。&lt;/p&gt;

&lt;h2&gt;５章　CSSによるスタイル設定&lt;/h2&gt;

&lt;p&gt;さて、そろそろCSSによるスタイル設定をします。説明の最初でYAML Front-Matterを含まないファイルはそのまま_siteディレクトリにコピーされると説明しましたが、CSSファイルはそのようにして配置されるファイルの一つです。ここではassets/cssというディレクトリをルートに作って、単純なCSS定義をした&lt;code&gt;style.css&lt;/code&gt;というファイルを用意します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% mkdir -p assets/css
% touch assets/css/style.css
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#dee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#11d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#161&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#a33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;footer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#a33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;code&gt;_layouts/default.html&lt;/code&gt;でstyle.cssを読み込むようにします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/css/style.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; //ここを追加
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with layout template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;ブラウザで見てみます。まずはトップページ（http://localhost:4000/）にアクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk06.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;次に、記事のページ（http://localhost:4000/2013-05-17/Jekyll-Tutorial/）にもアクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk07.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;うまく適用されているようです。&lt;/p&gt;

&lt;h2&gt;６章　グローバル変数「site」&lt;/h2&gt;

&lt;p&gt;Jekyllでは生成されたサイトに対する情報は、グローバル変数siteを通してアクセスできます。siteがどんな情報を持っているか、ちょっと見てみます。&lt;code&gt;index.md&lt;/code&gt;に戻って、次の一行を追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!

{{ site }}  &amp;lt;!-- ここを追加 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブラウザで見てみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk08.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;&lt;code&gt;site&lt;/code&gt;で読みだし可能な設定情報が表示されました。情報はHash形式で記録されていますが、これら情報へのアクセスはメソッド呼び出しのようにドットチェーンで行えます。幾つか見てみます。index.mdを書き換えます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!

port: {{ site.port }}

markdown: {{ site.markdown }}

permalink: {{ site.permalink }}

{{ site }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk09.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;.(ドット)でアクセスできました。このうちpermalinkは_config.ymlでセットしたデータでした。_config.ymlに別の設定を追加して読み出せるか試してみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/:categories/:year-:month-:day/:title&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Charlie&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;charlie@gmail.com&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;rdiscount&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Markdownにrdiscountを使うように設定したので、&lt;code&gt;gem install rdiscount&lt;/code&gt;する必要があるかも知れません。&lt;/p&gt;

&lt;p&gt;index.mdにauthorに関する事項を追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!

port: {{ site.port }}

markdown: {{ site.markdown }}

permalink: {{ site.permalink }}

{{ site }}

**Copyright © {{ site.author.name }} 2013 All rights reserved. Please contact to {{ site.author.email }}.**
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サーバーを再起動してからアクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk10.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;Copyrightの注意書きでnameとemailのメソッドチェーンが出来ています。&lt;/p&gt;

&lt;h2&gt;７章　Liquid制御構文&lt;/h2&gt;

&lt;p&gt;変数&lt;strong&gt;site&lt;/strong&gt;からは&lt;code&gt;posts&lt;/code&gt;を介してPostに関する情報にもアクセスできます。Liquidテンプレートでは&lt;strong&gt;if&lt;/strong&gt;, &lt;strong&gt;case&lt;/strong&gt;, &lt;strong&gt;for&lt;/strong&gt;などの制御構文が使えるので、これを使って各Postの内容を読みだしてみます。&lt;/p&gt;

&lt;p&gt;その前に記事をもう一つ増やしておきます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% touch _posts/2013-05-18-Ruby-is-Great.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;エディタで記事を書きます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Rubyは最高
tags: [ruby, language]
---
##Rubyとは
Rubyは、手軽なオブジェクト指向プログラミングを実現するための種々の機能を持つオブジェクト指向スクリプト言語です。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そしてindex.mdを次のようにします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!

&amp;lt;!-- 以下を追加 --&amp;gt;
&amp;lt;ul&amp;gt;
{% for post in site.posts %}
  &amp;lt;li&amp;gt;
    &amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.date | date_to_long_string }} : {{ post.title }}&amp;lt;/a&amp;gt;
  &amp;lt;/li&amp;gt;
{% endfor %}
&amp;lt;/ul&amp;gt;
&amp;lt;!--  --&amp;gt;

port: {{ site.port }}

markdown: {{ site.markdown }}

permalink: {{ site.permalink }}

{{ site }}

**Copyright © {{ site.author.name }} 2013 All rights reserved. Please contact to {{ site.author.email }}.**
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;for post in site.posts&lt;/code&gt;でpostオブジェクトをイテレートして、&lt;strong&gt;url&lt;/strong&gt;, &lt;strong&gt;date&lt;/strong&gt;, &lt;strong&gt;title&lt;/strong&gt;の各要素を読み出し、リンクを生成します。&lt;/p&gt;

&lt;p&gt;ブラウザで見てみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk13.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;クリックしてみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk14.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;いいですね。&lt;/p&gt;

&lt;h3&gt;記事の引用&lt;/h3&gt;

&lt;p&gt;一歩進んで、version1.0で導入された&lt;code&gt;excerpt&lt;/code&gt;という機能を使って、記事の引用を見出しとともに表示させてみましょう。&lt;/p&gt;

&lt;p&gt;index.mdを修正します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!

&amp;lt;ul&amp;gt;
{% for post in site.posts %}
  &amp;lt;li&amp;gt;
    &amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.date | date_to_long_string }} : {{ post.title }}&amp;lt;/a&amp;gt;
    &amp;lt;p&amp;gt;{{ post.excerpt }}&amp;lt;/p&amp;gt;  &amp;lt;!-- ここを追加 --&amp;gt;
  &amp;lt;/li&amp;gt;
{% endfor %}
&amp;lt;/ul&amp;gt;

port: {{ site.port }}

markdown: {{ site.markdown }}

permalink: {{ site.permalink }}

{{ site }}

**Copyright © {{ site.author.name }} 2013 All rights reserved. Please contact to {{ site.author.email }}.**
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブラウザで見てみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk17.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;自動で記事の最初の行が引用として読み出されました。&lt;/p&gt;

&lt;p&gt;Rubyの記事がタイトルが含まれた見づらいものになってしまったので、手動で設定してみます。記事のFront-matterに&lt;code&gt;excerpt&lt;/code&gt;属性をセットします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Rubyは最高
tags: [ruby, language]
excerpt: A dynamic, open source programming language with a focus on simplicity and productivity.
---
##Rubyとは
Rubyは、手軽なオブジェクト指向プログラミングを実現するための種々の機能を持つオブジェクト指向スクリプト言語です。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk19.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;手動設定した引用が表示されました。&lt;/p&gt;

&lt;h2&gt;８章　グローバル変数「page」&lt;/h2&gt;

&lt;p&gt;変数siteはサイト全体の情報を持ったオブジェクトでした。一方で、個々のページの情報はグローバル変数pageが持っています。同様に&lt;code&gt;index.md&lt;/code&gt;で読みだしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: default
title: Oh! My JK
---
#Welcome to my JK Home Page!

port: {{ site.port }}

markdown: {{ site.markdown }}

permalink: {{ site.permalink }}

&amp;lt;!-- {{ site }} --&amp;gt;

**Copyright © {{ site.author.name }} 2013 All rights reserved. Please contact to {{ site.author.email }}.**

{{ page }} &amp;lt;!-- ここを追加 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk11.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;トップページにアクセスすると変数&lt;code&gt;page&lt;/code&gt;は、&lt;strong&gt;layout&lt;/strong&gt;, &lt;strong&gt;url&lt;/strong&gt;, &lt;strong&gt;content&lt;/strong&gt;, &lt;strong&gt;path&lt;/strong&gt;の各要素を持っていることが分かります。&lt;/p&gt;

&lt;p&gt;同じことを記事のページ(Post)でもしてみます。&lt;code&gt;_posts/2013-05-18-Ruby-is-Great.md&lt;/code&gt;に追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Rubyは最高
tags: [ruby, language]
---
##Rubyとは
Rubyは、手軽なオブジェクト指向プログラミングを実現するための種々の機能を持つオブジェクト指向スクリプト言語です。

{{ page }} &amp;lt;!-- ここを追加 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アクセスします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk12.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;Postでは、&lt;strong&gt;layout&lt;/strong&gt;, &lt;strong&gt;title&lt;/strong&gt;, &lt;strong&gt;tags&lt;/strong&gt;, &lt;strong&gt;url&lt;/strong&gt;, &lt;strong&gt;date&lt;/strong&gt;, &lt;strong&gt;id&lt;/strong&gt;, &lt;strong&gt;categories&lt;/strong&gt;, &lt;strong&gt;next&lt;/strong&gt;, &lt;strong&gt;previous&lt;/strong&gt;, &lt;strong&gt;content&lt;/strong&gt;, &lt;strong&gt;path&lt;/strong&gt;の各情報にアクセスできることが分かります。&lt;/p&gt;

&lt;h2&gt;９章　Liquidによるシンタックスハイライト&lt;/h2&gt;

&lt;p&gt;さて、次にRubyの記事にプログラムコードを書いてみます。JekyllではLiquidタグを利用することによって、&lt;a href=&quot;http://pygments.org/&quot; title=&quot;Pygments — Python syntax highlighter&quot;&gt;Pygments&lt;/a&gt;によるシンタックスハイライト（Syntax Highlighting）が可能です（version1.0でPygmentsは組み込みとなり別途インストールが不要となったようです）。&lt;/p&gt;

&lt;p&gt;次のコマンドを実行して&lt;code&gt;syntax.css&lt;/code&gt;を生成します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% pygmentize -S default -f html &amp;gt; assets/css/syntax.css
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;pygmentizeが利用できない場合は以下のサイトなどから取得出来ます（後述するjekyll newでもsyntax.cssが得られます）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mojombo/tpw/blob/master/css/syntax.css&quot; title=&quot;tpw/css/syntax.css at master · mojombo/tpw · GitHub&quot;&gt;tpw/css/syntax.css at master · mojombo/tpw · GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_layouts/default.htmlでこれを読み込めるようにします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/css/style.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/css/syntax.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; //ここを追加
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with layout template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;準備ができました（version1.0ではpygmentsの_config.ymlへの設定は不要になったようです）。&lt;code&gt;_posts/2013-05-18-Ruby-is-Great.md&lt;/code&gt;にRubyのコードを書きます。コードは{% highlight ruby %}と{% endhighlight %}というタグで囲みます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Rubyは最高
tags: [ruby, language]
---
##Rubyとは
Rubyは、手軽なオブジェクト指向プログラミングを実現するための種々の機能を持つオブジェクト指向スクリプト言語です。

##Try Ruby
{% highlight ruby linenos %}
class Person
  def initialize(name)
    @name = name
  end

  def hello
    &quot;Hello, friend!\nMy name is #{@name}!&quot;
  end
end

charlie = Person.new(&#39;Charlie&#39;)
puts charlie.hello

# &amp;gt;&amp;gt; Hello, friend!
# &amp;gt;&amp;gt; My name is Charlie!
{% endhighlight %}


{{ page }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サーバーを再起動してブラウザで確認します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk15.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;h3&gt;gistタグ&lt;/h3&gt;

&lt;p&gt;gistタグを使って、シンタックスハイライトされた「&lt;a href=&quot;https://gist.github.com/&quot; title=&quot;Gists&quot;&gt;Gists（コードスニペットサービス）&lt;/a&gt;」のコードを貼り付けることも可能です（version1.0でgist pluginが組み込みになりました）。&lt;/p&gt;

&lt;p&gt;Rubyの記事でgistタグを使ってみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Rubyは最高
tags: [ruby, language]
---
##Rubyとは
Rubyは、手軽なオブジェクト指向プログラミングを実現するための種々の機能を持つオブジェクト指向スクリプト言語です。

{% gist 5598133 creature.rb %}  &amp;lt;-- ここを追加

##Try Ruby
{% highlight ruby linenos %}
class Person
  def initialize(name)
    @name = name
  end

  def hello
    &quot;Hello, friend!\nMy name is #{@name}!&quot;
  end
end

charlie = Person.new(&#39;Charlie&#39;)
puts charlie.hello

# &amp;gt;&amp;gt; Hello, friend!
# &amp;gt;&amp;gt; My name is Charlie!
{% endhighlight %}


{{ page }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;結果を見てみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk20.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;Gistsにアップロードしておいたコードが貼り付けられました。&lt;/p&gt;

&lt;h2&gt;１０章　プラグイン&lt;/h2&gt;

&lt;p&gt;Jekyllはプラグインによりその変換機能を拡張できます&lt;sup id=&#39;fnref:3&#39;&gt;&lt;a href=&#39;#fn:3&#39; rel=&#39;footnote&#39;&gt;3&lt;/a&gt;&lt;/sup&gt;。プラグインには&lt;strong&gt;Generator&lt;/strong&gt;, &lt;strong&gt;Converter&lt;/strong&gt;, &lt;strong&gt;Tag&lt;/strong&gt;という３種類があります。詳細については次を参照してください。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/plugins/&quot; title=&quot;Plugins&quot;&gt;Plugins（英語）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2012/05/09/translation-of-jekyll-plugins/&quot; title=&quot;Jekyll Wiki Pluginsの説明ページを勝手に翻訳しました&quot;&gt;Jekyll Wiki Pluginsの説明ページを勝手に翻訳しました（version0.11における日本語訳）&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;シンタックスハイライトに係るプラグインについて前章で説明しましたが、ここでは&lt;script type=&quot;math/tex&quot;&gt;\TeX&lt;/script&gt;による数式を貼り付ける&lt;a href=&quot;https://gist.github.com/834610&quot; title=&quot;MathJax&quot;&gt;MathJax.rb&lt;/a&gt;というTagプラグインを使ってみます（version1.0ではMarukuがサポートするLaTeXをpngにレンダリングする方法を使うこともできるようです。&lt;a href=&quot;http://jekyllrb.com/docs/extras/&quot; title=&quot;Extras&quot;&gt;Extras&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MathJax.rb&lt;/code&gt;はブラウザ上で&lt;script type=&quot;math/tex&quot;&gt;\TeX&lt;/script&gt;を表示できるようにする&lt;a href=&quot;http://www.mathjax.org/&quot; title=&quot;www.mathjax.org&quot;&gt;MathJax.js&lt;/a&gt;に対応したプラグインです。&lt;/p&gt;

&lt;p&gt;ルートに&lt;code&gt;_plugins/&lt;/code&gt;ディレクトリを生成し、リンク先から&lt;code&gt;MathJax.rb&lt;/code&gt;をダウンロードして配置します。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://gist.github.com/834610&quot;&gt;MathJax.rb&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% mkdir _plugins
% mv ~/Downloads/MathJax.rb _plugins/mathjax.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;_layouts/default.htmlで&lt;code&gt;MAthJax.js&lt;/code&gt;を読み込めるようにします。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/css/style.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/css/syntax.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ここを追加 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;- rendered with layout template -&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;準備ができたので、&lt;code&gt;_posts/2013-05-16-Jekyll-Tutorial.md&lt;/code&gt;に数式を追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% math %}
Formular\ from Wikipedia\\

\int_0^3 9x^2 + 2x + 4\, dx = 3x^3 + x^2 + 4x + C \Big\rbrack_0^3 = 102\\

e^{x+iy} = e^x(\cos y + i\sin y)\\

x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
{% endmath %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;サーバーを再起動してブラウザで確認します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk16.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;きれいな数式が表示されました。&lt;/p&gt;

&lt;h2&gt;１１章　その他の機能&lt;/h2&gt;

&lt;p&gt;バージョン1.0で新たに追加された機能のいくつかについて簡単に書いておきます。&lt;/p&gt;

&lt;h2&gt;ブログのひな形&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;jekyll new&lt;/code&gt;サブコマンドにより、簡単にブログのひな形が作れるようになりました。&lt;/p&gt;

&lt;p&gt;ブログを構築する別のフォルダに移動して試してみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll new myblog
New jekyll site installed in /myblog.
% &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;myblog
% tree
.
├── _config.yml
├── _layouts
│   ├── default.html
│   └── post.html
├── _posts
│   └── 2013-05-17-welcome-to-jekyll.markdown
├── css
│   ├── main.css
│   └── syntax.css
└── index.html

3 directories, 7 files
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;サーバーを起動してアクセスしてみます。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll serve
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;トップページです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk22.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;１件記事が既に書かれているので開いてみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk23.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;シンプルですがこのまま使えるくらいのひな形が出力されました。&lt;/p&gt;

&lt;h2&gt;下書き&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;_drafts&lt;/strong&gt;フォルダ内に配置したファイルはjekyll buildによるコンパイル対象にはなりませんが、jekyll serveに&lt;code&gt;--dratfs&lt;/code&gt;オプションを付けることでプレビューできるようになります。&lt;/p&gt;

&lt;p&gt;チュートリアルのフォルダに戻って試してみます。&lt;/p&gt;

&lt;p&gt;_draftsフォルダを作り、下書きファイルをタイトルのみのファイル名で用意します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% mkdir _drafts
% touch _drafts/ruby_trivias.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;ファイルを開き下書きをします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Rubyのトリビア
---
Rubyのトリビアを紹介します。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jekyll serveコマンドに--draftsオプションを付けてサーバーを起動します。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;% jekyll serve --drafts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;本日が2013/5/17だとして、&lt;code&gt;http://localhost:4000/2013-05-17/ruby_trivias/&lt;/code&gt;にアクセスしてみます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jk21.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;br clear=&#39;all&#39; /&gt;


&lt;p&gt;投稿日未定の記事を書くときなど便利に使えそうです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/upgrading/&quot; title=&quot;Upgrading&quot;&gt;draftについてのドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;ページネーション&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;で&lt;code&gt;paginate&lt;/code&gt;属性をセットすることで、グローバル変数「&lt;strong&gt;paginator&lt;/strong&gt;」が有効になりページネーションが利用できるようになります。トップページで記事のリストを複数頁に分けるなどの目的で活用できるでしょう。ただ現状、paginatorへのアクセスはhtmlファイル内限定、ナビゲーションのためのコードが冗長などの制約があります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/pagination/&quot; title=&quot;Pagination&quot;&gt;Paginationについてのドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;他のブログからの移管&lt;/h2&gt;

&lt;p&gt;WordPressなどの他のブログシステムからJekyllへのデータの移管を支援する機能が提供されています。ブログシステム毎に異なるこの機能は&lt;code&gt;jekyll-import&lt;/code&gt;というgemにまとめられていて、旧データベースにアクセスしてJekyllのためのmarkdown形式の記事を生成します。詳細は以下を参照して下さい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/migrations/&quot; title=&quot;Blog migrations&quot;&gt;Blog migrationsについてのドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;１２章　まとめ&lt;/h2&gt;

&lt;p&gt;チュートリアルは以上です。&lt;/p&gt;

&lt;p&gt;最後にここに記述したJekyllの機能をまとめておきます。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;jekyll build&lt;/code&gt;コマンドは&lt;code&gt;_site&lt;/code&gt;ディレクトリ以下に変換ファイルを生成する。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;YAML Front-Matter付きのファイルはその設定に従い変換され、YAML Front-Matter無しのファイルはそのままコピーされる。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ページごとの設定はそのYAML Front-Matterで行い、サイト全体の設定は_config.ymlで行う。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;記事ファイルは&lt;code&gt;:year-:month-:day-:title&lt;/code&gt;のフォーマットで、_postsディレクトリ以下に配置する。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レイアウトファイルは_layoutディレクトリ以下に配置する。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;サイト情報にはグローバル変数&lt;code&gt;site&lt;/code&gt;でアクセスできる。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ページ情報にはグローバル変数&lt;code&gt;page&lt;/code&gt;でアクセスできる。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Liquidテンプレート&lt;code&gt;{{ }}&lt;/code&gt;または&lt;code&gt;{% %}&lt;/code&gt;を使ってサイトまたはページオブジェクトの埋め込みができる。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_plugins&lt;/code&gt;ディレクトリ以下にPlugin Scriptを配置することにより、機能拡張が可能である。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;jekyll new&lt;/code&gt;コマンドでブログのひな形が生成できる。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013/05/jk/jekyll_cover.png&quot; alt=&quot;Alt title&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gum.co/xfJY&quot; class=&quot;gumroad-button&quot;&gt;電子書籍「30分のチュートリアルでJekyllを理解する」EPUB/MOBI版&lt;/a&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://gumroad.com/js/gumroad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;このリンクはGumroadにおける商品購入リンクになっています。クリックすると、オーバーレイ・ウインドウが立ち上がって、この場でクレジットカード決済による購入が可能です。購入にはクレジット情報およびメールアドレスの入力が必要になります。購入すると、入力したメールアドレスにコンテンツのDLリンクが送られてきます。&lt;/p&gt;

&lt;hr /&gt;

&lt;p style=&#39;color:red&#39;&gt;=== Ruby関連電子書籍100円で好評発売中！ ===&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;/books/&quot; title=&quot;M&#39;ELBORNE BOOKS&quot;&gt;M&#39;ELBORNE BOOKS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/start_ruby.jpg&quot; alt=&quot;start_ruby&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2013/04/ruby_tutorial_cover.png&quot; alt=&quot;ruby_tutorial&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;/books/&quot;&gt;
  &lt;img src=&quot;/assets/images/2012/ruby_parallel_cover.png&quot; alt=&quot;ruby_parallel&quot; style=&quot;width:200px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
    &lt;ol&gt;
        &lt;li id=&#39;fn:1&#39;&gt;Github Page上でpluginを利用するためローカルでビルドしています。 &lt;a href=&#39;#fnref:1&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&#39;fn:2&#39;&gt;Gumroadでの最低販売価格が99¢であり、円安により100円での販売ができなくなってしまいました。 &lt;a href=&#39;#fnref:2&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&#39;fn:3&#39;&gt;Github Pageでpluginを利用するためにはちょっとした工夫が必要になります。 &lt;a href=&#39;#fnref:3&#39; rev=&#39;footnote&#39;&gt;↩&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
&lt;/div&gt;



</content>
 </entry>
 
 
</feed>

