---
layout: post
title: Rubyでcalをカラフルに
date: 2010-12-02
comments: true
categories:
---


世界はすっかりＧＵＩに支配されました
コンピュータといったらWindowシステムのことです
人々を魅了したのはその操作性だけではありません
人々はそのカラフルな世界に魅了されたのです

確かにCUIの世界には色はありません
辛うじて環境変数LSCOLORSをセットして
色の付いたファイル名を眺めるだけの
暗くて地味な
そしてそれを使う人を孤独にさせる世界です

しかしそんな世界に[Termtter](http://termtter.org/)が登場しました
TermtterはANSIカラーを引き連れて
CUIの世界に一条の光を差しました
まるでＧＢ末期に登場したポケモンの如くに！{% fn_ref 1 %}

それ以来　<del datetime="2010-12-02T22:19:40+09:00">僕の中</del>ちまたでは
ターミナルのカラー化が流行しています

[](/2010/11/07/notitle/) 

どこかで誰かが叫ぶ声が聞こえます
ターミナルにもっと色を！
ターミナルにもっと色を！

そんなわけで..

calを色付けして出力するCalourを作りました
多分Reinventing the Wheelでしょうけれども..

Ruby1.9にのみ対応しています
色付けにはTermColorライブラリを使っています

###使い方
添付ファイルをダウンロードして
そのなかの/bin/cal.rbを実行します
{% highlight ruby %}
% ruby cal.rb
{% endhighlight %}

引数無しで当月のカレンダーを表示します
今日の日付には反転した色が付きます

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215308.png)


月と年でその年月のものを
月のみで本年のその月を
年のみで年間カレンダーを表示します
{% highlight ruby %}
% ruby cal.rb 3 2011
% ruby cal.rb 2050 9
% ruby cal.rb 5
% ruby cal.rb 1600
{% endhighlight %}

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215257.png)

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215258.png)


cal.rbの中身は以下のようになっています
{% highlight ruby %}
#!/usr/bin/env ruby
#-*-encoding: utf-8-*-
require_relative "../lib/calour"
puts Calour.new.cal *ARGV.map(&:to_i)
{% endhighlight %}

Calourクラスのオブジェクトを生成して
唯一のパブリックメソッドcalを呼ぶことで
色付きカレンダーの文字列を出力します

###色の指定
オブジェクトの生成時に引数でカラーを指定できます
{% highlight ruby %}
Calour.new( title: [:magenta, :yellow],
            today: :cyan,
            saturday: :blue,
            sunday: :red )
{% endhighlight %}

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215259.png)


titleの２つの引数はそれぞれ
タイトルにおける月と年のカラーです
デフォルトのカラーは以下の通りです
{% highlight ruby %}
  :title =>  [:green,:yellow]
  :today =>  :green
  :saturday =>  :cyan
  :sunday =>  :magenta
  :holiday =>  :red
{% endhighlight %}

###祭日の色付け
holiday_optオプションを指定することで
祭日の色付けをすることができます
{% highlight ruby %}
Calour.new(holiday_opt: {country: :ja_ja})
{% endhighlight %}

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215301.png)


祭日データは[Google Calendar Data API](http://code.google.com/apis/calendar/)から取得しています

verboseオプションをtrueにすれば祭日名を同時に表示します
{% highlight ruby %}
Calour.new(holiday_opt {country: :ja_ja, verbose:true})
{% endhighlight %}

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215302.png)

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215303.png)


countryオプションは現在 ja_ja(日本語表記) ja(英語表記) us
au(australian) cn(china) fr(french) de(german) it(italian)
kr(south_korea) tw(taiwan) gb(uk) に対応しています
holiday_optはデフォルトではoffになっています
![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215304.png)


###irbやTermtterで使う
irbやTermtterで使う場合は以下の記事の中で紹介した
bosonライブラリを介すると便利です

[IRB　それはRubyistの魔法のランプ](/2010/11/16/IRB-Rubyist/) 

~/.boson/commandsディレクトリに
以下のようなRubyモジュールを作ります
{% highlight ruby %}
 vi .boson/commands/mysystem.rb
{% endhighlight %}

{% highlight ruby %}
autoload :Calour, 'calour'
module MySystem
  # colorized calendar
  def cal(*args)
    puts Calour.new(holiday_opt: {country: :ja_ja, verbose:true}).cal(*args.map(&:to_i))
    puts
  end
end
{% endhighlight %}

そうすればirb上でcalコマンドで使えます
![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215305.png)


shell上ではbosonコマンドを前置します
{% highlight ruby %}
% boson cal
{% endhighlight %}

Termtterで使う場合はこのaliasを作れば便利です
aliasの作成は~/.termtter/configで以下のようにします
{% highlight ruby %}
config.plugins.alias.aliases = {
    :cal => '! boson cal'
}
{% endhighlight %}

![image](http://img.f.hatena.ne.jp/images/fotolife/k/keyesberry/20101202/20101202215307.png)


###制限
Ruby1.9のみの対応です
内部でシステムのcalコマンドを呼んでいます
それが無いシステムでは動作しません
OSX Tigerでしか動作確認していません
他のシステムで動作するかわかりません
無責任無保証です

使ってくれる人がいたらうれしいです

[melborne's calour at master - GitHub](https://github.com/melborne/calour)
{% footnotes %}
   {% fn よく知りませんけど %}
{% endfootnotes %}
