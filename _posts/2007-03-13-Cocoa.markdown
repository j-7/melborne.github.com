---
layout: post
title: Cocoaでインクリメンタル・サーチしようよ
date: 2007-03-13
comments: true
categories:
---

##Cocoaでインクリメンタル・サーチしようよ
[](http://www.hcs.harvard.edu/~jrus/site/cocoa-text.html)経由で
CocoaアプリでIncremental Searchを可能とするツール[i-Search Plugin](http://leverage.sourceforge.net/wiki/index.php/Main_Page)を知った
TextMateは独自にIncremental Searchを実装していて
Ctrl + Sで起動できるのだけれど
日本語文章を作成するときには
[CotEditor](http://www.aynimac.com/p_blog/files/article.php?id=41)などを使わせてもらっているので
そこでIncremental Searchができるようになる
日本語サーチも問題ない

インストールは
1.[ここ](http://michael-mccracken.net/software/ISearchPlugin.html)からバイナリをダウンロードして
2.中にある"IncrementalSearchInputManager"フォルダを ~/Library/InputManagers/に移して(フォルダがなければ作ってね)
3.中にある DefaultKeyBinding.dictの内容を ~/Library/KeyBindings/DefaultKeyBinding.dictに追加(なければそれをコピーしてね)

これで
Ctrl + S : Incremental Search(前方一致)
Ctrl + R : Incremental Search(後方一致)
Ctrl + G : キャンセル
がCocoaアプリで機能する

(追記)[](http://journal.mycom.co.jp/column/osx/104/)で紹介されてたのね
##オートペアリングをキーバインドしようよ
[Macのキーバインドをいじる](http://d.hatena.ne.jp/keyesberry/20070312/p4)の続きだよ

~/Library/KeyBindings/フォルダの
DefaultKeyBinding.dict の書式は基本的に
"key" = "action:"; だけど
"key" = ("action1:","action2:","action3",...); とリストにすると
１つのキー操作に対して複数のアクションを実行できるんだ

で僕は、[TextMateでできるようなAuto-Paringの機能](http://d.hatena.ne.jp/keyesberry/20060701)をバインドしてみたよ
<pre>
  "(" = ( "insertText:", "()",
          "moveBackward:"
        );
  "[" = ( "insertText:", "[]",
          "moveBackward:"
        );
  "{" = ( "insertText:", "{}",
          "moveBackward:"
        );
</pre>
全角カッコにも対応できればいいんだけど
やり方が分からないんだ。もう少し勉強してみるよ
(追記)TextMateのparingとコンフリクトしているようなので、上記設定は止めました。
(追記:2007/3/19) 代りに、TextMateの&#8963;&#8679;w(ワードセレクト)、&#8963;&#8679;k(ラインキル)、&#8963;&#8679;d(ラインデュプリケート)を定義しました。
<pre>
	"^w" = "selectWord:";
	"^K" = ( "moveToBeginningOfLine:",
	 	     "deleteToEndOfLine:"
		    );
	"^D" = ( "moveToBeginningOfLine:",
	 	     "deleteToEndOfLine:",
		     "yank:",
		     "insertNewline:",
		     "yank:"			
		    );
</pre>
##グリフをキーバインドしようよ
[Macのキーバインドをいじる](http://d.hatena.ne.jp/keyesberry/20070312/p4)の続きだよ

キーボードショートカットをブログに書くとき
CommandとかControlとかAltとかShiftとかのModifierを
できれば&#8984;&#8963;&#8997;&#8679;みたいなGlyphで書ければうれしいよね

これらをマルチストロークにバインドしてくれた人がいるよ
[](http://pastie.caboo.se/4011)
これを例のDefaultKeyBinding.dictに書けば
&#8963;mとの組み合わせでGlyphが書けるようになるんだ

&#9251;&#8965;&#8677;&#8676;&#9003;&#8998;&#8984;&#8997;&#8963;&#8679;&#8682;←→↑↓&#8672;&#8674;&#8673;&#8675;&#8598;&#8600;&#8670;&#8671;&#9099;&#9167;

&#8984; : &#8963;m + &#8963;a
&#8963; : &#8963;m + &#8963;c
&#8997; : &#8963;m + &#8963;o
&#8679; : &#8963;m + &#8963;s
&#9099; : &#8963;m + &#8963;x
&#9167; : &#8963;m + x

もちろんよく使いそうなものは
シングルストロークにバインドしてもいいよね

マルチストロークのバインドの書式は
"^x" = {"u"  = "undo:"};のように
辞書のかたちになるんだね
emacsに慣れている人たちは
これを使えばいいんだね
経由：[](http://macromates.com/blog/archives/2006/07/10/multi-stroke-key-bindings/)